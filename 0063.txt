                                         2016 IEEE 36th International Conference on Distributed Computing Systems
                                                 CryptoLock (and Drop It):
                           Stopping Ransomware Attacks on User Data
                        Nolen Scaife                     Henry Carter                      Patrick Traynor             Kevin R.B. Butler
                     University of Florida           Villanova University                University of Florida        University of Florida
                        scaife@u.edu             henry.carter@villanova.edu             traynor@cise.u.edu             butler@u.edu
                    Abstract—Ransomware is a growing threat that encrypts a              methods of detecting ransomware, which inspect pro-
                users les and holds the decryption key until a ransom is               grams and their activity for malicious characteristics.
                paid by the victim. This type of malware is responsible for              Our system is the rst ransomware detection system that
                tens of millions of dollars in extortion annually. Worse still,          monitors user data for changes that may indicate trans-
                developing new variants is trivial, facilitating the evasion of many     formation rather than attempting to identify ransomware
                antivirus and intrusion detection systems. In this work, we present      by inspecting its execution (e.g., API call monitoring)
                CryptoDrop, an early-warning detection system that alerts a user         or contents. This allows CryptoDrop to detect suspicious
                during suspicious le activity. Using a set of behavior indicators,      activity regardless of the delivery mechanism or previous
                CryptoDrop can halt a process that appears to be tampering with          benign activity. Our system does not attempt to prevent
                a large amount of the users data. Furthermore, by combining             all les from loss and is not intended to replace a users
                a set of indicators common to ransomware, the system can be
                parameterized for rapid detection with low false positives. Our          normal anti-malware software; rather, CryptoDrop is de-
                experimental analysis of CryptoDrop stops ransomware from                signed to be effective even when the users anti-malware
                executing with a median loss of only 10 les (out of nearly              software has failed to block the malware. Our system
                5,100 available les). Our results show that careful analysis of         is built on Windows, a platform frequently targeted for
                ransomware behavior can produce an effective detection system            ransomware attacks, providing a realistic solution to “in-
                that signicantly mitigates the amount of victim data loss.              the-wild” threats. In doing so, we attack the core behavior
                                                                                         of ransomware in a novel and practical manner that other
                                      I.  INTRODUCTION                                   anti-malware technologies fundamentally cannot.
                    Encrypting ransomware (a.k.a. crypto ransomware) at-               • Identify three primary indicators suited to detect
                tempts to extort users by holding their les hostage. Such               malicious le changes: These indicators each measure
                ransomware differs from other types of malware in that its               an aspect of a les transformation, and when all three
                effects are reversible only via the cryptographic keys held by           have manifested, a ransomware le transformation has
                a remote adversary. Users can only regain access to their les           likely occurred. This union indication assists CryptoDrop
                through the use of anonymous payment mechanisms (e.g., Bit-              in reliably detecting ransomware while incurring few
                coin), further frustrating efforts to take down these campaigns.         false positives. These indicators have not been previously
                While this class of malware has existed for well over a decade,          employed in a ransomware detection system, and our
                its increasingly widespread use now causes tens of millions of           analysis of their effectiveness in isolation and unison
                dollars in consumer losses annually [37]. Compounding this               provides insight into the ability to detect ransomware.
                problem, an increasing number of law enforcement agencies              • Perform most extensive analysis of encrypting ran-
                have also been the victim of ransomware [4], [18], losing                somware to date: Demonstrate a 100% true positive rate
                valuable case les and forcing these organizations to ignore             over 492 distinct ransomware samples across 14 families
                their own advice and pay the attackers. As such, ransomware              after as few as 0 and a median of 10 (0.2%) les lost from
                represents one of the most visible threats to all users.                 our test corpus. Finally, we discuss the observed behavior
                                                                                         of our samples and discuss how CryptoDrop remains ro-
                    Combating ransomware is difcult for a number of reasons.            bust despite the signicant behavioral differences between
                First, this malware is easy to obtain or create [48] and                 families. Through reduction of the number of les lost,
                elicits immediate returns, creating lucrative opportunities for          we demonstrate that CryptoDrop reduces the need for the
                attackers. Second, the operations performed by such malware              victim to pay the ransom, choking attackers revenue and
                are often difcult to distinguish from those of benign software.         rendering the malware ineffective.
                Finally, ransomware often intentionally targets unsophisticated         The remainder of the paper is structured as follows: In
                users who are unlikely to follow best practices such as regular     Section II, we perform a literature analysis. In Section III,
                data backups. Accordingly, a solution to automatically protect      we dene and classify ransomware behaviors, our systems
                such users even in the face of previously unknown samples is        indicators, and demonstrate how these are insufcient for
                critical.                                                           fast detection in isolation. Section IV details CryptoDrops
                    In this paper, we make the following contributions:             implementation and its scoring and detection mechanisms. In
                                                                                    Section V, we obtain live ransomware samples, demonstrate
                   • Develop an early-warning system for ransomware:                CryptoDrops effectiveness against real-world attacks, and an-
                     CryptoDrop is fundamentally different from existing            alyze the behavior of the samples. We conclude in Section VI.
              1063-6927/16 $31.00 © 2016 IEEE                                   303
              DOI 10.1109/ICDCS.2016.46
                                                II.    RELATEDWORK
                          Existing techniques to detect malware attempt to classify
                     a given program as malware and stop it using two proper-
                     ties: what the malware is and what the malware does [38].
                     Anomaly detection IDS systems use various machine learning
                     and statistical techniques to determine whether a program is
                     performing atypical operations [17], [8], [23], [49], [29], [43],
                     but are often prone to false positives [5], [21], [47].
                          Signature matching, commonly found in most modern
                     antivirus and IDS deployments, analyzes programs based on
                     known malware characteristics and ags those that match
                     previously observed intrusions. Early signature detection sys-
                     tems used a variety of features to detect malicious code [28],
                     [45], and over years of development the characteristics in
                     modern malware signatures make this technique for classifying                            Fig. 1: The ransom demand from TeslaCrypt. The victim
                     known malware extremely accurate. However, malware that                                  is instructed to access a Tor hidden service and pay the ransom
                     has not been previously observed is difcult to identify in                              with Bitcoin. Some variants allow the victim to recover a small
                     these systems. Furthermore, recent research has shown that                               number of les for free as a gesture of goodwill.
                     evading signature detection is possible with relative ease when                                                       ANSOMWAREINDICATORS
                     the malware signatures used are too rigid [9], [24], [32],                                                 III.     R
                     [33]. While combining multiple IDS suites using different                                     Encrypting ransomware works by obfuscating the contents
                     techniques may provide some added accuracy [36], it is still                             of user les, often through the use of strong encryption
                     possible to use automated malware packing techniques to                                  algorithms. Victims have little recourse other than paying the
                     evade tiered anti-malware products [35], [46]. Rather than                               attacker to reverse this process [4], [6], [11]. Some attackers
                     matching known signatures of programs, le integrity monitors                            even enforce strict deadlines and host elaborate customer
                     such as Tripwire [26] alert the administrator when system-                               service sites to encourage victims to pay [50]. Figure 1 shows
                     critical les are modied. These monitors are based on simple                            an example of one such extortion demand.
                     hash comparisons and fail to distinguish between legitimate le
                     accesses and malicious modications. Such integrity checks                                    The ease with which ransomware can be written and
                     are primarily effective for les that rarely change; user data                           obfuscated limits the effectiveness of traditional signature-
                     is expected to change frequently. Accordingly, this type of                              based detection schemes [36]. Signature-based detection does
                     integrity monitoring is likely to be noisy and frustrate the user.                       little  to stop ransomware variants that take advantage of
                                                                                                              programmatic input via rogue USB devices [13], which can be
                          Recent work by Kharraz et al. explored several different                            attached to a system, and automatically open a terminal, type,
                     types of ransomware, including those that hold the operating                             and execute a program without writing malicious software to
                     system hostage or steal information [25]. These other kinds                              the disk. Such attack vectors fundamentally evade traditional
                     of ransomware are indeed a nuisance, but these types of ran-                             anti-malware and application whitelisting systems by avoiding
                     somware can be remedied by wiping the system or removing                                 their inspection point, execution from the disk. Solutions to
                     the disk and extracting the users important data. However,                              these attacks [44] require OS modication and are not widely
                     when the users data is encrypted (or deleted), these simple                             deployed. A more robust solution would be based on the
                     mitigations no longer apply and may prevent the victim from                              detection of the bulk transformation of a users data before it
                     paying the ransom and recovering his/her les. Andronio et al.                           completes, allowing the user to stop such transformation and
                     developed an analysis tool for detecting Android ransomware                              denying ransomware access to the totality of the user data.
                     through a combination of static and dynamic analysis tech-                               This “data-centric” approach minimizes the pressure to pay an
                     niques including monitoring for encryption calls and threat-                             adversary as the data loss can be minimized.
                     ening ransom messages [3]. This system is well-suited for                                     The signature behavior of ransomware is its encryption of
                     mobile platforms, where applications can often be analyzed                               the victims data. Ransomware must read the original data,
                     in depth before being posted to an app market [30], [7],                                 write encrypted data, and remove the original data to complete
                     [34]. On traditional desktop operating systems, however, these                           this transformation. Note that detecting calls to encryption
                     techniques would be easily evaded and introduce unacceptable                             libraries alone is not sufcient as many variants implement
                     delays in application installation or launch.                                            their own versions of these algorithms. The specic activities
                                                                                                              that ransomware performs can be rened into three classes:
                          Our work differs from these works because our system                                     Class A ransomware overwrites the contents of the original
                     monitors the users data for changes instead of directly inspect-                        le by opening the le, reading its contents, writing the
                     ing the program making the changes. Through this insight, we                             encrypted contents in-place, then closing the le. It may op-
                     build an early-warning system for ransomware that can detect                             tionally rename the le. Class B ransomware extends Class A,
                     a malicious program through examining how the users data                                with the addition that the malware moves the le out of the
                     is changing. In this paper, we refer to encrypting ransomware                            users documents directory (e.g., into a temporary directory).
                     as “ransomware” and focus on remedying this problem.                                     It then reads the contents, writes the encrypted contents, then
                                                                                                         304
                 moves the le back to the users directory. The le name              similarity-preserving hash functions [27], [40]. These hashes
                 whenmovingbacktothedocumentsdirectorymaybedifferent                   differ from traditional hash functions because they contain
                 than the original le name. Since the destination le name            someinformation about the source le in their output. Through
                 may not match the original during any move, the state of              measuring the similarity of two versions of the same le, we
                 the le must be carefully tracked each time a le is moved.           can also gain information about dissimilarity.
                 Class C ransomware reads the original le, then creates a new,           We selected sdhash [40] for this metric. This function
                 independent le containing the encrypted contents and deletes         outputs a similarity score from 0 to 100 that describes the
                 or overwrites (via a move) the original le. This class uses          condence of similarity between two les. sdhash assists in
                 two independent access streams to read and write the data.            determining if two les are homologous with a score of 100 in-
                     Additional operations may be performed to frustrate re-           dicating a high likelihood that two les are related. Conversely,
                 coverability. For example, ransomware family TeslaCrypt               the authors of this algorithm note that a condence score of
                 disables and removes the Windows volume shadow copies [14]            0 is “statistically comparable to that of two blobs of random
                 and other variants wipe the disks free space. We ignore these        data,” and this provides a key insight to how a ransomware-
                 operations because they do not directly alter user data.              encrypted le should be scored. Given the similarity hash of
                     Capturing the data-centric behavior of ransomware is crit-        the previous version of a le, a comparison with the hash of
                 ical to developing an effective detector. We have identied           the encrypted version of that le should yield no match, since
                 three primary and two secondary indicators through extensive          the ciphertext should be indistinguishable from random data.
                 analysis. Below, we discuss the technical details of each             Weshould therefore obtain a near-zero score when comparing
                 indicator and their relevance to ransomware. We then explore          an original copy of a users le to a ransomware-encrypted
                 how the union of such indicators — that is, we require all            version of that le.
                 primary indicators to be present — creates a strong detector          C. Shannon Entropy
                 with low false positives.
                     We selected these indicators because they broadly cover              Entropy is a simple indicator that provides information
                 the transformation that encrypting ransomware performs on             about the uncertainty of data. Some types of data, such as
                 user data. Other indicators of compromise, such as suspicious         encrypted or compressed data, are naturally high entropy.
                 strings, network trafc [41], and monitoring for ransom de-           Intuitively, a ransomware attack should result in consistently
                 mand windows [15], [3] are outside the scope of CryptoDrop            high entropy output as the malware reads the victims les and
                 since these indicators may not occur or may become obvious            writes the encrypted content. The Shannon entropy of an array
                 too late to protect the users data. We instead focus on the task     of bytes can be computed as the sum:
                 of protecting the users data from total loss, which requires our                               255
                 system to monitor this data as it changes. It may therefore be                             e = P log          1
                                                                                                                      Bi    2 P
                 helpful to think of these indicators as hints that a le may be                                 i=0            Bi
                 undergoing a transformation from usable to unusable.                                 F
                                                                                       for PB =         i    and Fi, the number of instances of byte
                                                                                              i    totalbytes
                 A. File Type Changes                                                  value i in the array. This produces a value from 0 to 8, where
                     The type of data stored in a le can be approximated              8 represents a perfectly even distribution of byte values in
                 using “magic numbers.” These signatures describe the order            the array. Encrypted les will tend to approach the upper
                 and position of specic byte values unique to a le type, not         bound 8, since each byte in a ciphertext should have a uniform
                 simply the header information. Since les generally retain their      probability of occurring. Others have previously proposed the
                 le type and formatting over the course of their existence, bulk      use of entropy in the space of malware detection [42], [39],
                 modication of such data should be considered suspicious.             [31], however these works focus on classifying the malware
                                                                                       sample and not on indicating user data transformation.
                     The file utility is a popular program for determining
                 le type. The default “magic” database library contains hun-          D. Secondary Indicators
                 dreds of le type signatures, ranging from specic programs              While the primary indicators provide the strongest sug-
                 (“Microsoft Word 2007+”) to general content (“Unicode text,           gestion of le modication by ransomware, two additional
                 UTF-7”). With this tool, we can track the le type both before        indicators ll gaps left by the primary indicators:
                 and after a le is written. If this type changes, we can infer
                 that some transformation has occurred. However, we note that          Deletion is a basic lesystem operation and is not generally
                 a single change in le type does not automatically imply              suspicious. For example, applications often create and delete
                 malicious actions. For example, when upgrading to a new               temporary les as part of normal operation. However, the
                 software version, the application may update the documents           deletion of many les from a users documents may indicate
                 format to comply with a new standard.                                 malicious activity. Class C ransomware uses le deletion
                                                                                       instead of overwriting an existing le to dispose of the original
                 B. Similarity Measurement                                             content. This class of ransomware performs a high number
                     Strong encryption should produce output that provides             of these operations; early detection of this type of malware
                 no information about the plaintext content. Accordingly, we           depends on capturing this operation.
                 assume that the output of ransomware-encrypted user data is           File type funneling occurs when an application reads an
                 completely dissimilar to its original content. Such meaning-          unusually disparate number of les as it writes. Applications
                 ful changes to content can be captured through the use of             that read multiple le types but write only a single type
                                                                                   305
                                 during an execution are not uncommon. A word processor, for                                                                                                            Applications and                                                  User Notifications
                                 example, may allow the user to embed various le types (e.g.,                                                                                                            Ransomware
                                 pictures and audio) but will typically only write a single le
                                 type (the output document). Ransomware takes this innocuous                                                                                                               CryptoDrop            Notifications, File Data, Context     Indicator Measurement
                                 case to an extreme. As ransomware encrypts and writes data,                                                                                                              Kernel Driver             Allow/Disallow Decisions
                                                                                                                                                                                                s                                                                              Caching
                                 we expect to see a smaller number of output le types. By                                                                                                      st
                                                                                                                                                                                                e           Anti-Virus
                                                                                                                                                                                                u
                                 tracking the number of le types a process has read and                                                                                                        q
                                                                                                                                                                                                e                                                                           Scorekeeping 
                                 written, the difference of these can be assigned a threshold                                                                                                    R      Filesystem Filters
                                                                                                                                                                                                sk
                                                                                                                                                                                                i
                                 before considering it suspicious.                                                                                                                              D                                                                             Detection
                                                                                                                                                                                                            Filesystem                                               CryptoDrop Analysis Engine
                                 E. Union Indication
                                         While exploring the behavior of ransomware, we observed                                                                                                               Disk
                                 that none of the benign programs we tested triggered all three
                                 of our primary ransomware indicators, while the vast majority
                                 of ransomware samples did. We demonstrate in Section V that                                                                                  Fig. 2: The architecture of CryptoDrop on Windows. The
                                 this union of primary indicators is crucial for early detection.                                                                             software lters lesystem reads and writes on user document
                                 Although each indicator provides value in isolation, we use                                                                                  folders using a lesystem lter similar to other anti-malware
                                 union indication to take action faster.                                                                                                      solutions. The ordering of the lesystem lter drivers is
                                                                                                                                                                              dependent on the other drivers installed and does not affect
                                 F. Indicator Evasion                                                                                                                         our system. Requests are then forwarded to the analysis engine
                                         Malware detection is an arms race. As defenders provide                                                                              where measurement, caching, and scorekeeping occurs.
                                 mitigations, adversaries will modify their techniques. We ex-
                                 pect the same to occur in the ransomware space. However,                                                                                     malicious threshold, our system pauses disk accesses for the
                                 evading the union of our three primary indicators will require                                                                               agged process and requests permission from the user to allow
                                 signicant effort on the part of an adversary. For instance,                                                                                 the process to continue. This system allows us to observe the
                                 while padding a le with low entropy bits may cause our                                                                                      cumulative behavior for each process over time, and allows us
                                 detector to miss it, such behavior will also concurrently skew                                                                               to watch for combinations of suspicious indicators rather than
                                 similarity hashes. Attempts to make output les appear to                                                                                    relying on any one indicator in isolation to catch ransomware.
                                 maintain their original format may also be possible, but not
                                 without dramatically skewing the remaining two indicators.                                                                                   B. Union Indication Scoring
                                 Accordingly, we posit that this work is a contribution because
                                 it raises the bar signicantly compared to existing ransomware                                                                                       The occurrence of all three primary indicators provides
                                 detection techniques, requires that future adversaries have                                                                                  strong insight into a processs behavior. In our testing, no
                                 much a deeper understanding of modern le systems and                                                                                        legitimate process triggered the union indicator, which we
                                 formats, and forces them to make very difcult engineering                                                                                   discovered is reliable for immediately detecting ransomware
                                 trade-offs to successfully evade all detectors.                                                                                              and halting its disk operations.
                                                                                                                                                                                      This scoring mechanism allows us to keep our scoring
                                                                                       MPLEMENTATION
                                                                         IV.         I                                                                                        thresholds low without incurring signicant false positives, in
                                         CryptoDrop focuses on detecting ransomware through                                                                                   a similar manner to the BotHunter IDS by Gu et al. [20],
                                 monitoring the real-time change of user data. The union                                                                                      which was able to observe zero false positives in a real de-
                                 of these individual indicators provides a strong measure of                                                                                  ployment. Because anomaly detection research has shown that
                                 suspiciousness of a process. By tracking these indicators and                                                                                the probability of a benign process incurring a false positive
                                 monitoring for this condition in a single running process                                                                                    on a single detection mechanism is high [5], we maintain
                                 over time, we can develop a reputation score that indicates                                                                                  a reputation score threshold for all processes. However, the
                                 whether or not the program is likely behaving maliciously.                                                                                   probability of a benign process activating a false positive on all
                                 Once a threshold score is reached, CryptoDrop alerts the user                                                                                three indicators is much lower (specically, it is the product of
                                 and suspends the suspicious process (or family of processes).                                                                                the probabilities of a false positive on each individual detector).
                                 In this way, we can prevent ransomware from completely                                                                                       CryptoDrops reliability is reinforced by ransomwares typical
                                 encrypting a victims les, and contain the amount of damage                                                                                 behavior, which frequently triggers all three primary indicators.
                                 in the event of infection. The primary challenge in constructing
                                 this system is detecting ransomware early while limiting false                                                                               C. State Tracking and Score Assessment
                                 positives that could make the system impractical to use.                                                                                             Figure 2 illustrates the CryptoDrop architecture. We in-
                                 A. Reputation Scoreboard                                                                                                                     strument the Windows kernel using a driver that allows us
                                                                                                                                                                              to interpose on calls between processes and the lesystem
                                         CryptoDrop monitors read and write accesses to the users                                                                            driver. Such an approach allows us to not only detect when
                                 protected directories (e.g., “My Documents”). Whenever a                                                                                     les are changed, but also to protect against the modication
                                 lesystem operation exhibits questionable characteristics that                                                                               of our mechanism by malware. This approach also prevents
                                 trigger CryptoDrops indicators, it increments the overall rep-                                                                              interference with disk encryption systems (e.g., BitLocker),
                                 utation score for that process. Once this score reaches a                                                                                    which operate between the lesystem and the disk.
                                                                                                                                                                       306
                       1) Entropy Measurement: Ransomware often writes ran-                       guest virtual machine running Windows 7 SP1 (64-bit) with
                   sompayment instructions into new text les in every directory.                 2GB of RAM. Each Windows guest was congured with its
                   We found that these small, low-entropy writes over-inuence                    rewall, anti-virus, and user account control disabled in order
                   basic averaging of the entropy. Through capturing the entropy                  to remove impediments to successful malware execution. All
                   of the atomic read/write operations, a weighted arithmetic                     tests were performed as a single administrative user. For safety,
                   mean of these entropy measurements is computed, where the                      network access was restricted on the hosts network stack
                   weight w is dened w =0.125 ×⌊e⌉×b, where b is the                             to prevent the spread of malware. Each virtual machine was
                   total number of bytes in the operation and ⌊e⌉ is the entropy                  reverted to a previous snapshot between samples to remove
                   value rounded to the nearest integer. The constant normalizes                  any possibility of experiments inuencing each other. Finally,
                   the weight to a value from 0 to 1. This weighting ensures                      this virtual machine was instrumented with CryptoDrop and
                   that low-entropy and small read/write operations do not over-                  congured with a non-union detection threshold of 200.
                   inuence the mean and provides a metric that captures a                            Weobtained 2,663 malware samples from VirusTotal using
                   processs behavior over time.                                                  ransomware-related search terms and known variant names.
                       When a protected le is read or written, we calculate the                  Thefact that these samples were labeled as ransomware by one
                   entropy of the bytes involved in this operation and update the                 or more anti-virus engines does not imply that those samples
                   respective weighted average Pread or Pwrite for the process                    actually are encrypting ransomware or that they will perform
                   performing the operation. After each update of a processs                     any operations to attack a victims data (e.g., they may simply
                   averages, if a process has performed at least one read and                     lock the screen). Additionally, ransomware often requires
                   one write, we calculate the difference of these means as                       online infrastructure, and this requirement is a heavy burden
                   e = PwritePread, where e ≥ 0. This delta determines                         on the future usefulness of any given sample. If command-
                   the extent that write entropy has exceeded read entropy. When                  and-control servers are taken ofine, the ransomware cannot
                   the system exceeds the threshold e ≥ 0.1, we consider the                     complete its task. Some samples may be mislabeled by anti-
                   operation suspicious. This measurement is stateless with regard                virus as ransomware, some may operate once and never again,
                   to the previous or future state of a le and occurs for every                  and others may detect our virtual environment. As a result, a
                   atomic read or write operation where the threshold is exceeded.                signicant part of our testing required culling inert, mislabeled,
                   While this threshold is small compared to the total range of                   and corrupt samples from our test set.
                   possible entropy values (0–8), this value provides resolution
                   for detecting the small entropy increase for compressed les                       Since ransomware generally attacks user data quickly after
                   (as discussed in Section III).                                                 execution begins, we ran each sample for 20 minutes or until
                                                                                                  detection occurred. We then veried the SHA-256 hashes of
                                            V.   EXPERIMENTS                                      the documents to ensure they were present and unmodied.
                                                                                                  This initial run of all samples took over 22 days to complete.
                       We now demonstrate how CryptoDrop detects and stops                        189 samples that had started to attack the provided documents
                   ransomware with a low number of user les lost and with few                    but had not completed in the time allotted were restarted with
                   false positives. As we will discuss below, union indication pro-               a one hour timeout. If no detection occurred and no les
                   vides high-speed detection capabilities for CryptoDrop without                 were modied, we marked the sample as “inert” and excluded
                   increasing the number of false positives.                                      it from future trials. Note that CryptoDrop does not have
                                                                                                  a detection timeout and is not affected by the run time of
                   A. Experimental Setup                                                          malware; the timeout was in place merely to prevent spending
                                                                                                  excess time on unusable samples. In total, 2,171 malware
                       Since ransomware attacks user data, we rst built a set                    samples were removed from the set. No removed samples had
                   of data representative of measured user document directories.                  modied any user les.
                   Using studies that have examined the distribution of le types                     CryptoDrop detects ransomware based on its behavior
                   over an entire lesystem [16], [2] and over user document                      against user data, so the number of families of ransomware
                   directories [22], we constructed a document corpus of 5,099                    we test is more important than the raw number of samples.
                   les spread over a nested directory tree with 511 total di-                    Each sample we test of the same family is unlikely to exhibit
                   rectories. First, we aggregated the data from the complete                     signicantly different behavior than previous ones, ultimately
                                                                    1, the Govdocs1 le
                   set of 10 Govdocs1 Corpus [19] threads                                         leading to skewed results. Of the various types of ransomware,
                   set of .docx, .xlsx, and .pptx les, the OPF Format                            Kharraz et al. discussed four unique variants of encrypting
                   Corpus [1], and Coldwells audio comparison les [10]. The                     ransomware [25]. We collected 14 distinct families of ran-
                   combination of these corpora contained 11,809 les. We then                    somware, including all four previously-discovered families,
                   approximated the proportions of le types needed for our                       making ours the most comprehensive study of encrypting
                   subset corpus and categorized each le such that we could                                               2 Table I shows the breakdown of the
                   make selections out of the categories, modeling the results                    ransomware to date.
                   in [22]. For each category, we made random selections from                     samples by family and class, including the number of les
                   the resulting data set and placed them into each directory of                  lost before detection. Due to the breadth of families that
                   our modeled corpus. Finally, the directory tree was placed                     CryptoDrop detected, we believe that the above methodology
                   into the users documents folder in a Cuckoo Sandbox [12]                      successfully culled unusable samples from our original set.
                     1Each of the 10 Govdocs1 “threads” consist of a randomly-selected 1,000        2One sample, known to McAfee as Ransom-FUE, was tested but excluded
                   les from the complete Govdocs1 corpus. These were preselected by the          from family counts because different anti-malware products mark it as generic
                   Govdocs1 maintainers for use in research projects.                             malware or belonging to disparate ransomware families.
                                                                                              307
                                                                                                                    F
                                                                                                                        amily                # Class A     # Class B    # Class C      Total      Median FL
                                                                                                                       CryptoDefense                                       18        18 (3.66%)      6.5
                                                                                                                     CryptoFortress            2                                    2 (0.41%)      14
                                                                                                                       CryptoLocker             13            16            2        31 (6.30%)      10
                                                                                                                       CryptoLocker (copycat)                  1            1         2 (0.41%)      20
                                                                                                                     CryptoTorLocker2015       1                                    1 (0.20%)       3
                                                                                                                       CryptoWall                2                          6         8 (1.63%)      10
                                                                                                                       CTB-Locker                1            120           1       122 (24.80%)     29
                                                                                                                     Filecoder                51             9           12        72 (14.63%)     10
                                                                                                                       GPcode                   12                          1        13 (2.64%)      22
                                                                                                                       MBLAdvisory                                          1         1 (0.20%)       9
                             

                                                                      PoshCoder                 1                                    1 (0.20%)      10
                                                                                                                                 2                             1                      1 (0.20%)      19
                                                                                                                       Ransom-FUE
                                                                                                                       TeslaCrypt               148                         1       149 (30.28%)     10
                                                                                                          Virlock                                             20        20 (4.07%)       8
                                                                                                                       Xorist                   51                                   51 (10.37%)      3
                                                               	
                                              # Samples            282 (57.32%)  147 (29.88%)  63 (12.80%)  492 (100%)      10
                       Fig. 3: The cumulative percentage of samples detected at each                                 TABLE I: This table shows the breakdown of the 492 ran-
                       samples number of les lost before detection. The median                                     somware samples that CryptoDrop detected across each class
                       number of les lost before detection was 10, and CryptoDrop                                   and its median les lost result. We matched each sample
                       detected all 492 samples with 33 or fewer les lost.                                          CryptoDrop detected with a family name chosen by popularity
                                                                                                                     from detection names from 57 antivirus vendors.
                            Weconrminthisdata that there is a relative lack of diver-
                       sity within each familys behavior. In both the TeslaCrypt                                         In the median case, the system detected ransomware after
                       and CTB-Locker families, which consist of over half of                                        only 10 of the 5,099 test les (0.2%) were lost. We observe
                       the working samples we obtained, two or fewer samples                                         that Class B samples had the highest number of les lost,
                       showed behaviors beyond their families primary behavior                                      and we found that this is due to these samples attacking the
                       class. The greatest diversity was found in the Filecoder                                      users smallest documents rst. We discuss this in detail in
                       and CryptoLockerfamilies,thoughthesetwofamilynames                                            Section V-C. By protecting the majority of the user data, our
                       are often used as generic ransomware detection names. As                                      robust approach outperforms traditional anti-malware which
                       antivirus detection names evolve, samples in these two families                               allows the complete encryption of the data to occur if the
                       may be further rened. Due to the homogeneous nature of                                       ransomware is not immediately detected.
                       the behavior in each sample, our data shows that CryptoDrop                                        2) Union Indicator Effectiveness: All three primary indi-
                       remains robust against many forms of encrypting ransomware                                    cators proved valuable in the majority of samples, with 457
                       despite low counts of usable samples in some families. Because                                (93%) having at least one occurrence of union indication.
                       our study covered nearly four times the number of families of
                       the previous study [25] and there was little diversity within                                 We observe that this indicator enables CryptoDrop to detect
                       families, there was little need to collect additional samples.                                samples in as few as one le lost due to this both dramatically
                                                                                                                     increasing the current score of a process and lowering that
                                                                                                                     processs detection threshold. Accordingly, the ransomware is
                       B. Ransomware Detection                                                                       able to encrypt fewer les before detection.
                            CryptoDrop detected all the remaining 492 samples,                                            We found our sample set included 63 samples of Class C
                       quickly protecting the majority of victims data with as few as                               ransomware, which can evade union indication by writing its
                                                                             3 This result highlights
                       zero les encrypted before detection.                                                         data into separate les. However, 41 of these moved the new
                       the required actions of ransomware and the effectiveness of                                   le over the original content, allowing linking the original and
                       our indicators at detecting this type of malware. Below, we                                   new content and ultimately leading to union detection. The
                       discuss the ability of our system to protect user data and the                                remaining 22 samples evaded union detection but were unable
                       effectiveness of union indication.                                                            to evade overall detection due to the large number of high-
                            1) Data Loss: The amount of data lost before detection                                   entropy writes and deletes it performed. CryptoDrops low
                       occurs is our most valuable metric. When CryptoDrop is                                        non-union threshold mechanism allowed these samples to be
                       able to detect the ransomware more quickly, fewer les are                                    detected with a median loss of 6 les.
                       encrypted by the ransomware, thus protecting more of the                                           The 13 remaining samples that did not trigger union
                       users data. Figure 3 shows the data loss as a cumulative plot                                indication (but were detected) were all Class A and did not
                       of the number of les lost before detection. The number of                                    have a similarity indicator alert before detection, preventing
                       les lost in each case is dependent on the particular variant                                 union detection on these samples. This does not mean that the
                       and the order in which it attacks les. For example, samples                                  malware successfully evaded the similarity indicator, only that
                       which attack high entropy les rst (e.g., .docx) experience a                                CryptoDrop detected the sample before the similarity indicator
                       delay before being assigned points for increasing le entropy.                                triggered. The experimental results emphasize CryptoDrops
                       These samples perform high-entropy reads early, resulting in                                  ability to detect all samples in a similar number of les. Union
                       a small delta between read and write entropies, but as these                                  indication, however, is critical to accelerating these detections
                       samples move to other les in the users documents, this                                      to as few as one le lost.
                       advantage quickly disappears. Furthermore, some samples do
                       not prioritize the same le types as others. This behavior has                                C. Data-Centric Ransomware Behavior
                       no effect on CryptoDrops ability to detect malware, as the
                       primary indicators quickly uncover the ransomware.                                                 Weinitially expected to nd that most ransomware samples
                                                                                                                     perform a depth-rst search using ordered lists of directories
                         3Two Class C samples created new les but did not successfully remove                       and upon reaching the deepest les, sequentially encrypt them.
                       the original les. For more information, see Section V-C.                                     After the experiments, however, we found differing results
                                                                                                                308
                                  (a) TeslaCrypt                            (b) CTB-Locker                              (c) GPcode
                 Fig. 4: This tree represents the directory tree we lled with our modeled test corpus documents. The root of the provided
                 documents directory is located in the center of the tree. The lled (red) nodes represent those directories where at least one
                 of our les was read or written before CryptoDrop detected and stopped the malware. Each of these samples uses a different
                 algorithm for attacking the victims data. From left to right, these samples are Classes A, B, and C, though the classication of
                 the ransomware is unrelated to the order that it encrypts les.
                 between samples as shown in Figure 4. Each graph in this             the root directory and moving down the tree. This sample is
                 gure shows the directory tree (rooted in the center of the          particularly notable because it did not modify or delete any of
                 graph), with shaded nodes representing those directories where       our test les before being detected. This Class C sample read
                 the malware read or wrote a le.                                     les from each directory it accessed and wrote a new le. The
                    TeslaCrypt uses a depth-rst search, as shown in Fig-             sample did attempt to delete the original content, but some of
                 ure 4a. It starts accessing les once it has reached the deepest     our test les were marked read-only on the lesystem, which
                 directory. The sample did not begin encrypting les in the rst      this sample was uniquely unable to work around. Regardless,
                 directory it accessed, instead writing the decryption instruc-       CryptoDrop detected this sample due to the high entropy delta
                 tions/ransom demand into that directory. It began encrypting         between the les it was reading and writing. If this sample
                 our test corpus with a PDF in the second directory it accessed,      had been able to successfully delete the les, the number of
                 despite a PDF being available in the rst directory.                 les lost would have been ≤ 6. It is surprising that this sample
                                                                                      remains functional, as it was rst submitted to VirusTotal in
                    CTB-Locker is shown in Figure 4b. This sample attacks             2008. This may also provide some clue as to why this sample
                 les with certain extensions (.txt and .md) in ascending             had errors with basic le functionality.
                 order by le size. The set of les the samples encrypted before         Ultimately, the ordering of the les attacked by the mal-
                 detection was composed of les throughout the le corpus we          ware inuences CryptoDrops speed to detect and stop the
                 provided the malware; the sample encrypted the next le in           ransomware, though we note that there may be future opti-
                 size ascending order regardless of whether or not it existed         mizations to the indicators to assist with detecting attacks on
                 in a different directory. This behavior is curious because one       corpora of small les. One such optimization might increase
                 might assume that a victims largest les are the ones that          the points assessed on certain indicators when others are
                 contain the most information and therefore have a higher             unavailable. We leave dynamic scoring to future work but note
                 likelihood of being valuable. Since the malware attacked the         that this may have an adverse effect on false positives.
                 smallest les in the corpus, 26 of these les lost have sizes
                 < 512B, causing an above-average number of les to be                D. File Format Attack Frequency
                 lost. sdhash is unable to generate similarity scores for such
                 small les, causing union detection to be impossible until the          We constructed the set of le extensions that each sample
                 malware has moved past this threshold. To test this hypothesis,      attacked and then calculated the frequency of those extensions
                 we reran one of these samples with a corpus missing all              among all of the samples. For example, if a sample accessed
                 of the les with sizes <     512B. The number of les lost           more than one PDF le, the data shows a single PDF access
                 on this run was 7, far fewer than the 29 previously lost.            for that sample. This data is shown in Figure 5 and provides
                 Through our experimental observations, we believe situations         a glimpse into ransomwares priority of le formats.
                 like this can be remedied in future versions of CryptoDrop              The data indicates a strong preference for attacking pro-
                 through automatic identication of conditions unfavorable to         ductivity les over other kinds of media including pictures
                 individual indicators. Once identied, CryptoDrop could adjust       and music. It is unclear whether these le formats appear
                 the number of reputation points assessed up or down for              more frequently in the early accesses of ransomware simply
                 individual indicators, leading to faster detection even when         because they are common or if they represent data that is more
                 union indication is not possible.                                    valuable to the victim (and therefore more likely to cause a
                    GPcode, shown in Figure 4c, accesses les starting at             ransom payment). We leave this discussion for future work, but
                                                                                  309
                                                            
                                                            
                                                            
                                                           %& 
                                                            
                                                              
                                                                      	
  	 
    

  	       	  !               	   
         "
   !           	   	   #
                                                                                                                                      $
	
                           Fig. 5: This gure shows the frequencies of aggregate le extensions accessed by the 492 live ransomware samples we obtained.
                           The data was collected until CryptoDrop detected the sample, causing the data to represent the rst les attacked by each sample.
                           Overall, the samples attacked common productivity formats rst.
                           note that the top four le formats (.pdf, .odt, .docx, and                                                         to be made to a users protected documents. Techniques used
                           .pptx) represent compressed, high-entropy les. Although                                                           in static malware analysis works (e.g., providing a set of
                           these les exhibit far less entropy increase when encrypted                                                        known-good binaries alongside bad ones) will not work since
                           than other les (see Section III for details), CryptoDrops                                                        CryptoDrop does not analyze binaries for malicious traits.
                           sensitivity to this increase nevertheless enables fast detection.                                                  Likewise, techniques used in dynamic malware analysis (e.g.,
                                                                                                                                              passively observing benign activity on a system and running
                           E. Ransomware Scripts                                                                                              the detector on it later) will not work since CryptoDrop needs
                                                                                                                                              to measure the users documents before and after each change.
                                  Onefamily of ransomware we obtained, PoshCoder,was                                                          Below, we discuss the results of our experiments with benign
                           developed in PowerShell. This sample was particularly notable                                                      programs and show that our system remains robust.
                           because it underlines that ransomware does not need to be                                                                We evaluated thirty common Windows applications on
                           a compiled binary. As a result, it can be quickly morphed                                                          the same virtual machine conguration used to test malware
                           into an unknown variant and typed or piped directly into an                                                        samples and found only one false positive. That false positive,
                           interpreter. Signature-based anti-malware technologies cannot                                                      7-zip, was expected as it reads a large number of disparate les
                           defend against this malware because it is not necessary for                                                        and generates high entropy output (similar to ransomware).
                           this malware to exist on the disk of the victim host. It can be                                                    We discuss mitigating this specic type of false positive in
                           constructed, executed, and completed entirely in memory.                                                           the following section. Furthermore, no application exhibited
                                  This particular sample continues to have an extremely low                                                   all three primary indicators. Our Windows application data set
                           detection rate among anti-virus vendors, with only 8 of 57                                                         includes: 7-zip, Adobe Lightroom, Avast Anti-Virus, Chocolate
                                                                                                              4 CryptoDrop,
                           products detecting the sample as of submission.                                                                    Doom, Chrome, Dropbox, F.lux, GIMP, ImageMagick, iTunes,
                           however, detected this sample after only 11 les were lost.                                                        Launchy, LibreOfce Calc, LibreOfce Writer, Microsoft Ex-
                           To more fully demonstrate the issue of signature-based ran-                                                        cel, Microsoft Ofce Viewers, Microsoft Word, MusicBee,
                           somware detection, we added a single character to the above                                                        Paint.NET, PhraseExpress, Picasa, Pidgin, Piriform CCleaner,
                           sample and submitted the le back to VirusTotal. Two of the 6                                                      Private Internet Access VPN, ResophNotes, Skype, Spotify,
                           products which detected the original sample no longer detected                                                     Sticky Notes, SumatraPDF, uTorrent, and VLC Media Player.
                           the malware. Since CryptoDrop is focused on the changes                                                                  For space limitations, we are unable to thoroughly discuss
                           to user data, not the malwares contents or its execution,                                                         the testing methods used for all thirty applications. However, to
                           our system is well- positioned to stop ransomware which                                                            get better insight into how CryptoDrop analyzed benign appli-
                           manipulates the lesystem using high-level APIs.                                                                   cations, we analyze ve important applications below. Figure 6
                           F. False Positives                                                                                                 shows the number of false positives that would have occurred
                                                                                                                                              at varying detection thresholds with these ve applications.
                                  While CryptoDrop is effective at quickly detecting ran-                                                     In our analysis, we demonstrate that our threshold selection
                           somware, we note that any evaluation of its real-world utility                                                     minimizes false positives while maintaining fast detection of
                           must also include a discussion on incorrect detection of                                                           ransomware. The score of each process at the end of each
                           benign activity. False positive analysis for a system such as                                                      experiment is listed next to the application name.
                           CryptoDrop is challenging since its analysis requires changes                                                            Adobe Lightroom (107): We imported a set of 1,073
                               4We note that this metric does not mean that a particular anti-virus product                                   JPEG image les. We then performed an “automatic tone”
                           would not detect this sample in real- world conditions. When provided this                                         function on every picture, converted 5 photos to black-and-
                           sample with no additional context, it did not detect.                                                              white, and exported these 5 photos to the users documents
                                                                                                                                        310
                                                                                  a detection occurred while attempting to create an archive of
                                                                                   the user documents directory. We believe that a CryptoDrop
                                                                                  detection of this behavior is normal, expected, desirable, and
                                                                                   not overwhelmingly invasive. Future versions of ransomware
                            ,	
                                       may simply employ the users own (or a bundled) GPG or
                                                                                   compression utility to perform encryption. Since CryptoDrop
                                                                                  is looking for bulk transformation, which these applications
                                                                       perform, our system can notify the user of this suspicious
                                         '	()	*"+"	                       activity in case it is malicious.
                Fig. 6: The number of false positives registered against ve
                top Windows applications for a range of non-union thresholds.
                Duringourmalware-testing experiments, the threshold for non-       H. Performance
                union detection was congured at 200.                                 The initial research version of CryptoDrop is unopti-
                folder. ImageMagick (0): We performed a batch modication          mized. It contains many synchronous calls, verbose logging,
                of the same 1,073 JPEG image les, using the ImageMagick           debugging measurements, and other performance-decreasing
                mogrify utility. Each picture was rotated 90 degrees and           functionality. Compiler optimizations were disabled to ensure
                saved in-place. iTunes (16): Before opening iTunes, we rst        correct operation and assist in debugging during our experi-
                deleted the iTunes library to force it to generate a new one.      ments. We traced our code while performing modications to
                Wethen opened iTunes, imported all 70 of the Coldwell audio        protected les and observed that this version of CryptoDrop
                comparison les [10], and allowed iTunes to convert any les       introduced overhead latencies for le open and read operations
                that were unsupported. We played three songs, then converted       of less than 1ms. Close operations added an average latency of
                all of the audio les to AAC format using iTunes built-in          1.58ms. Write and rename operations are the most expensive
                conversion function. Microsoft Word (0): We created a new          with additional latency of 9ms and 16ms, respectively. Cryp-
                blank document and entered 5 paragraphs of text, then saved        toDrop does not inspect les outside of the users documents
                the le. We then created a table, added one paragraph of text to   directory, so operating system and program accesses to other
                each cell, adjusted the formatting, and saved the le again. We    les (including their own) are not affected.
                imported a photo into the le, and saved the le once again.          As an example, the high latency from write and rename
                Finally, we inserted a “SmartArt” graphic, added text to it, and   operations often manifests during measurement. During these
                saved. Microsoft Excel (150): We created a blank document          operations, the le is often locked and cannot be opened by
                andlled in two 500-cell columns with values. We then created      CryptoDrop for inspection; when this happens, CryptoDrop
                a line chart of these two columns, saved the document, and         switches context and reads the le using the kernel code.
                closed Excel. We re-opened Excel, added another column of          Currently, our system writes this data back to temporary
                values, added a scatter plot of these, and saved the le again.    les on the disk so it can be manually inspected later for
                    These scores represent the window of time from process         correctness. One major optimization would be to perform these
                start to the time we completed the task. Though some of            measurements without additional disk access, heavily reducing
                the scores may seem higher than expected, we note that             these latencies. We believe that with future optimizations,
                this time window is not a similar scale to that of the ran-        CryptoDropcanberunonalivesystemwithasmalloverhead.
                somware samples. Due to the extremely aggressive nature of
                ransomware, we were generally able to detect real ransomware                                   ONCLUSION
                                                                                                        VI. C
                samples seconds after they began accessing user data. Our             Ransomware continues to plague unsuspecting victims due
                false positive tests, however, took tens of minutes of high        to its use of strong cryptography. Victims often have little re-
                disk activity to complete. Our Lightroom test took nearly          course other than to pay the ransom, fueling a vibrant economy
                an hour as the les were copied, indexed, and added to the         for attackers who can deploy new variants with ease. In this
                softwares library. Monitoring any time window presents an         paper, we limit attackers and reduce the incentive for victims to
                evasion opportunity to ransomware as it can change its rate        paywithCryptoDrop,anearly-warningsystemforransomware
                of attack to overcome the window. However, research into           attacks. Our solution targets ransomware by monitoring the
                time window parameterization may lead to another primary           victims data and detecting the behaviors that ransomware must
                indicator in future versions of CryptoDrop.                        perform. We rst identify these required operations, classify
                G. Limitations                                                     ransomware into three major classes, and develop indicators
                                                                                   that inspect, capture, and alert on ransomware while avoiding
                    CryptoDropisunabletodeterminetheintent of the changes          benign applications. We discover that ransomware frequently
                it inspects. For example, it cannot distinguish whether the        trips all of these primary indicators, while legitimate appli-
                user or ransomware is encrypting a set of documents. This          cations do not, creating a shortcut to detecting ransomware
                fundamental limitation requires our system to notify the user      with fewer les lost. Our experiments test CryptoDrop against
                when suspicious activity occurs and allow the user to make         492 real-world ransomware samples (representing 14 distinct
                the nal decision on whether the activity is desired. As a         families, the largest study of encrypting ransomware to date)
                result, we expect that programs such as GPG and PGP, com-          and nd a 100% detection rate with as few as zero victim les
                pression applications, and other applications which perform        lost before detection. With few les lost, the burden to pay
                similar transformations will cause a CryptoDrop detection          for victims of ransomware is reduced or removed, protecting
                when applied to many user documents. While testing 7-zip,          users and dismantling the economy of attackers.
                                                                               311
                                                  ACKNOWLEDGMENTS                                                  [24]   S. Jana and V. Shmatikov. Abusing le processing in malware detectors for fun
                                                                                                                          and prot. In IEEE Symposium on Security and Privacy (S&P), 2012.
                           The authors would like to thank EldoS for access to                                     [25]   A. Kharraz, W. Robertson, D. Balzarotti, L. Bilge, and E. Kirda. Cutting the
                      their driver framework and VirusTotal for providing malware                                         gordian knot: A look under the hood of ransomware attacks. DIMVA, 2015.
                      samples. This work was supported in part by the US National                                  [26]   G. H. Kim and E. H. Spafford. The design and implementation of tripwire: A le
                      Science Foundation under grant numbers CNS-1464088 and                                              system integrity checker. In Proceedings of the ACM Conference on Computer
                                                                                                                          and Communications Security, 1994.
                      CNS-1540217. Any opinions, ndings, and conclusions or                                       [27]   J. Kornblum. Identifying almost identical les using context triggered piecewise
                      recommendations expressed in this material are those of the                                         hashing. Digital Investigation, 3, Supplement(0), 2006.
                      authors and do not necessarily reect the views of the NSF.                                  [28]   S. Kumar and E. H. Spafford. A generic virus scanner for c++. In Proceedings
                                                                                                                          of the Computer Security Applications Conference, 1992.
                                                                                                                   [29]   A. Lanzi, D. Balzarotti, C. Kruegel, M. Christodorescu, and E. Kirda. Access-
                                                        REFERENCES                                                        Miner: Using system-centric models for malware protection. In Proceedings of
                                                                                                                          the ACM Conference on Computer and Communications Security (CCS), 2010.
                        [1]  OPF     format    corpus.         http://openpreservation.org/technology/corpora/     [30]   C. Lever, M. Antonakakis, B. Reaves, P. Traynor, and W. Lee. The core of the
                             opf-format-corpus/.                                                                          matter: Analyzing malicious trafc in cellular carriers.  In Proceedings of the
                        [2]  N. Agrawal, W. J. Bolosky, J. R. Douceur, and J. R. Lorch. A ve-year study of               Network and Distributed System Security Symposium (NDSS), 2013.
                             le-system metadata. ACM Transactions on Storage (TOS), 2007.                         [31]   R. Lyda and J. Hamrock. Using entropy analysis to nd encrypted and packed
                        [3]  N. Andronio, S. Zanero, and F. Maggi. HelDroid: Dissecting and detecting mobile              malware. IEEE Security and Privacy, 5(2), 2007.
                             ransomware. In Proceedings of the International Symposium on Research in              [32]   D. Maiorca, I. Corona, and G. Giacinto.     Looking at the bag is not enough
                             Attacks, Intrusion and Detection (RAID), 2015.                                               to nd the bomb: An evasion of structural methods for malicious PDF les
                        [4]  E.   Arnold.         Tennessee    sheriff  pays   ransom    to   cybercriminals,             detection.  In Proceedings of the ACM Symposium on Information, Computer
                             in     bitcoin.               http://www.bizjournals.com/memphis/blog/2014/11/               and Communications Security, 2013.
                             tennessee-sheriff-pays-ransom-to-cybercriminals-in.html, 2014.                        [33]   J. A. P. Marpaung, M. Sain, and H.-J. Lee. Survey on malware evasion techniques:
                        [5]  S. Axelsson.    The base-rate fallacy and its implications for the difculty of              State of the art and challenges.     In International Conference on Advanced
                             intrusion detection. In Proceedings of the ACM Conference on Computer and                    Communication Technology (ICACT), 2012.
                             Communications Security (CCS), 1999.                                                  [34]   Y. Nadji, J. Gifn, and P. Traynor. Automated remote repair for mobile mal-
                        [6]  D. Carrigan. Police departments hit by ransomware virus. http://www.wcsh6.                   ware. In Proceedings of the Annual Computer Security Applications Conference
                             com/story/news/local/2015/04/10/police-departments-hit-by-ransomware-virus/                  (ACSAC). ACM, 2011.
                             25593777/, 2015.                                                                      [35]   J. Oberheide, M. Bailey, and F. Jahanian. PolyPack: An automated online packing
                        [7]  S. Chakradeo, B. Reaves, P. Traynor, and W. Enck. MAST: Triage for market-                   service for optimal antivirus evasion. In Proceedings of the USENIX Conference
                             scale mobile malware analysis. In Proceedings of ACM Conference on Security                  on Offensive Technologies, 2009.
                             and Privacy in Wireless and Mobile Networks (WiSec). ACM, 2013.                       [36]   J. Oberheide, E. Cooke, and F. Jahanian. CloudAV: N-Version antivirus in the
                        [8]  V. Chandola, A. Banerjee, and V. Kumar. Anomaly detection: A survey. ACM                     network cloud. In USENIX Security Symposium, 2008.
                             Comput. Surv., 41(3), 2009.                                                           [37]   G. OGorman and G. McDonald. Ransomware: A growing menace. Technical
                        [9]  X. Chen, J. Andersen, Z. M. Mao, M. Bailey, and J. Nazario. Towards an under-                report, Symantec Corporation, 2012.
                             standing of anti-virtualization and anti-debugging behavior in modern malware.        [38]   A. Patcha and J.-M. Park. An overview of anomaly detection techniques: Existing
                             In IEEE International Conference on Dependable Systems and Networks, 2008.                   solutions and latest technological trends. Computer Networks, 51(12), 2007.
                       [10]  N. Coldwell. Comparison of audio compression. http://nigelcoldwell.co.uk/audio/.      [39]   R. Perdisci, A. Lanzi, and W. Lee.     Classication of packed executables for
                       [11]  D.     Common.               Ransomware       victims     pay     cybercriminals             accurate computer virus detection. Pattern recognition letters, 29(14), 2008.
                             to     save    family     photos.            http://www.cbc.ca/news/technology/       [40]   V. Roussev. Data ngerprinting with similarity digests. In Advances in Digital
                             ransomware-victims-pay-cybercriminals-to-save-family-photos-1.2962106,                       Forensics VI, IFIP Advances in Information and Communication Technology.
                             2015.                                                                                        Springer Berlin Heidelberg, 2010.
                       [12]  Cuckoo Foundation. Automated malware analysis - cuckoo sandbox. http://www.           [41]   N. Scaife, H. Carter, and P. Traynor. OnionDNS: A seizure-resistant top-level
                             cuckoosandbox.org/.                                                                          domain. In In IEEE Conference on Communications and Network Security (CNS),
                       [13]  C. Cuevas and C. Shaffer. Raising the white ag. http://www.shmoocon.org/2012/               2015.
                             videos/ShafferCuevas-RaisingTheWhiteFlag.m4v, 2012. Presented at ShmooCon.            [42]   I. Sorokin.   Comparing les using structural entropy.    Journal in Computer
                       [14]  T. Dewan.      Teslacrypt joins ransomware eld.       https://blogs.mcafee.com/             Virology, 7(4), 2011.
                             mcafee-labs/teslacrypt-joins-ransomware-eld, 2015.                                   [43]   A. Tang, S. Sethumadhavan, and S. Stolfo.         Unsupervised Anomaly-based
                       [15]  C. J. Dietrich, C. Rossow, and N. Pohlmann. Exploiting visual appearance to                  Malware Detection using Hardware Features. In Proceedings of the International
                             cluster and detect rogue software. In Proceedings of the ACM Symposium on                    Symposium on Research in Attacks, Intrusion and Detection (RAID), 2014.
                             Applied Computing. ACM, 2013.                                                         [44]   D. J. Tian, A. Bates, and K. Butler. Defending against malicious USB rmware
                       [16]  J. R. Douceur and W. J. Bolosky. A large-scale study of le-system contents. In              with GoodUSB. In Proceedings of the Annual Computer Security Applications
                             Proceedings of the ACM SIGMETRICS International Conference on Measurement                    Conference (ACSAC). ACM, 2015.
                             and Modeling of Computer Systems, 1999.                                               [45]   P. Traynor, M. Chien, S. Weaver, B. Hicks, and P. McDaniel. Noninvasive methods
                       [17]  S. Forrest, S. A. Hofmeyr, A. Somayaji, and T. A. Longstaff. A sense of self for             for host certication. ACM Transactions on Information and System Security,
                             unix processes. In Proceedings of the IEEE Symposium on Security and Privacy                 11(3), 2008.
                             (S&P), 1996.                                                                          [46]   X. Ugarte-Pedrero, D. Balzarotti, I. Santos, P. G. Bringas, and S. Antipolis. SoK
                       [18]  B. Fraga. Swansea police pay $750 “ransom” after computer virus strikes. The                 : Deep Packer Inspection : A Longitudinal Study of the Complexity of Run-Time
                             Herald News, 2013.                                                                           Packers. In IEEE Symposium on Security and Privacy (S&P), 2015.
                       [19]  S. Garnkel, P. Farrell, V. Roussev, and G. Dinolt. Bringing science to digital       [47]   A. Viswanathan, K. Tan, and C. Neuman. Deconstructing the assessment of
                             forensics with standardized forensic corpora. Digital Investigation, 6, Supple-              anomaly-based intrusion detectors. In Proceedings of the International Symposium
                             ment(0), 2009.                                                                               on Research in Attacks, Intrusion and Detection (RAID), 2013.
                       [20]  G. Gu, P. Porras, V. Yegneswaran, M. Fong, and W. Lee. BotHunter: detecting           [48]   J. Walter. Meet tox: Ransomware for the rest of us. https://blogs.mcafee.com/
                             malware infection through IDS-driven dialog correlation. In Proceedings of the               mcafee-labs/meet-tox-ransomware-for-the-rest-of-us/, 2015.
                             USENIX Security Symposium, 2007.                                                      [49]   C. Warrender, S. Forrest, and B. Pearlmutter. Detecting intrusions using system
                                               ´                                                                         calls: alternative data models. In Proceedings of the IEEE Symposium on Security
                       [21]  D. Hadziosmanovic, L. Simionato, D. Bolzoni, E. Zambon, and S. Etalle. N-gram                and Privacy (S&P), 1999.
                             against the machine: On the feasibility of the N-gram network analysis for binary     [50]   H. Weisbaum. CryptoLocker crooks launch customer service site. http://www.
                             protocols. In Proceedings of the International Symposium on Research in Attacks,             cnbc.com/id/101195861, 2013.
                             Intrusion and Detection (RAID), 2012.
                       [22]  B. J. Hicks, A. Dong, R. Palmer, and H. C. Mcalpine. Organizing and managing
                             personal electronic les: A mechanical engineers perspective. ACM Transactions
                             on Information Systems (TOIS), 26(4), 2008.
                       [23]  S. A. Hofmeyr, S. Forrest, and A. Somayaji. Intrusion detection using sequences
                             of system calls. International Journal of Information and Computer Security,
                             6(3), 1998.
                                                                                                              312
