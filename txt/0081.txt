                                                                   Imperfect Forward Secrecy:
                                                       HowDifﬁe-HellmanFails in Practice
                                                ¶                                               ∗                                  ¶                                 †                                §
                        David Adrian                Karthikeyan Bhargavan                            Zakir Durumeric                   Pierrick Gaudry                   Matthew Green
                                                              ¶                                ‡                               ¶                                      †                            ‡
                           J. Alex Halderman                      Nadia Heninger                    DrewSpringall                   EmmanuelThomé LukeValenta
                                                                      ¶                            ¶                                                      k                                      †
                            Benjamin VanderSloot                           Eric Wustrow                 Santiago Zanella-Béguelin                             Paul Zimmermann
                                      ∗INRIA Paris-Rocquencourt                          † INRIA Nancy-Grand Est, CNRS, and Université de Lorraine
                                kMicrosoft Research                    ‡ University of Pennsylvania                       § Johns Hopkins                 ¶University of Michigan
                                                         For additional materials and contact information, visit WeakDH.org.
                    ABSTRACT                                                                                     coded, or widely shared Diﬃe-Hellman parameters has the
                   Weinvestigate the security of Diﬃe-Hellman key exchange as                                    eﬀect of dramatically reducing the cost of large-scale attacks,
                    used in popular Internet protocols and ﬁnd it to be less secure                              bringing some within range of feasibility today.
                    than widely believed. First, we present Logjam, a novel ﬂaw                                      The current best technique for attacking Diﬃe-Hellman
                    in TLS that lets a man-in-the-middle downgrade connections                                   relies on compromising one of the private exponents (a, b)
                    to “export-grade” Diﬃe-Hellman. To carry out this attack,                                    by computing the discrete log of the corresponding public
                    we implement the number ﬁeld sieve discrete log algorithm.                                   value (ga mod p, gb mod p). With state-of-the-art number
                    After a week-long precomputation for a speciﬁed 512-bit                                      ﬁeld sieve algorithms, computing a single discrete log is more
                    group, we can compute arbitrary discrete logs in that group                                  diﬃcult than factoring an RSA modulus of the same size.
                    in about a minute. We ﬁnd that 82% of vulnerable servers use                                 However, an adversary who performs a large precomputation
                    a single 512-bit group, allowing us to compromise connections                                for a prime p can then quickly calculate arbitrary discrete logs
                    to 7% of Alexa Top Million HTTPS sites. In response, major                                   in that group, amortizing the cost over all targets that share
                    browsers are being changed to reject short groups.                                           this parameter. Although this fact is well known among
                       WegoontoconsiderDiﬃe-Hellmanwith768-and1024-bit                                           mathematical cryptographers, it seems to have been lost
                    groups. We estimate that even in the 1024-bit case, the com-                                 among practitioners deploying cryptosystems. We exploit it
                    putations are plausible given nation-state resources. A small                                to obtain the following results:
                    number of ﬁxed or standardized groups are used by millions                                   Active attacks on export ciphers in TLS.                          We introduce
                    of servers; performing precomputation for a single 1024-bit                                  Logjam, a new attack on TLS by which a man-in-the-middle
                    group would allow passive eavesdropping on 18% of popular                                    attacker can downgrade a connection to export-grade cryp-
                    HTTPS sites, and a second group would allow decryption                                       tography. This attack is reminiscent of the FREAK attack [7]
                    of traﬃc to 66% of IPsec VPNs and 26% of SSH servers. A                                      but applies to the ephemeral Diﬃe-Hellman ciphersuites and
                    close reading of published NSA leaks shows that the agency’s                                 is a TLS protocol ﬂaw rather than an implementation vulner-
                    attacks on VPNs are consistent with having achieved such                                     ability. We present measurements that show that this attack
                    a break. We conclude that moving to stronger key exchange                                    applies to 8.4% of Alexa Top Million HTTPS sites and 3.4%
                    methods should be a priority for the Internet community.                                     of all HTTPS servers that have browser-trusted certiﬁcates.
                                                                                                                     To exploit this attack, we implemented the number ﬁeld
                    1.     INTRODUCTION                                                                          sieve discrete log algorithm and carried out precomputation
                       Diﬃe-Hellman key exchange is widely used to establish                                     for two 512-bit Diﬃe-Hellman groups used by more than
                    session keys in Internet protocols. It is the main key exchange                              92% of the vulnerable servers. This allows us to compute
                    mechanism in SSH and IPsec and a popular option in TLS.                                      individual discrete logs in about a minute. Using our discrete
                   Weexamine how Diﬃe-Hellman is commonly implemented                                            log oracle, we can compromise connections to over 7% of Top
                    and deployed with these protocols and ﬁnd that, in practice,                                 Million HTTPS sites. Discrete logs over larger groups have
                    it frequently oﬀers less security than widely believed.                                      been computed before [8], but, as far as we are aware, this
                       There are two reasons for this. First, a surprising number                                is the ﬁrst time they have been exploited to expose concrete
                    of servers use weak Diﬃe-Hellman parameters or maintain                                      vulnerabilities in real-world systems.
                    support for obsolete 1990s-era export-grade crypto. More                                         Wewere also able to compromise Diﬃe-Hellman for many
                    critically, the common practice of using standardized, hard-                                 other servers because of design and implementation ﬂaws and
                                                                                                                 conﬁguration mistakes. These include use of composite-order
                                                                                                                 subgroups in combination with short exponents, which is
                                                                                                                 vulnerable to a known attack of van Oorschot and Wiener [51],
                    Permission to make digital or hard copies of part or all of this work for personal or        andtheinability of clients to properly validate Diﬃe-Hellman
                    classroom use is granted without fee provided that copies are not made or distributed        parameters without knowing the subgroup order, which TLS
                    for proﬁt or commercial advantage and that copies bear this notice and the full cita-        has no provision to communicate. We implement these
                    tion on the ﬁrst page. Copyrights for third-party components of this work must be            attacks too and discover several vulnerable implementations.
                    honored. For all other uses, contact the Owner/Author(s). Copyright is held by the
                    owner/author(s).                                                                             Risks from common 1024-bit groups.                        We explore the im-
                    CCS’15, October 12–16, 2015, Denver, Colorado, USA.                                          plications of precomputation attacks for 768- and 1024-bit
                    ACM978-1-4503-3832-5/15/10.                                                                  groups, which are widely used in practice and still considered
                    DOI:http://dx.doi.org/10.1145/2810103.2813707.
                           polynomial                sieving                 linear                                          descent
                             selection                                      algebra                              y;g
                 p                                                                           log db                                           x
                                              precomputation                                                            individual log
               Figure 1: The number ﬁeld sieve algorithm for discrete log consists of a precomputation stage that depends only on
               the prime p and a descent stage that computes individual logs. With suﬃcient precomputation, an attacker can quickly break
               any Diﬃe-Hellman instances that use a particular p.
               secure. We provide new estimates for the computational re-           sieve algorithm for factoring [12,31], and in fact many parts of
               sources necessary to compute discrete logs in groups of these        the implementations can be shared. The general technique is
               sizes, concluding that 768-bit groups are within range of aca-       called index calculus and has four stages with diﬀerent compu-
               demic teams, and 1024-bit groups may plausibly be within             tational properties. The ﬁrst three steps are only dependent
               range of state-level attackers. In both cases, individual logs       on the prime p and comprise most of the computation.
               can be quickly computed after the initial precomputation.              First is polynomial selection, in which one ﬁnds a polyno-
                 Wethen examine evidence from published Snowden docu-               mial f(z) deﬁning a number ﬁeld Q(z)=f(z) for the computa-
               ments that suggests NSA may already be exploiting 1024-bit           tion. (For our cases, f(z) typically has degree 5 or 6.) This
               Diﬃe-Hellman to decrypt VPN traﬃc. We perform measure-               parallelizes well and is only a small portion of the runtime.
               ments to understand the implications of such an attack for             In the second stage, sieving, one factors ranges of integers
               popularprotocols, ﬁnding that an attacker who could perform          andnumberﬁeldelementsinbatchestoﬁndmanyrelationsof
               precomputations for ten 1024-bit groups could passively de-          elements, all of whose prime factors are less than some bound
               crypt traﬃc to about 66% of IKE VPNs, 26% of SSH servers,            B(called B-smooth). Modern implementations use special-q
               16% of SMTP servers, and 24% of popular HTTPS sites.                 lattice sieving, which for each special q explores a sieving
                                                                                                2I
               Mitigations and lessons.    As a short-term countermeasure           region of 2    candidates, where I is a parameter. Sieving
               in response to the Logjam attack, all mainstream browsers            parallelizes well since each special q is handled independently
               are implementing a more restrictive policy on the size of            of the others, but is computationally expensive, because we
               Diﬃe-Hellman groups they accept. We further recommend                must search through and attempt to factor many elements.
               that TLS servers disable export-grade cryptography and               The time for this step depends on heuristic estimates of
               carefully vet the Diﬃe-Hellman groups they use. In the               the probability of encountering B-smooth numbers in this
               longer term, we advocate that protocols migrate to stronger          search; it also depends on I and on the number of special q
               Diﬃe-Hellmangroups, such as those based on elliptic curves.          to consider before having enough relations.
                                                                                      In the third stage, linear algebra, we construct a large,
               2.   DIFFIE-HELLMANCRYPTANALYSIS                                     sparse matrix consisting of the coeﬃcient vectors of prime
                 Diﬃe-Hellman key exchange was the ﬁrst published public-           factorizations we have found. A nonzero kernel vector of the
               key algorithm [14]. In the simple case of prime groups,              matrix modulo the order q of the group will give us logs of
               Alice and Bob agree on a prime p and a generator g of a              many small elements. This database of logs serves as input
                                                                                    to the ﬁnal stage. The diﬃculty depends on q and the matrix
               multiplicative subgroup modulo p. Alice sends ga mod p,              size and can be parallelized in a limited fashion.
               Bob sends gb mod p, and each computes a shared secret                  The ﬁnal stage, descent, actually deduces the discrete log
               gab mod p. While there is also a Diﬃe-Hellman exchange               of the target y. We re-sieve until we can ﬁnd a set of relations
               over elliptic curve groups, we address only the “mod p” case.        that allow us to write the log of y in terms of the logs in the
                 The security of Diﬃe-Hellman is not known to be equiva-            precomputed database. This step is accomplished in three
               lent to the discrete log problem (except in certain groups [13,      phases: an initialization phase, which tries to write the target
               33,34]), but computing discrete logs remains the best known          in terms of medium-sized primes, a middle phase, in which
               cryptanalytic attack. An attacker who can ﬁnd the discrete           these medium-sized primes are further sieved until they can
               log x from y = gx mod p can easily ﬁnd the shared secret.            be represented by elements in the database of known logs,
                 Textbook descriptions of discrete log can be misleading            and a ﬁnal phase that actually reconstructs the target using
               about the computational tradeoﬀs, for example by balancing           the log database. Crucially, descent is the only NFS stage
               parameters to minimize overall time to compute a single              that involves y (or g), so polynomial selection, sieving, and
               discrete log. In fact, as illustrated in Figure 1, a single large    linear algebra can be done once for a prime p and reused to
               precomputation on p can be used to eﬃciently break all               compute the discrete logs of many targets.
               Diﬃe-Hellman exchanges made with that prime.
               Thetypical case       Diﬃe-Hellmanis typically implemented           1Recent spectacular advances in discrete log algorithms
               with prime ﬁelds and large group orders. In this case, the           have resulted in a quasi-polynomial algorithm for small-
               most eﬃcient discrete log algorithm is the number ﬁeld sieve         characteristic ﬁelds [3], but these advances are not known to
              (NFS) [21,24,43].1 There is a closely related number ﬁeld             apply to the prime ﬁelds used in practice.
                                                                                2
                                                                      1=3           Source     Popularity   Prime
                 The running time of this algorithm is L (1=3;(64=9)     ) =
                                                         p
                                        1=3          2=3
              exp (1:923+o(1))(logp)       (loglogp)      . This is obtained        Apache     82%          9fdb8b8a004544f0045f1737d0ba2e0b
              by tuning many parameters, including the degree of f, the                                     274cdf1a9f588218fb435316a16e3741
              sieving region parameter I, and, most importantly, the                                        71fd19d8d8f37c39bf863fd60e3e3006
              smoothness bound B. Early articles (e.g. [21]) encountered                                    80a3030c6e4c3757d08f70e6aa871033
              technical diﬃculties with descent and reported that the com-          mod_ssl    10%          d4bcd52406f69b35994b88de5db89682
              plexity of this step would equal that of the precomputation;                                  c8157f62d8f33633ee5772f11f05ab22
              this may have contributed to misconceptions about the perfor-                                 d6b5145b9f241e5acc31ff090a4bc711
              manceoftheNFSfordiscretelogs. Morerecentanalyseshave                                          48976f76795094e71e7903529f5a824b
              improved the complexity of descent to L (1=3;1:442) [10],             (others)   8%           (463 distinct primes)
                                                          p
              and later to L (1=3;1:232) [2], which is much cheaper than
                             p                                                    Table 1: Top 512-bit DH primes for TLS. 8.4% of Alexa
              the precomputation in practice.                                     Top 1M HTTPS domains allow DHE_EXPORT, of which
                 The numerous parameters of the algorithm allow some              92.3% use one of the two most popular primes, shown here.
              ﬂexibility to reduce time on some computational steps at the
              expense of others. For example, sieving more will result in
              a smaller matrix, making linear algebra cheaper, and doing          for both normal and export-grade Diﬃe-Hellman, the vast
              more work in the precomputation makes the ﬁnal descent              majority of servers use a handful of common groups.
              step easier. In §3.3, we show how exploiting these tradeoﬀs            In this section, we exploit these facts to construct a novel
              allows us to quickly compute 512-bit discrete logs in order         attack against TLS, which we call the Logjam attack. First,
              to perform an eﬀective man-in-the-middle attack on TLS.             we perform NFS precomputations for the two most popular
              Improperly generated groups             A diﬀerent family of        512-bit primes on the web, so that we can quickly compute
              algorithms runs in time exponential in group order, and they        the discrete log for any key-exchange message that uses one
              are practical even for large primes when the group order is         of them. Next, we show how a man-in-the-middle, so armed,
              small or has many small prime factors. To avoid this, most          can attack connections between popular browsers and any
              implementations use “safe” primes, which have the property          server that allows export-grade Diﬃe-Hellman, by using a
              that p−1 = 2q for some prime q, so that the only possible           TLS protocol ﬂaw to downgrade the connection to export-
              subgroups have order 2, q, or 2q. However, as we show in            strength and then recovering the session key. We ﬁnd that
              §3.5, improperly generated groups are sometimes used in             this attack with our precomputations can compromise about
              practice and susceptible to attack.                                 7.8% of HTTPS servers among Alexa Top Million domains.
                 The baby-step giant-step [45] and Pollard rho [42] algo-
              rithms both take √q time to compute a discrete log in any           3.1    TLSandDifﬁe-Hellman
              (sub)group of order q, while Pollard lambda [42] can ﬁnd               TheTLShandshakebeginswithanegotiationtodetermine
              x < t in time √t. These parallelize well [50], and precom-          the crypto algorithms used for the session. The client sends a
              putation can speed up individual log calculations. If the           list of supported ciphersuites (and a random nonce cr) within
              factorization of the subgroup order q is known, one can             the ClientHello message, where each ciphersuite speciﬁes a key
              use any of the above algorithms to compute the discrete             exchange algorithm and other primitives. The server selects
                                                e
              log in each subgroup of order q i dividing q, and then re-          a ciphersuite from the client’s list and signals its selection in
                                                i
              cover x using the Chinese remainder theorem. This is the            a ServerHello message (containing a random nonce sr).
              Pohlig-Hellman algorithm [41], which costs P ei√qi using               TLS speciﬁes ciphersuites supporting multiple varieties of
              baby-step giant-step or Pollard rho.             i                  Diﬃe-Hellman. Textbook Diﬃe-Hellman with unrestricted
              Standard primes        Generating primes with special proper-       strength is called “ephemeral” Diﬃe-Hellman, or DHE, and
                                                                                                                                            2
              ties can be computationally burdensome, so many implemen-           is identiﬁed by ciphersuites that begin with TLS_DHE_*.     In
              tations use ﬁxed or standardized Diﬃe-Hellman parameters.           DHE, the server is responsible for selecting the Diﬃe-Hellman
              Aprominent example is the Oakley groups [40], which give            parameters. It chooses a group (p;g), computes gb, and sends
              “safe” primes of length 768 (Oakley Group 1), 1024 (Oakley          a ServerKeyExchange message containing a signature over the
              Group 2), and 1536 (Oakley Group 5). These groups were              tuple (cr;sr;p;g;gb) using the long-term signing key from
              published in 1998 and have been used for many applications          its certiﬁcate. The client veriﬁes the signature and responds
              since, including IKE, SSH, Tor, and OTR.                            with a ClientKeyExchange message containing ga.
                 When primes are of suﬃcient strength, there seems to be             To ensure agreement on the negotiation messages, and to
              no disadvantage to reusing them. However, widespread reuse          prevent downgrade attacks [52], each party computes the
              of Diﬃe-Hellman groups can convert attacks that are at the          TLSmaster secret from gab and calculates a MAC of its view
              limits of an adversary’s capabilities into devastating breaks,      of the handshake transcript. These MACs are exchanged
              since it allows the attacker to amortize the cost of discrete       in a pair of Finished messages and veriﬁed by the recipients.
              log precomputation among vast numbers of potential targets.         Thereafter, client and server start exchanging application
                                                                                  data, protected by an authenticated encryption scheme with
              3.    ATTACKINGTLS                                                  keys also derived from gab.
                                                                                     To comply with 1990s-era U.S. export restrictions on cryp-
                 TLS supports Diﬃe-Hellman as one of several possible             tography, SSL 3.0 and TLS 1.0 supported reduced-strength
              key exchange methods, and about two-thirds of popular               2TLS also supports a rarely used “static” Diﬃe-Hellman
              HTTPSsites allow it, most commonly using 1024-bit primes.           format, where the server’s key exchange value is ﬁxed and
              However, a smaller number of servers also support legacy            contained in its certiﬁcate. New ciphersuites that use elliptic
              “export-grade” Diﬃe-Hellman using 512-bit primes that are           curve Diﬃe-Hellman (ECDHE) are gaining in popularity, but
              well within reach of NFS-based cryptanalysis. Furthermore,          we focus exclusively on the traditional prime ﬁeld variety.
                                                                               3
                                                                                       negotiate export-grade ciphersuites. To circumvent this, we
                                                                                       show how an attacker who can compute 512-bit discrete
                                                                                       logs in real time can downgrade a regular DHE connection
                                                                                       to use a DHE_EXPORT group, and thereby break both the
                                                                                       conﬁdentiality and integrity of application data.
                                                                                         The attack, which we call Logjam, is depicted in Figure 2
                                                                                       and relies on a ﬂaw in the way TLS composes DHE and
                                                                                       DHE_EXPORT. When a server selects DHE_EXPORT for a
                                                                                       handshake, it proceeds by issuing a signed ServerKeyExchange
                                                                                       message containing a 512-bit p512, but the structure of this
                                                                                       message is identical to the message sent during standard DHE
                                                                                       ciphersuites. Critically, the signed portion of the server’s
                                                                                       message fails to include any indication of the speciﬁc cipher-
                                                                                       suite that the server has chosen. Provided that a client oﬀers
               Figure 2: The Logjam attack. A man-in-the-middle can                    DHE, an active attacker can rewrite the client’s ClientHello to
               force TLS clients to use export-strength DH with any server             oﬀer a corresponding DHE_EXPORT ciphersuite accepted by
               that allows DHE_EXPORT. Then, by ﬁnding the 512-bit dis-                the server and remove other ciphersuites that could be chosen
               crete log, the attacker can learn the session key and arbitrarily       instead. The attacker rewrites the ServerHello response to
                                                    fs                                 replace the chosen DHE_EXPORT ciphersuite with a matching
               read or modify the contents. Data       refers to False Start [30]      non-export ciphersuite and forwards the ServerKeyExchange
               application data that some TLS clients send before receiving            message to the client as is. The client will interpret the
               the server’s Finished message.                                          export-grade tuple (p     ; g; gb) as valid DHE parameters cho-
                                                                                                              512
                                                                                       sen by the server and proceed with the handshake. The
               DHE_EXPORT ciphersuites that were restricted to primes no               client and server have diﬀerent handshake transcripts at this
               longer than 512 bits. In all other respects, DHE_EXPORT                 stage, but an attacker who can compute b in close to real
               protocol messages are identical to DHE. The relevant export             time can then derive the master secret and connection keys
               restrictions are no longer in eﬀect, but many libraries and             to complete the handshake with the client, and then freely
               servers maintain support for backwards compatibility. Many              read and write application data pretending to be the server.
               TLS servers are still conﬁgured with two groups: a strong                 There are two remaining challenges in implementing this
               1024-bit group for regular DHE key exchanges and a 512-bit              active downgrade attack. The ﬁrst is to compute individual
               group for legacy DHE_EXPORT. This has been considered                   discrete logs in close to real time, and the second is to delay
               safe because most modern TLS clients do not oﬀer or accept              handshake completion until the discrete log computation has
               DHE_EXPORT ciphersuites.                                                had time to ﬁnish. We address these in the next subsections.
                  To understand how HTTPS servers in the wild use Diﬃe-                Comparison with previous attacks                Logjam is remi-
               Hellman, we modiﬁed the ZMap [15] toolchain to oﬀer DHE                 niscent of the recent FREAK [7] attack, in which an attacker
               and DHE_EXPORT ciphersuites and scanned TCP/443 on                      downgrades a regular RSA key exchange to one that uses
               both the full public IPv4 address space and the Alexa                   export-grade 512-bit ephemeral RSA keys, relying on a bug
               Top 1M domains. The scans took place in March 2015. Of                  in several TLS client implementations. The attacker then
               539,000 HTTPS sites among Top 1M domains, we found that                 factors the ephemeral key to hijack future connections that
               68.3% supported DHE and 8.4% supported DHE_EXPORT.                      use the same key. The cryptanalysis takes several hours on
               Of 14.3 million IPv4 HTTPS servers with browser-trusted                 commodity hardware and is usable until the server generates
               certiﬁcates, 23.9% supported DHE and 4.9% DHE_EXPORT.                   a fresh ephemeral RSA key (typically when it restarts).
                  WhiletheTLSprotocolallowsserverstogeneratetheirown                     In contrast, Logjam is due to a protocol ﬂaw in TLS, not
               Diﬃe-Hellman parameters, the overwhelming majority use                  an implementation bug. From a client perspective, the only
               one of a handful of primes. As shown in Table 1, just two 512-          defense is to reject small primes in DHE handshakes. (Prior
               bit primes account for 92.3% of Alexa Top 1M domains that               to this work, most popular browsers accepted p of size ≥ 512
               support DHE_EXPORT, and 92.5% of all servers with browser-              bits.) Logjam aﬀects fewer servers than FREAK, but, as we
               trusted certiﬁcates that support DHE_EXPORT. (Non-export                shall see, the cost per compromised connection is far lower,
               DHE follows a similar distribution with longer primes.) The             since the precomputation for each 512-bit group can be used
               most popular 512-bit prime was hard-coded into many ver-                indeﬁnitely against all servers that use that group, and since
               sions of Apache. Introduced in 2005 with Apache 2.1.5, it               each individual discrete log only takes about a minute.
               was used until 2.4.7, which disabled export ciphersuites. We              LogjamandFREAKbothfollowthesamepatternasother
               found it in use by about 564,000 servers with browser-trusted           cross-protocol attacks discovered in TLS. As early as SSL 3.0,
               certiﬁcates. The second most popular 512-bit prime is the               Schneier and Wagner noted a related vulnerability that they
               default used for DHE_EXPORT when using mod_ssl. It was                  called key exchange rollback [52]. Mavrogiannopoulos et al.
               introduced in version 2.3.0 in 1999. We found it in use by              showed how explicit-curve ECDHE handshakes could be con-
               about 89,000 servers with browser-trusted certiﬁcates.                  fused with DHE handshakes [35]. All these attacks could
               3.2     Active Downgrade to Export-Grade DHE                            be prevented by additionally signing the ciphersuite in the
                                                                                       ServerKeyExchange message. We expect that TLS 1.3 will ﬁx
                  Given the widespread use of these primes, an attacker with           this protocol ﬂaw. More generally, Logjam can also be inter-
               the ability to compute discrete logs in 512-bit groups could            preted as a backwards compatibility attack [23] where one
               eﬃciently break DHE_EXPORT handshakes for about 8% of                   party uses only strong cryptography but the other supports
               Alexa Top 1M HTTPS sites, but modern browsers never                     both strong and weak ciphersuites.
                                                                                   4
              3.3    512-bit Discrete Log Computations                                 1
                WemodiﬁedCADO-NFS[1]toimplementthenumberﬁeld                       eys
              sieve discrete log algorithm from §2 and applied it to three         k
              512-bit primes, including the top two DHE_EXPORT primes              of0.5
              showninTable1. Precomputationtook7daysforeachprime,                  CDF
              after which computing individual logs took a median of 70 sec-           0
              onds. We list the runtime for each stage of the computation                   30        60         90        120        150
              below. The times were about the same for each prime.
              Precomputation        As illustrated in Figure 1, the precom-                                   Seconds
              putation phase includes the polynomial selection, sieving, and    Figure 3: Individual discrete log time for 512-bit DH.
              linear algebra steps. For this precomputation, we deliberately    After a week-long precomputation for each of the two top
              sieved more than strictly necessary. This enabled two opti-       export-grade primes (see Table 1), we can quickly break
              mizations: ﬁrst, with more relations obtained from sieving,       any key exchange that uses them. Here we show times for
              we eventually obtain a larger database of known logs, which       computing 3,500 individual logs; the median is 70 seconds.
              makes the descent faster. Second, more sieving relations also
              yield a smaller linear algebra step, which is desirable because
              sieving is much easier to parallelize than linear algebra.        3.4    Active Attack Implementation
                For the polynomial selection and sieving steps, we used           We implemented a man-in-the-middle network attacker
              idle time on 2000–3000 CPU cores in parallel, of which most       that sits between a TLS client (web browser) and any server
              CPUs were Intel Sandy Bridge. Polynomial selection ran            that supports DHE_EXPORT and uses the most common 512-
              for about 3 hours, which in total corresponds to 7,600 core-      bit Apache group. Our implementation follows the message
              hours. Sieving ran for 15 hours, corresponding to 21,400          sequence in Figure 2: it downgrades the connection towards
              core-hours. This suﬃced to collect 40,003,519 relations of        the server, computes the session keys, and takes over the
              which 28,372,442 were unique, involving 15,207,865 primes         connection towards the client by impersonating the server.
              of at most 27 bits (hence bound B from §2 is 227).                  The main challenge is to compute the shared secret gab
                From this data set, we obtained a square matrix with            before the handshake completes in order to forge a Finished
              2,157,378 rows and columns, with 113 nonzero coeﬃcients per       message from the server. With our descent implementation,
              rowonaverage. Wesolvedthecorrespondinglinearsystemon              the computation takes an average of 70 seconds, but there
              a 36-node cluster with two 8-core Intel Xeon E5-2650 CPUs         are several ways an attacker can work around this delay:
              per node, connected with Inﬁniband FDR. We used the block         Non-browser clients.   Diﬀerent TLS clients impose diﬀerent
              Wiedemann algorithm [11,49] with parameters m = 18 and            time limits for the handshake, after which they kill the
              n=6. Using the unoptimized implementation from CADO-              connection. Command-line clients such as curl and git
              NFS [1] for linear algebra over GF(p), the computation            often run unattended, so they have long or no timeouts, and
              ﬁnished in 120 hours, corresponding to 60,000 core-hours.         we can hijack their connections without diﬃculty.
              Weexpect that optimizations could bring this cost down by
              at least a factor of three.                                       TLS warning alerts.     Web browsers tend to have shorter
                In total, the wall-clock time for each precomputation was       timeouts, but we can keep their connections alive by sending
              slightly over one week. Each resulting database of known          TLS warning alerts, which are ignored by the browser but
              logs for the descent occupies about 2.5 GB in ASCII format.       reset the handshake timer. For example, this allows us to keep
              Descent     Once this precomputation was ﬁnished, we were         Firefox’s TLS connections alive indeﬁnitely. (Other browsers
              able to run the ﬁnal descent step to compute individual dis-      we tested close the connection after a minute.) Although
              crete logs in about a minute for targets in each of these groups. the victim connection still takes much longer than usual,
              In order to save time on individual computations, we imple-       the attacker might choose to compromise a request for a
              mented a client-server architecture using the ZeroMQ mes-         background resource that does not delay rendering the page.
              saging library. The server maintains the precomputed data         Ephemeral key caching.     Many TLS servers do not use a
              in RAM and returns logs for values passed to it by clients.       fresh value b for each connection, but instead compute gb
                WeimplementedthedescentcalculationinamixofPython                once and reuse it for multiple negotiations. Without enabling
              and C. The ﬁrst and second stages are parallelized and run        the SSL_OP_SINGLE_DH_USE option, OpenSSL will reuse gb
              sieving in C, and the ﬁnal discrete log is deduced in Python.     for the lifetime of a TLS context. While both Apache and
              Weran the server on a machine with two 18-core Intel Xeon         Nginx internally apply this option, certain load balancers,
              E5-2699 CPUs and 128 GB of RAM. On average, computing             such as stud [48], do not. The F5 BIG-IP load balancers
              individual logs took about 70 seconds, but the time varied        and hardware TLS frontends will reuse gb unless the “Single
              from 34 to 206 seconds (see Fig. 3). This is divided between      DH”option is checked [53]. Microsoft Schannel caches gb for
              about 20 seconds for descent initialization and the remainder     two hours—this setting is hard-coded. For these servers, an
              on the middle phase. Further optimizations—such as more           attacker can compute the discrete log of gb from one connec-
              eﬀective parallelization on the middle phase or additional        tion and use it to attack later handshakes, avoiding the need
              sieving—should bring the median time well below a minute.         to do the computation online. By randomly sampling IPv4
                For purposes of comparison, a single 512-bit RSA factor-        hosts serving browser-trusted certiﬁcates that support DHE,
              ization using the CADO-NFS implementation takes about             we found that 17% reused gb at least once over the course
              eight days of wall-clock time on the computer used for the        of 20 handshakes, and that 15% only used one value. How-
              descent, and about three hours parallelized across 1,800 cores    ever, for DHE_EXPORT, only 0.1% reused gb, likely because
              of Amazon EC2 c4.8xlarge instances.                               Microsoft IIS does not support 512-bit export ciphersuites.
                                                                             5
              TLS False Start.    Even when clients enforce shorter time-           To see if TLS servers in the wild were vulnerable to this
              outs and servers do not reuse values for b, the attacker can       attack, we tested various non-safe primes found in our scans.
              still break the conﬁdentiality of user requests if the client      For each non-safe prime p, we opportunistically factored
              supports the TLS False Start extension [30]. This extension        p−1using Bernstein’s batch method [5]. We then ran the
              reduces connection latency by having the client send early         GMP-ECMimplementations of the Pollard p−1 algorithm
              application data (such as an HTTP request) without waiting         and the ECM factoring methods [54] for 5 days parallelized
              for the server’s Finished message to arrive. Recent versions       across 28 cores and discovered 36,447 prime factors.
              of Chrome, Internet Explorer, and Firefox implement False             Wethenexaminedthegenerators g used with each prime p.
              Start, but their policies on when to enable it vary between        Weclassiﬁed a tuple (p;g;y) sent by a server as interesting
              versions. Firefox 35, Chrome 41, and Internet Explorer (Win-       if the prime factorization of p−1 had revealed prime factors
              dows 10) send False Start data with DHE. In these cases, a         of the order of g, and ordered them by the estimated work
              man-in-the-middle can record the handshake and decrypt the         required using Pohlig-Hellman and Pollard lambda to recover
              False Start payload at leisure. We note that this initial data     a target private exponent x of length ranging from 64 to 256
              sent by a browser often contains sensitive user authentication     bits. There were 753 (p;g) pairs where we knew factors of
              information, such as passwords and cookies.                        the subgroup generated by g; these had been used for 40,903
                                                                                 connections across all of our scans.
              3.5    OtherWeakandMisconﬁguredGroups                                 WeimplementedthevanOorschotandWieneralgorithmin
                In our scans, we found several other exploitable security        Sage [47] using a parallel Pollard rho implementation that we
              issues in the DHE conﬁgurations used by TLS servers.               wrote in C using the GMP library. We used the distinguished
              512-bit primes in non-export DHE             We found 2,631        points method for collision detection; for a prime known in
              servers with browser-trusted certiﬁcates (and 118 in the           advance, this implementation can be arbitrarily sped up by
              Top 1M domains) that used 512-bit or weaker primes for             precomputing a table of distinguished points.
              non-export DHE. In these instances, active attacks may                Wecomputed partial information about the server secret
              be unnecessary. If a browser negotiates a DHE ciphersuite          exponent used in 460 exchanges and were able to recover
              with one of these servers, a passive eavesdropper can later        the whole exponent used by 159 diﬀerent hosts, 53 of which
              compute the discrete log and obtain the TLS session keys           authenticated with valid browser-trusted certiﬁcates. In all
              for the connection. An active attack may still be necessary        cases, the vulnerable hosts used 512-bit prime moduli; three
              when the client’s ordering of ciphersuites would result in the     of them used 160-bit exponents and the rest used 128 bits.
              server not selecting DHE. In this case, as in the DHE_EXPORT       The order of the largest-order subgroup ranged from 46 bits
              downgrade attack, an active attacker can force the server to       (which ﬁnishes in seconds) to 81 bits (which took between
              choose a vulnerable DHE ciphersuite.                               50 and 176 hours) implementation. The Pollard lambda
                As a proof-of-concept, we implemented a passive eaves-           calculations used interval width varying from 40 to 70 bits.
              dropper for regular DHE connections and used it to decrypt            Our computations would have allowed us to hijack con-
              test connections to www.fbi.gov. Until April 2015, this server     nections to a variety of vulnerable TLS servers, including
              used the default 512-bit DH group from OpenSSL, which              web interfaces for VPN devices (48 hosts), communications
              was the third group for which we performed the NFS pre-            software (21 hosts), web conferencing servers (27 hosts), and
              computation. The website no longer supports DHE.                   FTPservers (6 hosts). As a proof-of-concept, we modiﬁed
                                                                                 our man-in-the-middle attacker of §3.3 to impersonate a
              Attacks on composite-order subgroups               Failure to      vulnerable server and capture user credentials. Compared
              generate Diﬃe-Hellman primes according to best practices           to an attack using NFS, we could compute the discrete log
              can result in devastating attacks. Not every TLS server            with a delay hardly noticeable for browser users.
              uses “safe” primes. Out of approximately 70,000 distinct           Misconﬁgured groups          TheDigital Signature Algorithm
              primes seen across both export and non-export TLS scans,           (DSA) [38] uses primes p such that p−1 has a large prime
              4,800 were not safe, meaning that (p−1)=2 was composite.           factor q and g generates only a subgroup of order q. When
              (Incidentally, we also found 9 composite p.) These groups          using properly generated DSA parameters, these groups are
              are not necessarily vulnerable, as long as g generates a group     secure for use in Diﬃe-Hellman key exchanges. Notably, DSA
              with at least one suﬃciently large subgroup order to rule out      groups are hard-coded in Java’s sun.security.provider
              the Pohlig-Hellman algorithm as an attack.                         package and are used by default in many Java-based TLS
                In some real-life conﬁgurations, however, choosing such          servers. However, some servers in our scans used Java’s DSA
              primes can lead to an attack. For eﬃciency reasons, some           primes as p but mistakenly used the DSA group order q in the
              implementationsuseephemeralkeysgx withashortexponent               place of the generator g. We found 5,741 hosts misconﬁgured
              x; commonly suggested sizes for x are as small as 160 or 224       this way.
              bits, intended to match the estimated strength of a 1024- or          This substitution of q for g is likely due to a usability prob-
              2048-bit group. For safe p, such exponent lengths are not          lem: the canonical ASN.1 representation of Diﬃe-Hellman
              known to decrease security, as the most eﬃcient attack will        key exchange parameters (coming from PKCS#3) is a se-
              be the Pollard lambda algorithm. But if the order of the           quence (p;g), while that of DSA parameters (coming from
              subgroup generated by g has small factors, they can be used        PKIX) is (p;q;g); we conjecture that the confusion between
              to recover information about exponents. From a subset of           these formats led to a simple programming error.
                         e     e         Q e
              factors {q11 :::q k} with      q i = z, Pohlig-Hellman can            In a DSA group, the subgroup generated by q is likely
                               k        Pi i
              recover x mod z in time       e √q . If x ≤ z, this suﬃces to
                                           i i   i                               to have many small prime factors in its order, since for p
              recover x. If not, Pollard lambda can use this information         generated according to [38], (p − 1)=q is a random integer.
              to recover x in time px=z. This attack was ﬁrst described          For Java’s sun.security.provider 512-bit prime, using q as
              as hypothetical by van Oorschot and Wiener [51].                   a generator leaks 290 bits of information about exponents at
                                                                              6
                                 40
              a cost of roughly 2   operations. Luckily, since the provider      conﬁdence, particularly for the 1024-bit case. We summarize
              generates exponents of length max(n=2;384) for n-bit p,            all the costs, measured or estimated, in Table 2.
              this does not suﬃce to recover a full exponent. Still, this        DH-768: Feasible with academic power             For the 768-
              misconﬁguration bug results in a signiﬁcant loss of security       bit case, we base our estimates on the recent discrete log
              and serves as a cautionary tale for programmers.                   record at 596 bits [8] and the integer factorization record of
              4.    STATE-LEVELTHREATSTODH                                       768bitsfrom2009[29]. Whilethealgorithmsforfactorization
                                                                                 and discrete log are similar, the discrete log linear algebra
                The previous sections demonstrate the existence of practi-       stage is many times more diﬃcult, as the matrix entries are
              cal attacks against Diﬃe-Hellman key exchange as currently         no longer Boolean. We can reduce overall time by sieving
              used by TLS. However, these attacks rely on the ability to         more, thus generating a smaller input matrix to the linear
              downgrade connections to export-grade crypto or on the use         algebra step. Since sieving parallelizes better than linear
              of unsafe parameters. In this section we address the following     algebra, this tradeoﬀ is desirable for large inputs.
              question: how secure is Diﬃe-Hellman in broader practice,             A 596-bit factorization takes about 5 core-years, most
              as used in other protocols that do not suﬀer from downgrade,       of it spent on sieving. In comparison, the record 596-bit
              and when applied with stronger groups?                             discrete log eﬀort tuned parameters such that they spent
                To answer this question we must ﬁrst examine how the             50 core-years on sieving. This reduced their linear algebra
              number ﬁeld sieve for discrete log scales to 768- and 1024-bit     calculation to 80 core-years. We used this same strategy in
              groups. As we argue below, 768-bit groups, which are still in      our 512-bit experiments in §3.3.
              relatively widespread use, are now within reach for academic          Similarly, the 768-bit RSA factoring record spent more
              computational resources, and performing precomputations            time on sieving in order to save time on the linear algebra
              for a small number of 1024-bit groups is plausibly within          step. The cost of sieving was around 1500 core-years, and
              the resources of state-level attackers. The precomputation         the matrix that was produced had 200M rows and columns.
              would likely require special-purpose hardware, but would not       As a result, the linear algebra took 150 core-years, but tak-
              require any major algorithmic improvements beyond what is          ing algorithmic improvements since 2009 into account and
              known in the academic literature. We further show that even        optimizing for the total time,3 we estimate that factoring an
              in the 1024-bit case, the descent time—necessary to solve          RSA-768 integer would take 900 core-years in total.
              any speciﬁc discrete log instance within a common group—              For a 768-bit discrete log, we can expect that ten times as
              would be fast enough to break individual key exchanges in          much sieving as the RSA case would reduce the matrix to
              close to real time.                                                around 150M rows. We extrapolate from experiments with
                In light of these results, we examine several standard Inter-    existing software that this linear algebra would take 28,500
              net security protocols—IKE, SSH, and TLS—to determine              core-years, for a total of 36,500 core-years. This is within
              the vulnerability of their key exchanges to attacks by resource-   reach by computing power available to academics.
              ful attackers. Although the cost of the precomputation for a          The descent step takes relatively little time. We experi-
              1024-bit group is several times higher than for an RSA key         mented with both CADO-NFS and a new implementation
              of equal size, we observe that a one-time investment could be      with GMP-ECM based on the early-abort strategy described
              used to attack millions of hosts, due to widespread reuse of       in [6]. Using these techniques, the initial descent phase took
              the most common Diﬃe-Hellman parameters. Unfortunately,            an average of around 1 core-day. The remaining phase uses
              our measurements also indicate that it may be very diﬃcult         sieving much as in the precomputation; extrapolating from
              to sunset the use of ﬁxed 1024-bit Diﬃe-Hellman groups that        experiments, the rest of the descent should take at most
              have long been embedded in standards and implementations.          1 core-day. In total, after precomputation, the cost of a
                Finally, we apply this new understanding to a set of re-         single 768-bit discrete log computation is around 2 core-days
              cently published documents leaked by Edward Snowden [46]           and is easily parallelizable.
              to evaluate the hypothesis that the National Security Agency       DH-1024: Plausible with state-level resources             Ex-
              has already implemented such a capability. We show that            perimentally extrapolating sieving parameters to the 1024-bit
              this hypothesis is consistent with the published details of        case is diﬃcult due to the tradeoﬀs between the steps of the
              the intelligence community’s cryptanalytic capabilities, and,      algorithm and their relative parallelism. The prior work
              indeed, matches the known capabilities more closely than           proposing parameters for factoring a 1024-bit RSA key is
              other proposed explanations, such as novel breaks on RC4           thin: [28] proposes smoothness bounds of 42 bits, but the
              or AES. We believe that this analysis may help shed light          proposed value of the sieving region parameter I is clearly
              on unanswered questions about how NSA may be gaining               too small, giving too few smooth results per sieving sub-
              access to VPN, SSH, and TLS traﬃc.                                 task. Since no publicly available software can currently deal
              4.1    Scaling NFS to 768- and 1024-bit DH                         with values of I larger than those proposed, we could not
                Estimating the cost for discrete log cryptanalysis at longer     experimentally update the estimates of this paper with more
              key sizes is far from straightforward, due in part to the          relevant parameter choices.
              complexity of parameter tuning and to tradeoﬀs between the            Without better parameter choices, we resort to extrapolat-
                                                                                 ing from asymptotic complexity. For the number ﬁeld sieve,
              sieving and linear algebra steps, which have very diﬀerent         the complexity is exp (k + o(1))(logN)1=3(loglogN)2=3;
              computational characteristics. (Much more attention has            where N is the integer to factor or the prime modulus for
              gone to understanding 1024-bit factorization, but, even there,     discrete log, and k is an algorithm-speciﬁc constant. This
              many published estimates are crude extrapolations of the           formula is inherently imprecise, since the o(1) in the expo-
              asymptotic complexity.) We attempt estimates for 768- and
              1024-bit discrete log based on the existing literature and         3We would lower the smoothness bounds compared to the
              our own experiments, but further work is needed for greater        parameters in [29].
                                                                              7
                                      Sieving             Linear Algebra     Descent
                               I   log2 B   core-years   rows   core-years  core-time
                   RSA-512    14      29          0.5   4.3M          0.33                Timings with default CADO-NFS parameters.
                    DH-512    15      27          2.5   2.1M           7.7    10mins      For the computations in this paper; may be suboptimal.
                   RSA-768    16      37          800   250M          100                 Est. based on [29] with less sieving.
                    DH-768    17      35        8,000   150M       28,500      2days      Est. based on [8,29] and our own experiments.
                  RSA-1024    18      42    1,000,000    8.7B     120,000                 Est. based on complexity formula.
                   DH-1024    19      40   10,000,000    5.2B   35,000,000    30days      Est. based on complexity formula and our experiments.
              Table 2: Estimating costs for factoring and discrete log. For sieving, we give two important parameters: the number of
              bits of the smoothness bound B and the sieving region parameter I. For linear algebra, all costs for DH are for safe primes; for
              DSAprimes with q of 160 bits, this should be divided by 6.4 for 1024 bits, 4.8 for 768 bits, and 3.2 for 512 bits.
              nent can hide polynomial factors. This complexity formula,         a more modern size reduces costs, as transistors are cheaper
              with k = 1:923, describes the overall time for both discrete       at newer technologies. With standard transistor costs and uti-
              log and factorization, which are both dominated by sieving         lization, this would cost about $2 per chip to manufacture, af-
              and linear algebra in the precomputation. The space com-           ter ﬁxed design and tape-out costs of roughly $2M [32]. This
              plexity (the size of the matrix in memory) is the square root      suggests that an $8M investment would buy enough ASICs
              of this function, i.e., the same function, taking k = 0:9615.      to complete the DH-1024 sieving precomputation in one year.
              Discrete log descent has a complexity of the same form as          Since a step of descent uses sieving, the same hardware could
              well; [2, Chapter 4] gives k = 1:232, using an early-abort         likely be reused to speed calculations of individual logs.
              strategy similar to the one in [6] mentioned above.                  Estimating the ﬁnancial cost for the linear algebra is more
                Evaluating the formula for 768- and 1024-bit N gives us          diﬃcult, since there has been little work on designing chips
              estimated multiplicative factors by which time and space will      that are suitable for the larger ﬁelds involved in discrete log.
              increase from the 768- to the 1024-bit case. For precompu-         Toderivearoughestimate,wecanbeginwithgeneralpurpose
              tation, the total time complexity will increase by a factor        hardware and the core-year estimate from Table 2. The
              of 1220, while space complexity will increase by a factor of       Titan supercomputer [39]—at 300,000 CPU cores, currently
              35. These are valid for both factorization and discrete log,       the most powerful supercomputer in the U.S.—would take
              since they have the same asymptotic behavior. Hence, for           117 years to complete the 1024-bit linear algebra stage. Titan
              DH-1024, we get a total cost for the precomputation of about       was constructed in 2012 for $94M, suggesting a cost of $11B
              45M core-years. The time complexity for each individual            in supercomputers to ﬁnish this step in a year. In the context
              log after the precomputation should be multiplied by 95.           of factorization, moving linear algebra from general purpose
              This last number does not correspond to what we observed           CPUs to ASICs has been estimated to reduce costs by a
              in practice; we attribute that to the fact that the descent        factor of 80 [17]. If we optimistically assume that a similar
              step has been far less studied both in theory and in practice      reduction can be achieved for discrete log, the hardware cost
              compared to the other steps.                                       to perform the linear algebra for DH-1024 in one year is
                For 1024-bit descent, we experimented with our early-            plausibly on the order of hundreds of millions of dollars.
              abort implementation to inform our estimates for descent             To put this dollar ﬁgure in context, the FY2012 bud-
              initialization, which should dominate the individual discrete      get for the U.S. Consolidated Cryptologic Program (which
              log computation. For a random target in Oakley Group 2,            includes the NSA) was $10.5 billion4 [57]. The agency’s
              initialization took 22 core-days, yielding a few primes of at      classiﬁed 2013 budget request, which prioritized investment
              most 130 bits to be descended further. In twice this time,         in “groundbreaking cryptanalytic capabilities to defeat ad-
              we reached primes of about 110 bits. At this point, we were        versarial cryptography and exploit internet traﬃc,” included
              certain to have bootstrapped the descent, and could continue       notable $100M increases in two programs [57]: “cryptanalytic
              down to the smoothness bound in a few more core-days if            IT services” (to $247M), and a cryptically named “cryptanal-
              proper sieving software were available. Thus we estimate           ysis and exploitation services program C” (to $360M). NSA’s
              that a 1024-bit descent would take about 30 core-days, once        leaked strategic plan for the period called for it to “continue
              again easily parallelizable.                                       to invest in the industrial base and drive the state of the
                                                                                 art for high performance computing to maintain pre-eminent
              Costs in hardware        Although 45M core-years is a huge         cryptanalytic capability for the nation” [63].
              computational eﬀort, it is not necessarily out of reach for a
              nation state. Moreover, at this scale, signiﬁcant cost savings     4.2    Is NSABreaking1024-bit DH?
              could be realized by developing application-speciﬁc hardware.        Our calculations suggest that it is plausibly within NSA’s
                Sieving is a natural target for hardware implementation.         resources to have performed number ﬁeld sieve precomputa-
              To our knowledge, the best prior description of an ASIC            tions for at least a small number of 1024-bit Diﬃe-Hellman
              implementation of 1024-bit sieving is the 2007 work of Geisel-     groups. This would allow them to break any key exchanges
              mann and Steinwandt [18]. In the following, we update their        made with those groups in close to real time. If true, this
              estimates for modern techniques and adjust parameters for          wouldansweroneofthemajorcryptographicquestions raised
              discrete log. We increase their chip count by a factor of ten to   by the Edward Snowden leaks: How is NSA defeating the
              sieve more and save on linear algebra as above, giving an esti-    encryption for widely used VPN protocols?
              mate of 3M chips to complete sieving in one year. Shrinking
              the dies from the 130 nm technology node used in the paper to      4The National Science Foundation’s budget was $7 billion.
                                                                             8
                Classiﬁed documents published by Der Spiegel [46] indi-
              cate that NSA is passively decrypting IPsec connections at
              signiﬁcant scale. The documents do not describe the crypt-
              analytic techniques used, but they do provide an overview of
              the attack system architecture. After reviewing how IPsec
              key establishment works, we will use the published informa-
              tion to evaluate the hypothesis that the NSA is leveraging
              precomputation to calculate discrete logs at scale.
              IKE     Internet Key Exchange (IKE) is the main key es-
              tablishment protocol used for IPsec VPNs. There are two
              versions, IKEv1 [22] and IKEv2 [25], which diﬀer in mes-
              sage structure but are conceptually similar. For the sake of
              brevity, we will use IKEv1 terminology.                         Figure 4: NSA’s VPN decryption infrastructure. This
                Each IKE session begins with a Phase 1 handshake, in          classiﬁed illustration published by Der Spiegel [67] shows
              which the client and server select a Diﬃe-Hellman group         captured IKE handshake messages being passed to a high-
              from a small set of standardized parameters and perform a       performance computing system, which returns the symmetric
              key exchange to establish a shared secret. The shared secret    keys for ESP session traﬃc. The details of this attack are
              is combined with other cleartext values transmitted by each     consistent with an eﬃcient break for 1024-bit Diﬃe-Hellman.
              side, such as nonces and cookies, to derive a value called
              SKEYID. IKE provides several authentication mechanisms,
              including symmetric pre-shared keys (PSK); when IKEv1 is        Evidence for a discrete log attack        While the ability
              authenticated with a PSK, this value is incorporated into       to decrypt VPN traﬃc does not by itself indicate a defeat
              the derivation of SKEYID.                                       of Diﬃe-Hellman, there are several features of IKE and the
                The resulting SKEYID is used to encrypt and authenticate      VAO’s operation that support this hypothesis.
              a Phase 2 handshake. Phase 2 establishes the parameters           The IKE protocol has been extensively analyzed [9,36],
              and key material, KEYMAT, for a cryptographic transport         and is not believed to be exploitable in standard conﬁgu-
              protocol used to protect subsequent traﬃc, such as Encapsu-     rations under passive eavesdropping attacks. In order to
              lating Security Payload (ESP) [27] or Authenticated Header      recover the session keys for the ESP or AH protocols, the
             (AH) [26]. In some circumstances, this phase includes an         attacker must at minimum recover the SKEYID generated
              additional round of Diﬃe-Hellman. Ultimately, KEYMAT is         by the Phase 1 exchange. Absent a vulnerability in the key
              derived from SKEYID, additional nonces, and the result of       derivation function or transport encryption, this requires
              the optional Phase 2 Diﬃe-Hellman exchange.                     the attacker to recover a Diﬃe-Hellman shared secret after
              NSA’sVPNexploitationprocess            Thedocumentspub-         passively observing an IKE handshake.
              lished by Der Spiegel describe a system named TURMOIL             While IKE is designed to support a range of Diﬃe-Hellman
              that is used to collect and decrypt VPN traﬃc. The evidence     groups, our Internet-wide scans (§4.3) show that the vast
              indicates that this decryption is performed using passive       majority of IKE systems select one particular 1024-bit DH
              eavesdropping and does not require message injection or         group, Oakley Group 2, even when oﬀered stronger groups.
              man-in-the-middle attacks on IPsec or IKE. Figure 4, an           Given an eﬃcient oracle for solving the discrete logarithm
              excerpt from one of the documents [67], illustrates the ﬂow     problem, attacks on IKE are possible provided that the
              of information through the TURMOIL system                       attacker can obtain the following: (1) a complete two-sided
                The initial phases of the attack involve collecting IKE and   IKE transcript, including the Diﬃe-Hellman ephemeral keys
              ESP payloads and determining whether the traﬃc matches          ga and gb as well as the nonces and cookies transmitted by
              any tasked selector [65]. If so, TURMOIL transmits the          both sides of the connection, and (2) in IKEv1 only, the PSK
              complete IKE handshake and may transmit a small amount          used in deriving SKEYID.
              of ESP ciphertext to NSA’s Cryptanalysis and Exploitation         Both of the above requirements are also present in the
              Services (CES) [56,65] via a secure tunnel. Within CES, a       NSA’s VPN attack system. As Figure 4 illustrates, a hard
              specialized VPN Attack Orchestrator (VAO) system manages        requirement of the VAO is the need to obtain the complete
              a collection of high-performance grid computing resources       two-sided IKE transcript [60]. The published documents
              located at NSA Headquarters and in a data center at Oak         indicate that this requirement substantially increases the
              Ridge National Laboratory, which perform the computation        complexity of the attack execution, since IKE transcripts
              required to generate the ESP session key [61,62,67]. VAO        must be reassembled (“paired”) whenever the interaction
              also maintains a database, CORALREEF, that stores cryp-         traverses multiple network paths [55,56,58,66].
              tographic values, including a set of known PSKs and the           The attack system also seems to require knowledge of the
              resulting “recovered” ESP session keys [60,61,67].              PSK. Several documents describe techniques for analysts
                The ESP traﬃc itself is buﬀered for up to 15 minutes [64],    to locate a PSK, including using a database of router con-
              until CES can respond with the recovered ESP keys if they       ﬁgurations [70,71], the CORALREEF database of known
              were generated correctly. Once keys have been returned, the     PSKs [60], previously decrypted SSH traﬃc [60], or system
              ESP traﬃc is decrypted via hardware accelerators [59] or        administrator “chatter” [70]. Additionally, NSA is willing to
              in software [68,69]. From this point, decrypted VPN traﬃc       “[r]un attacks to recover PSK” [60].
              is reinjected into TURMOIL processing infrastructure and          Of course, this explanation is not dispositive. The possi-
              passed to other systems for storage and analysis [69]. The      bility remains that NSA could defeat IPsec using alternative
              documents indicate that NSA is recovering ESP keys at large     means. Certain published NSA documents refer to soft-
              scale, with a target of 100,000 per hour [64].                  ware “implants” on VPN devices, indicating that the use of
                                                                           9
                                                                               Vulnerable servers, if the attacker can precompute for ...
                                                                  all 512-bit groups   all 768-bit groups    one 1024-bit group    ten 1024-bit groups
                    HTTPSTop1Mw/active downgrade                      45,100 (8.4%)        45,100 (8.4%)       205,000 (37.1%)        309,000 (56.1%)
                    HTTPSTop1M                                           118 (0.0%)           407 (0.1%)         98,500 (17.9%)       132,000 (24.0%)
                    HTTPSTrusted w/ active downgrade                 489,000 (3.4%)       556,000 (3.9%)      1,840,000 (12.8%)      3,410,000 (23.8%)
                    HTTPSTrusted                                        1,000 (0.0%)       46,700 (0.3%)       939,000 (6.56%)       1,430,000 (10.0%)
                    IKEv1 IPv4                                                     –       64,700 (2.6%)      1,690,000 (66.1%)      1,690,000 (66.1%)
                    IKEv2 IPv4                                                     –       66,000 (5.8%)       726,000 (63.9%)        726,000 (63.9%)
                    SSH IPv4                                                       –                    –     3,600,000 (25.7%)      3,600,000 (25.7%)
               Table 3: Estimated impact of Diﬃe-Hellman attacks. We use Internet-wide scanning to estimate the number of real-
               world servers for which typical connections could be compromised by attackers with various levels of computational resources.
               For HTTPS, we provide ﬁgures with and without downgrade attacks on the chosen ciphersuite. All others are passive attacks.
               targeted malware is a piece of the collection strategy [60];              of proﬁled servers chose Oakley Group 1, and 63.9% chose
               however, the same documents also note that decryption of                  Oakley Group 2. This coincides with our anecdotal ﬁndings
               the resulting traﬃc does not require IKE handshakes, and                  that most VPN clients only oﬀer Oakley Group 2 by default.
               thus appears to be an alternative mechanism to the VAO                    SSH All SSH handshakes complete either a ﬁnite ﬁeld
               attack described above. The most compelling argument for                  Diﬃe-Hellman or elliptic curve Diﬃe-Hellman exchange as
               a pure cryptographic attack is the generality of the VAO                  part of the SSH key exchange. The SSH protocol explicitly
               approach, which appears to succeed across a broad swath of                deﬁnes support for Oakley Group 2 (1024-bit) and Oakley
               non-compromised devices.                                                  Group 14 (2048-bit) but also allows a server-deﬁned group,
               4.3     Effects of a 1024-bit Break                                      which can be negotiated through an auxiliary Diﬃe-Hellman
                                                                                         Group Exchange (DH-GEX) handshake [16].
                  In this section, we use Internet-wide scanning to assess                 In order to measure how SSH uses DH in practice, we
               the impact of a hypothetical DH-1024 break on three popu-                 implemented the SSH protocol in the ZMap toolchain and
               lar protocols: IKE, SSH, and HTTPS. Our measurements                      scanned 1% random samples of the public IPv4 address space
               indicate that these protocols, as they are commonly used,                 in April 2015. We ﬁnd that 98.9% of SSH servers support
               would be subject to widespread compromise by a state-level                the 1024-bit Oakley Group 2, 77.6% support the 2048-bit
               attacker who had the resources to invest in precomputation                Oakley Group 14, and 68.7% support DH-GEX.
               for a small number of common 1024-bit groups.                               During the SSH handshake, the client and server select the
               IKE WemeasuredhowIPsec VPNs use Diﬃe-Hellman in                           client’s highest priority mutually supported key exchange
               practice by scanning a 1% random sample of the public IPv4                algorithm. Therefore, we cannot directly measure what algo-
               address space for IKEv1 and IKEv2 (the protocols used to                  rithm servers will prefer in practice. In order to estimate this,
               initiate an IPsec VPN connection) in May 2015. We used                   we performed a scan in which we mimicked the algorithms
               the ZMap UDP probe module to measure support for Oakley                   oﬀered by OpenSSH 6.6.1p1, the latest version of OpenSSH.
               Groups 1 and 2 (two popular 768- and 1024-bit, built-in                   In this scan, 21.8% of servers preferred the 1024-bit Oakley
               groups) and which group servers prefer. To test support                   Group 2, and 37.4% preferred a server-deﬁned group. 10% of
               for individual groups, we oﬀered only the single group in                 the server-deﬁned groups were 1024-bit, but, of those, near
               question. To detect default behavior, we oﬀered servers a                 all provided Oakley Group 2 rather than a custom group.
               variety of DH groups, with the lowest priority groups being                 Combining these equivalent choices, we ﬁnd that a state-
               Oakley Groups 1 and 2. When measuring server preference,                  level attacker who performed NFS precomputations for the
               we scanned with the 3DES symmetric cipher—the most                       1024-bit Oakley Group 2 (which has been in standards for
               commonly supported symmetric cipher in our single group                   almost two decades) could passively eavesdrop on connections
               scans. Because of this, the percentages we present for IKEv1              to 3.6M (25.7%) publicly accessible SSH servers.
               and IKEv2 are a lower bound for the number of servers that                HTTPS DHEiscommonlydeployedonwebservers. 68.3%
               prefer Oakley Groups 1 and 2.                                             of Alexa Top 1M sites support DHE, as do 23.9% of sites
                  Of the 80K hosts that responded with a valid IKE packet,              with browser-trusted certiﬁcates. Of the Top 1M sites that
               44.2% were willing to accept an oﬀered proposal from at least             support DHE, 84% use a 1024-bit or smaller group, with 94%
               one scan. The majority of the remaining hosts responded                   of these using one of ﬁve groups.
               with a NO-PROPOSAL-CHOSEN message regardless of our pro-                    Despite widespread support for DHE, a passive eavesdrop-
               posal. Many of these may be site-to-site VPNs that reject                 per can only decrypt connections that organically agree to
               our source address. We consider these hosts “unproﬁled” and               use Diﬃe-Hellman. We can estimate the number of sites for
               omit them from the results here.                                         which this will occur by oﬀering the same sets of ciphersuites
                  Wefoundthat31.8%ofIKEv1and19.7%ofIKEv2servers                          as Chrome, Firefox, and Safari. While the oﬀered ciphers
               support Oakley Group 1 (768-bit) while 86.1% and 91.0%                    diﬀer slightly between browsers, this turns out to result in
               respectively supported Oakley Group 2 (1024-bit). In our                  negligible diﬀerences in whether DHE is chosen.
               sample of IKEv1 servers, 2.6% of proﬁled servers preferred                  Approximately 24.0% of browser connections with HTTPS-
               the 768-bit Oakley Group 1—which is within cryptanalytic                  enabled Top 1M sites (and 10% with browser-trusted sites)
               reach today for moderately resourced attackers—and 66.1%                 will negotiate DHE with one of the ten most popular 1024-bit
               preferred the 1024-bit Oakley Group 2. For IKEv2, 5.8%                    primes; 17.9% of connections with Top 1M sites could be
                                                                                    10
              passively eavesdropped given the precomputation for a single        Our analysis suggests that 1024-bit discrete log may be
              1024-bit prime. The most popular site that negotiates a           within reach for state-level actors. As such, 1024-bit DHE
              DHE ciphersuite using one of the two most common 1024-bit         (and 1024-bit RSA) must be phased out in the near term.
              primes is sohu.com (ranked 31st globally).                        NIST has recommended such a transition since 2010 [4]. We
              Mail    TLS is also used to secure email transport. SMTP,         recommend that clients raise the minimum DHE group size to
              the protocol used to relay messages between mail servers,         2048 bits as soon as server conﬁgurations allow. Server opera-
              allows a connection to be upgraded to TLS by issuing the          tors should move to 2048-bit or larger groups to facilitate this
              STARTTLS command. POP3S and IMAPS, used by end users              transition. Precomputation for a 2048-bit non-trapdoored
              to fetch received mail, wrap the entire connection in TLS.        group is around 109 times harder than for a 1024-bit group,
                Westudied 1% samples of the public IPv4 address space           so 2048-bit Diﬃe-Hellman will remain secure barring a major
              for IMAPS, POP3S, and SMTP+StartTLS. We found that                algorithmic improvement.
              50.7% of SMTP servers supported STARTTLS, 41.4% sup-              Avoid ﬁxed-prime 1024-bit groups.           For implementa-
              ported DHE, and 14.8% supported DHE_EXPORT ciphers.               tions that must continue to use or support 1024-bit groups
              15.5% of SMTP servers used one of the ten most common             for compatibility reasons, generating fresh groups may help
              1024-bit groups.                                                  mitigate some of the damage caused by NFS-style precom-
                For IMAPS, 8.4% of servers supported DHE_EXPORT and             putation for very common ﬁxed groups. However, we note
              75%supportedDHE.However, thetenmostcommon1024-bit                 that it is possible to create trapdoored primes [20,44] that
              primes account for only 5.4% of servers. POP3S deployment         are computationally diﬃcult to detect. At minimum, clients
              is similar, with 8.9% of servers supporting DHE_EXPORT            should check that servers’ parameters use safe primes or a
              and 74.9% supporting DHE, but with the ten most common            veriﬁable generation process, such as that proposed in FIPS
              1024-bit primes accounting for only 4.8% of servers.              186 [38]. Ideally, the process for generating and validating
                If each of the top ten 1024-bit primes used by each protocol    parameters in TLS should be standardized so as to thwart
              were compromised, this would aﬀect approximately 1.7M             the risk of trapdoors.
              SMTP, 276K IMAPS, and 245K POP3S servers. Using our               Don’t deliberately weaken crypto.           Our downgrade
              downgrade attack of §3.3, an attacker with modest resources       attack on export-grade 512-bit Diﬃe-Hellman groups in TLS
              can hijack connections to approximately 1.6M SMTP, 429K           illustrates the fragility of cryptographic “front doors”. Al-
              IMAPS, and 454K POP3S servers.                                    though the key sizes originally used in DHE_EXPORT were
                                                                                intended to be tractable only to NSA, two decades of algo-
              5.   RECOMMENDATIONS                                              rithmic and computational improvements have signiﬁcantly
                Our ﬁndings indicate that one of the key recommenda-            lowered the bar to attacks on such key sizes. Despite the
              tions from security experts in response to the threat of mass     eventual relaxation of crypto export restrictions and subse-
              surveillance—promotion of DHE-based TLS ciphersuites              quent attempts to remove support for DHE_EXPORT, the
              oﬀering “perfect forward secrecy” over RSA-based cipher-          technical debt induced by the additional complexity has left
              suites—may have actually reduced security for many hosts.         implementations vulnerable for decades. Like FREAK [7],
              In this section, we present concrete recommendations to re-       our attacks warn of the long-term debilitating eﬀects of
              cover the expected security of Diﬃe-Hellman as it is used in      deliberately weakening cryptography.
              mainstream Internet protocols.                                    6.   DISCLOSUREANDRESPONSE
              Transition to elliptic curves.        Transitioning to ellip-       We notiﬁed major client and server developers about
              tic curve Diﬃe-Hellman (ECDH) key exchange with appro-            the vulnerabilities discussed in this paper before we made
              priate parameters avoids all known feasible cryptanalytic         our ﬁndings public. Prior to our work, Internet Explorer,
              attacks. Current elliptic curve discrete log algorithms for       Chrome, Firefox, and Opera all accepted 512-bit primes,
              strong curves do not gain as much of an advantage from            whereas Safari allowed groups as small as 16 bits. As a
              precomputation. In addition, ECDH keys are shorter than           result of our disclosures, Internet Explorer [37], Firefox, and
              in “mod p” Diﬃe-Hellman, and shared-secret computations           ChromearetransitioningtheminimumsizeoftheDHEgroups
              are faster. Unfortunately, the most widely supported ECDH         they accept to 1024 bits, and OpenSSL and Safari are ex-
              parameters, those speciﬁed by NIST, are now viewed with           pected to follow suit. On the server side, we notiﬁed Apache,
              suspicion due to NSA inﬂuence on their design, despite no         Oracle, IBM, Cisco, and various hosting providers. Aka-
              known or suspected weaknesses. These curves are under-            mai has removed all support for export ciphersuites. Many
              going scrutiny, and new curves, such as Curve25519, are           TLS developers plan to support a new extension that allows
              being standardized by the IRTF for use in Internet proto-         clients and servers to negotiate a few well-known groups of
              cols. We recommend transitioning to elliptic curves where         2048-bits and higher and to gracefully reject weak ones [19].
              possible; this is the most eﬀective long-term solution to the
              vulnerabilities described in this paper.
              Increase minimum key strengths.            Server operators       7.   CONCLUSION
              should disable DHE_EXPORT and conﬁgure DHE ciphersuites             Diﬃe-Hellman key exchange is a cornerstone of applied
              to use primes of 2048 bits or larger. Browsers and clients        cryptography, but we ﬁnd that, as used in practice, it is often
              should raise the minimum accepted size for Diﬃe-Hellman           less secure than widely believed. The problems stem from
              groups to at least 1024 bits in order to avoid downgrade at-      the fact that the number ﬁeld sieve for discrete log allows an
              tacks when communicating with servers that still use smaller      attacker to perform a single precomputation that depends
              groups. Primes of less than 1024 bits should not be con-          only on the group, after which computing individual logs in
              sidered secure, even against an attacker with moderate re-        that group has a far lower cost. Although this fact is well
              sources.                                                          known to cryptographers, it apparently has not been widely
                                                                            11
               understood by system builders. Likewise, many cryptogra-                [11] D. Coppersmith. Solving linear equations over GF(2) via
               phers did not appreciate that the security of a large fraction               block Wiedemann algorithm. Math. Comp., 62(205), 1994.
               of Internet communication depends on Diﬃe-Hellman key                   [12] R. Crandall and C. B. Pomerance. Prime Numbers: A
               exchanges that use a few small, widely shared groups.                       Computational Perspective. Springer, 2001.
                  Akey lesson from this state of aﬀairs is that cryptogra-             [13] B. den Boer. Diﬃe-Hellman is as strong as discrete log for
               phers and creators of practical systems need to work together                certain primes. In Crypto, 1988.
               more eﬀectively. System builders should take responsibility             [14] W. Diﬃe and M. E. Hellman. New directions in
               for being aware of applicable cryptanalytic attacks. Cryp-                   cryptography. IEEE Trans. Inform. Theory, 22(6):644–654,
               tographers, for their part, should involve themselves in how                 1976.
               crypto is actually being applied, such as through engagement            [15] Z. Durumeric, E. Wustrow, and J. A. Halderman. ZMap:
                                                                                            Fast Internet-wide scanning and its security applications. In
               with standards eﬀorts and software review. Bridging the per-                Usenix Security, 2013.
               ilous gap that separates these communities will be essential            [16] M. Friedl, N. Provos, and W. Simpson. Diﬃe-Hellman group
               for keeping future systems secure.                                           exchange for the secure shell (SSH) transport layer protocol.
                                                                                            RFC4419, Mar. 2006.
               Acknowledgments                                                         [17] W. Geiselmann, H. Kopfer, R. Steinwandt, and E. Tromer.
                                                                                            Improved routing-based linear algebra for the number ﬁeld
               The authors wish to thank Michael Bailey, Daniel Bernstein,                  sieve. In Information Technology: Coding and Computing,
               RonDreslinski, TanjaLange, AdamLangley, KennyPaterson,                       2005.
               Andrei Popov, Ivan Ristic, Edward Snowden, Brian Smith,                 [18] W. Geiselmann and R. Steinwandt. Non-wafer-scale sieving
               Martin Thomson, and Eric Rescorla. This material is based                    hardware for the NFS: Another attempt to cope with
               in part upon work supported by the U.S. National Science                     1024-bit. In Eurocrypt, 2007.
                                                                                       [19] D. Gillmor. Negotiated ﬁnite ﬁeld Diﬃe-Hellman ephemeral
               Foundation under contracts CNS-1345254, CNS-1409505,                         parameters for TLS. IETF Internet Draft, May 2015.
               CNS-1518741, and EFRI-1441209, by the Oﬃce of Naval                     [20] D. M. Gordon. Designing and detecting trapdoors for
               Research under contract N00014-11-1-0470, by the ERC                         discrete log cryptosystems. In Crypto, 1992.
               Starting Grant 259639 (CRYSP), by the French ANR re-                    [21] D. M. Gordon. Discrete logarithms in GF(p) using the
               search grant ANR-12-BS02-001-01, by the NSF Graduate                         number ﬁeld sieve. SIAM J. Discrete Math., 6(1), 1993.
               Research Fellowship Program under grant DGE-1256260,                    [22] D. Harkins and D. Carrel. The Internet key exchange (IKE).
               by the Mozilla Foundation, by a gift from Supermicro, by                     RFC2409, Nov. 1998.
               the Google Ph.D. Fellowship in Computer Security, by the                [23] T. Jager, K. G. Paterson, and J. Somorovsky. One bad
               Morris Wellman Faculty Development Assistant Professor-                      apple: Backwards compatibility attacks on state-of-the-art
               ship, and by an Alfred P. Sloan Foundation Research Fellow-                  cryptography. In NDSS, 2013.
               ship. Some experiments were conducted using the Grid’5000               [24] A. Joux and R. Lercier. Improvements to the general
                                                                                            number ﬁeld sieve for discrete logarithms in prime ﬁelds. A
               testbed, which is supported by INRIA, CNRS, RENATER,                         comparison with the Gaussian integer method. Math.
               and several other universities and organizations; additional                Comp., 72(242):953–967, 2003.
               experiments used UCS hardware donated by Cisco.                         [25] C. Kaufman, P. Hoﬀman, Y. Nir, P. Eronen, and T. Kivinen.
                                                                                            Internet key exchange protocol version 2 (IKEv2).
                                                                                            RFC7296, Oct. 2014.
               8.    REFERENCES                                                        [26] S. Kent. IP authentication header. RFC 4302, Dec. 2005.
                [1] S. Bai, C. Bouvier, A. Filbois, P. Gaudry, L. Imbert,              [27] S. Kent. IP encapsulating security payload (ESP).
                    A. Kruppa, F. Morain, E. Thomé, and P. Zimmermann.                      RFC4303, Dec. 2005.
                    cado-nfs, an implementation of the number ﬁeld sieve               [28] T. Kleinjung. Cofactorisation strategies for the number ﬁeld
                    algorithm, 2014. Release 2.1.1.                                         sieve and an estimate for the sieving step for factoring 1024
                [2] R. Barbulescu. Algorithmes de logarithmes discrets dans les             bit integers, 2006. http://www.hyperelliptic.org/tanja/
                    corps ﬁnis. PhD thesis, Université de Lorraine, France, 2013.           SHARCS/talks06/thorsten.pdf.
                [3] R. Barbulescu, P. Gaudry, A. Joux, and E. Thomé. A                 [29] T. Kleinjung, K. Aoki, J. Franke, A. K. Lenstra, E. Thomé,
                    heuristic quasi-polynomial algorithm for discrete logarithm             J. W. Bos, P. Gaudry, A. Kruppa, P. L. Montgomery, D. A.
                    in ﬁnite ﬁelds of small characteristic. In Eurocrypt, 2014.             Osvik, H. te Riele, A. Timofeev, and P. Zimmermann.
                [4] E. Barker, W. Barker, W. Burr, W. Polk, and M. Smid.                    Factorization of a 768-bit RSA modulus. In Crypto, 2010.
                    NIST Special Publication 800-57: Recommendation for Key            [30] A. Langley, N. Modadugu, and B. Moeller. Transport layer
                    Management, 2007.                                                       security (TLS) false start. IETF Internet Draft, 2010.
                [5] D. J. Bernstein. How to ﬁnd smooth parts of integers, 2004.        [31] A. K. Lenstra and H. W. Lenstra, Jr., editors. The
                    http://cr.yp.to/factorization/smoothparts-20040510.pdf.                 Development of the Number Field Sieve. Springer, 1993.
                [6] D. J. Bernstein and T. Lange. Batch NFS. In Selected Areas         [32] M. Lipacis. Semiconductors: Moore stress = structural
                    in Cryptography, 2014.                                                  industry shift. Technical report, Jeﬀeries, 2012.
                [7] B. Beurdouche, K. Bhargavan, A. Delignat-Lavaud,                   [33] U. M. Maurer. Towards the equivalence of breaking the
                    C. Fournet, M. Kohlweiss, A. Pironti, P.-Y. Strub, and J. K.            Diﬃe-Hellman protocol and computing discrete logarithms.
                    Zinzindohoue. A messy state of the union: Taming the                    In Crypto, 1994.
                    composite state machines of TLS. In IEEE Symposium on              [34] U. M. Maurer and S. Wolf. Diﬃe-Hellman oracles. In Crypto,
                    Security and Privacy, 2015.                                             1996.
                [8] C. Bouvier, P. Gaudry, L. Imbert, H. Jeljeli, and E. Thomé.        [35] N. Mavrogiannopoulos, F. Vercauteren, V. Velichkov, and
                    New record for discrete logarithm in a prime ﬁnite ﬁeld of              B. Preneel. A cross-protocol attack on the TLS protocol. In
                    180 decimal digits, 2014. http://caramel.loria.fr/p180.txt.             ACMCCS,pages 62–72, 2012.
                [9] R. Canetti and H. Krawczyk. Security analysis of IKE’s             [36] C. Meadows. Analysis of the Internet key exchange protocol
                    signature-based key-exchange protocol. In Crypto, 2002.                 using the NRL protocol analyzer. In IEEE Symposium on
               [10] A. Commeine and I. Semaev. An algorithm to solve the                    Security and Privacy, 1999.
                    discrete logarithm problem with the number ﬁeld sieve. In          [37] Microsoft Security Bulletin MS15-055. Vulnerability in
                    PKC, 2006.                                                              Schannel could allow information disclosure, May 2015.
                                                                                  12
              [38] NIST. FIPS PUB 186-4: Digital signature standard, 2013.        [54] P. Zimmermann et al. GMP-ECM, 2012.
              [39] Oak Ridge National Laboratory. Introducing Titan, 2012.             https://gforge.inria.fr/projects/ecm.
                   https://www.olcf.ornl.gov/titan.                               [55] APEX active/passive exﬁltration. Media leak, Aug. 2009.
              [40] H. Orman. The Oakley key determination protocol.                    http://www.spiegel.de/media/media-35671.pdf.
                   RFC2412, Nov. 1998.                                            [56] Fielded capability: End-to-end VPN SPIN 9 design review.
              [41] S. C. Pohlig and M. E. Hellman. An improved algorithm for           Media leak. http://www.spiegel.de/media/media-35529.pdf.
                   computing logarithms over GF(p) and its cryptographic          [57] FY 2013 congressional budget justiﬁcation. Media leak.
                   signiﬁcance (corresp.). Trans. Inform. Theory, 24(1), 1978.         http://cryptome.org/2013/08/spy-budget-fy13.pdf.
              [42] J. M. Pollard. A Monte Carlo method for factorization. BIT     [58] GALLANTWAVE@scale. Media leak.
                   Numerical Mathematics, 15(3):331–334, 1975.                         http://www.spiegel.de/media/media-35514.pdf.
              [43] O. Schirokauer. Virtual logarithms. J. Algorithms,             [59] Innov8 experiment proﬁle. Media leak.
                   57(2):140–147, 2005.                                                http://www.spiegel.de/media/media-35509.pdf.
              [44] I. A. Semaev. Special prime numbers and discrete logs in       [60] Intro to the VPN exploitation process. Media leak, Sept.
                   ﬁnite prime ﬁelds. Math. Comp., 71(237):363–377, 2002.              2010. http://www.spiegel.de/media/media-35515.pdf.
              [45] D. Shanks. Class number, a theory of factorization, and        [61] LONGHAUL – WikiInfo. Media leak.
                   genera. In Proc. Sympos. Pure Math., volume 20. 1971.               http://www.spiegel.de/media/media-35533.pdf.
              [46] Spiegel Staﬀ. Prying eyes: Inside the NSA’s war on Internet    [62] POISONNUT – WikiInfo. Media leak.
                   security. Der Spiegel, Dec 2014.                                    http://www.spiegel.de/media/media-35519.pdf.
                   http://www.spiegel.de/international/germany/                   [63] SIGINT strategy. Media leak.
                   inside-the-nsa-s-war-on-internet-security-a-1010361.html.           http://www.nytimes.com/interactive/2013/11/23/us/
              [47] W. Stein et al. Sage Mathematics Software (Version 6.5).            politics/23nsa-sigint-strategy-document.html.
                   The Sage Development Team, 2015.                               [64] SPIN 15 VPN story. Media leak.
                   http://www.sagemath.org.                                            http://www.spiegel.de/media/media-35522.pdf.
              [48] stud: The scalable TLS unwrapping daemon, 2012.                [65] TURMOIL/APEX/APEX high level description document.
                   https://github.com/bumptech/stud/blob/                              Media leak. http://www.spiegel.de/media/media-35513.pdf.
                   19a7f19686bcdbd689c6fbea31f68a276e62d886/stud.c#L593.          [66] TURMOIL IPsec VPN sessionization. Media leak, Aug. 2009.
              [49] E. Thomé. Subquadratic computation of vector generating             http://www.spiegel.de/media/media-35528.pdf.
                   polynomials and improvement of the block Wiedemann             [67] TURMOIL VPN processing. Media leak, Oct. 2009.
                   algorithm. J. Symbolic Comput., 33(5):757–775, 2002.                http://www.spiegel.de/media/media-35526.pdf.
              [50] P. C. Van Oorschot and M. J. Wiener. Parallel collision        [68] VALIANTSURF (VS): Capability levels. Media leak.
                   search with application to hash functions and discrete              http://www.spiegel.de/media/media-35517.pdf.
                   logarithms. In ACM CCS, 1994.
              [51] P. C. Van Oorschot and M. J. Wiener. On Diﬃe-Hellman           [69] VALIANTSURF – WikiInfo. Media leak.
                   key agreement with short exponents. In Eurocrypt, 1996.             http://www.spiegel.de/media/media-35527.pdf.
              [52] D. Wagner and B. Schneier. Analysis of the SSL 3.0 protocol.   [70] VPN SigDev basics. Media leak.
                   In 2nd Usenix Workshop on Electronic Commerce, 1996.                http://www.spiegel.de/media/media-35520.pdf.
              [53] J. Wagnon. SSL proﬁles part 5: SSL options, 2013. https://     [71] What your mother never told you about SIGDEV analysis.
                   devcentral.f5.com/articles/ssl-proﬁles-part-5-ssl-options.          Media leak. http://www.spiegel.de/media/media-35551.pdf.
                                                                              13
