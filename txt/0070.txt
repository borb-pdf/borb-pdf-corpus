              230 A. M. TUKING [Nov. 12,
              ON COMPUTABLE NUMBERS, WITH AN APPLICATION TO
                                 THE ENTSCHEIDUNGSPROBLEM
                                           By A. M. TURING.
                              [Received 28 May, 1936.—Read 12 November, 1936.]
                  The "computable" numbers may be described briefly as the real
              numbers whose expressions as a decimal are calculable by finite means.
              Although the subject of this paper is ostensibly the computable numbers.
              it is almost equally easy to define and investigate computable functions
              of an integral variable or a real or computable variable, computable
              predicates, and so forth. The fundamental problems involved are,
              however, the same in each case, and I have chosen the computable numbers
              for explicit treatment as involving the least cumbrous technique. I hope
              shortly to give an account of the relations of the computable numbers,
              functions, and so forth to one another. This will include a development
              of the theory of functions of a real variable expressed in terms of com-
              putable numbers. According to my definition, a number is computable
              if its decimal can be written down by a machine.
                  In §§ 9, 10 I give some arguments with the intention of showing that the
              computable numbers include all numbers which could naturally be
              regarded as computable. In particular, I show that certain large classes
              of numbers are computable. They include, for instance, the real parts of
              all algebraic numbers, the real parts of the zeros of the Bessel functions,
              the number IT,s  e, etc. The computable numbers do not, however, include
              all definable numbers, and an example is given of a definable number
              which is not computable.
                  Although the class of computable numbers is so great, and in many
              Avays similar to the class of real numbers, it is nevertheless enumerable.
              In § 81 examine certain arguments which would seem to prove the contrary.
              By the correct application of one of these arguments, conclusions are
              reached which are superficially similar to thos Gbdelfe o Thesf.              e results
                  f Godel, " Uber formal unentscheidbare Satze der Principia Mathematica und ver-
              vvandter Systeme, I". Monatsheftc Math. Phys., 38 (1931), 173-198.
                    1936.]  ON COMPUTABL 23E NUMBERS.                                                                                                                                          1
                   have valuable applications. In particular, it is shown (§11) that the
                   Hilbertian Entscheidungsproblem can have no solution.
                         In a recent paper Alonzo Church f has introduced an idea of "effective
                    calculability", which is equivalent to my "computability", but is very
                    differently defined. Church also reaches similar conclusions about the
                    EntscheidungsproblemJ. The proof of equivalence between "computa-
                    bility" and "effective calculability" is outlined in an appendix to the
                    present paper.
                                                            1. Computing machines.
                         We have said that the computable numbers are those whose decimals
                    are calculable by finite means. This requires rather more explicit
                    definition. No real attempt will be made to justify the definitions given
                    until we reach § 9. For the present I shall only say that the justification
                    lies in the fact that the human memory is necessarily limited.
                         We may compare a man in the process of computing a real number to ;i
                    machine which is only capable of a finite number of condition qs q. .... q
                                                                                                                      1:   2         I;
                    which will be called " m-configurations ". The machine is supplied with a
                    "tape (th"              e analogue of paper) running through it, and divided into
                    sections (called "squares") each capable of bearing a "symbol". At
                    any moment there is just one square, say the r-th, bearing the symbo <2>(r)                                             l
                    which is "in the machine". We may call this square the "scanned
                    square ". The symbol on the scanned square may be called the " scanned
                    symbol". The "scanned symbol" is the only one of which the machine
                    is, so to speak, "directly aware". However, by altering its m-configu-
                    ration the machine can effectively remember some of the symbols which
                    it has "seen" (scanned) previously. The possible behaviour of the
                    machine at any moment is determined by the ra-configuration and the  q
                                                                                                                        n
                    scanned symbol <S (r).  This pai, ©r q (r)  will be called the '' configuration'':
                                                                        n
                    thus the configuration determines the possible behaviour of the machine.
                    In some of the configurations in which the scanned square is blank (i.e.
                    bears no symbol) the machine writes down a new symbol on the scanned
                    square: in other configurations it erases the scanned symbol. The
                    machine may also change the square which is being scanned, but only by
                    shifting it one place to right or left. In addition to any of these operations
                    the m-configuration may be changed. Some of the symbols written down
                         f Alonzo Church, " An unsolvable problem, of elementary number theory ", American
                    J. of Math., 58 (1936), 345-363.
                         X Alonzo Church, "A note on the Entscheidungsproblem", J. of Symbolic Logic, 1
                    (1936),  40-41.
                               232 A TURIN [NovG                                                                                                                                  . M.                                                                                                                                                                                                                                 . 12,
                               will form the sequenc ofe figures which is the decimal of the real number
                               which is being computed. The others are just rough notes to "assist the
                               memory ". It will only be these rough notes which will be liable to erasure.
                                        It is my contention that these operations include all those which are used
                               in the computatio a numbern of                                                      . The defence of this contention will be
                               easier when the theory of the machines is familiar to th Ie reader thn e                                                                                                                             .
                               next sectio In therefore proceed with the development of the theory and
                               assume tha itt is understood wha is meant                                                                                bt      y "machine", "tape",
                                "scanned" etc.,
                                                                                                            2. Definitions.
                                        Automatic machines.
                                        If at each stage the motion of a machine (in the sense § o 1f) is completely
                                determine bd                         y the configuration,  we shall call the machin an "autoe                                                                                                     -
                                matic machine (o a-machine)r "                                                      .
                                         .For some purpose we mighs t use machines (choic or e machines
                                c-manhines) whose motion is onty partially determined by the configuration
                                 (hence the us oe f the word "possible in §1). Whe"                                                                                                         n suc a machinh                     e
                                reaches one of these ambiguous configurations it canno,                                                                                       t go on until some
                                arbitrary choice has been made by an external operator. This would be the
                                case if we were using machine to deas                                                             l with axiomatic systems I thin .s
                                paper I deal only with automatic machines, and will therefore often omit
                                 the prefi a-.x
                                          Computing machines.
                                          If an a-machine prints two kinds of symbols, of which the first kind
                                 (called figures) consists entirely of  0 and 1 (the others being called symbols of
                                 the second kind), then the machine will b ae computin called                                                                                                        g machine.
                                 If the machine is supplie ad blan witkh tape and set in motion, starting
                                 from the correct initial ra-configuration, th oef th subsequence sjinboles
                                 printed by it which are of the first kind will be called th sequencee                                                                                                    computed
                                 by the machine.  The real number whose expressio a binarn as y decimal is
                                 obtained by prefacing this sequenc bye a decimal poin is callet                                                                                                                   thd     e
                                 number computed by the machine.
                                          At any stage of the motion of the machine, the number of the scanned
                                 square th,                       complete                e sequenc of ale symboll                                              os      n the tape an,                               d the
                                 ra-configuration will be said to describ completee the                                                                                          configuration at that
                                 stage. The changes of the machine and tape between successive complete
                                 configurations will be called the moves of the machine.
                1936.]  ON COMPUTABL 23E NUMBERS.                                                                                                            3
                     Circular and circle-free machines.
                     If a computing machine never writes down more than a finite number
                of symbols of the first kind, it will be calle circular.d         Otherwise it is said to
                be circle-free.
                     A machine will be circular if it reaches a configuration from which there
                is no possible move, or if it goes on moving, and possibly printing symbols
                of the second kind, but cannot print any more symbols of the first kind.
                The significance of the term "circular" will be explained in §8.
                     Computable sequences and numbers.
                     A sequence is said to be computable if it can be computed by a circle-free
                machine. A number is computable if it differs by an integer from the
                number computed by a circle-free machine.
                     We shall avoid confusion by speaking more often of computable
                sequences than of computable numbers.
                                        3. Examples of computing machines.
                     I. A machine can be constructed to compute th 010101...e sequence                                    .
                                                                                                            :>
                The machine is to have the four m-configurations "b", "c", "£", "c
                and is capable of printing " 0 " and 1 " ". The behaviour of the machine is
                described in the following table in which " R " means "the machine moves
                so that it scans the square immediately on the right of the one it was
                scanning previously". Similarly for "L". "E" means "the scanned
                symbol is erased" and "P" stands for "prints". This table (and all
                succeeding tables of the same kind) is to be understood to mean that for
                a configuration described in the first two columns the operations in the
                third column are carried out successively, and the machine then goes over
                into the m-configuration described in the last column. When the second
                column is left blank, it is understood that the behaviour of the third and
                fourth columns applies for any symbol and for no symbol. The machine
                starts in the m-configuratio bn with a blank tape.
                               Configuration                              Behaviour
                        m-config.             symbol            operations final-config.
                              b                None                PO, R                   c
                              c                None                   R                    c
                              c                None                PI, R                   t
                              I                None                   R                    b
               234 A. M. TURING [NOV. 12,
                   If (contrary to the descriptio § 1n) i wne allow the letters L, R to appear
               more than once in the operations column we can simplify the table
               considerably.
                       m-config.           symbol           operations     final m-config.
                                           None                PO                  6
                                              0             R, R, PI               b
                                               1            R, R, PO               b
                   II. As a slightly more difficult example we can construct a machine to
               compute the sequence 001011011101111011111 The machine is to
               be capable of five ra-configurations, viz o ". ", " q ", "p ", " f ", " b " and of
               printing "o", "x", "0" "1" Th.             ,    e first three symbols on the tape will
               be " aoO " ; the other figures follow on alternate squares. On the inter-
               mediate squares we never print anything but "x". These letters serve to
               " keep the place " for us and are erased when we have finished with them.
               We also arrange that in the sequence of figures on alternate squares there
               shall be no blanks.
                        Configuration                              Behaviour
                   m-config. symboloperations                                            final
                                                                                       m-config.
                        b PaR, Po, R, PO. R, R, PO, L, L , 0
                                                        i?, Px, L, L, L                    0
                         { ;                                                              q
                              fAny (0 or 1)                   R, R                         q
                        rt J
                        q i                                  PI, L
                              [ None                                                       p
                                                             E, R                          q
                              1                                R                           f
                        ^ 1 g
                              I None                          L, L                         p
                              fAny                            R,R                           f
                               None                         PO, L, L                        0
                   To illustrate the working of this machine a table is given below of the
               first few complete configurations. These complete configurations are
               described by writing down the sequence of symbols which are on the tape,
             1936.] ON COMPUTABL 23E NUMBERS.                                                                                 5
             with the m-configuration written below the scanned symbol. The
             successive complete configurations are separated by colons.
                  : 990 OrooO 0:99 0 :99 00 0:99 1:0                                                          0
                b o q q q p
                99 00     1:99 0 1:990  0 1:990  0 10 :
                      P P f f
                990 0 1:990 0 1 :oa0 0 1 0:
                            f f
                9 9 0 0 H-0: ....
                        c
                 This table could also be written in the form
                                   b :9 9 o 0 0 : 9 9 q 0 0 : ..., (C)
             in which a space has been made on the left of the scanned symbol and the*
             m-configuration written in this space. This form is less easy to follow, but
             we shall make use of it later for theoretical purposes.
                 The convention of writing the figures only on alternate squares is very
             useful: I shall always make use of it. I shall call the one sequence of alter-
             nate squares JF'-squares and the other sequence ^/-squares. The symbols oi .
             ^-squares will be liable to erasure. The symbols on F-squares form a
             continuous sequence. There are no blanks until the end is reached. There
             is no need to have more than one jE'-square between each pair of .F-squarcs :
             an apparent need of more ^/-squares can be satisfied by having a sufficiently
             rich variety of symbols capable of being printed on ^-squares. If a
             symbol /3 is on an F-square S and a symbol a is on the ^-square next on the
             right of S, then S and /3 will be said to be marked with a. The
             process of printing this a will be called markin jS (or S)g  with a.
                                        4. Abbreviated tables.
                There are certain types of process used by nearly all machines, and.
             these, in some machines, are used in many connections. These processes
             include copying down sequences of symbols, comparing sequences, erasing
             all symbols of a given form, etc. Where such processes are concerned we
             can abbreviate the tables for the m-configurations considerably by the use
             of "skeleton tables". In skeleton tables there appear capital German
             letters and small Greek letters. These are of the nature of "variables '".
             By replacing each capital German letter throughout by an ^^-configuration
              236                              A. M. TURING                          [Nov. 12,
              and each small Greek letter by a symbol, we obtain the table for an
              m-configuration.
                  The skeleton tables are to be regarded as nothing but abbreviations:
              they are not essential. So long as the reader understands how to obtain
              the complete tables from the skeleton tables, there is no need to give any
              exact definitions in this connection.
                  Let us consider an example:
              m-config.   Symbol Behaviour Final
                                              m-config.
                                                              From the m-configuration
              f(e,S5,a)                L f^G, 95, a)
                                                           f(@,  93, a) the machine finds the
                                       L f(<5,S3,a)
                                                           symbol of form a which is far-
                                                           thest to the left (the "first a")
              fi(6,93,a)               R                   and the ?w-confi,guration then
                                                           becomes (L If there is no a
                                        R    f (G,         then the m-configuration be-
                                              2
                            f a                            comes 93.
                             not a     R        I, 93, a)
                             None R 93
                  If we were to replace £ throughou q (say)t b, 9y3 by r, and a. by x, we
              should have a complete table for the m-configuratio x, x).n f f (q,  is called
              an "?/i-configuration function" or "m-function".
                  The only expressions which are admissible for substitution in an
              »i-function are the m-configurations and symbols of the machine. These
              have to be enumerated more or less  explicitly: they may include expressions
              such as p(c, x); indeed they must if there are any m-functions used at all.
              If we did not insist on this explicit eaumeration, but simply stated that
              the machine had certain m-configurations (enumerated) and all m-configu-
              rations obtainable by substitution of m-configurations in certain m-func-
              tion.-J, we .should usually get an infinity of m-configurations; e.g., we might
              say that the machine was to have the m-configuratio q annd all m-configu-
              rations obtainable by substituting an m-configuration for £ in p(£). Then
              it would have q, p(q), pfp(q)V p(p(p(q))), ... asm-configurations.
                  Our interpretation rule then is this. We are given the names of the
              ^-configurations of the machine, mostly expressed in terms of m-functions.
              We are also given skeleton tables. All we want is the complete table for
              the m-configurations of the machine. This is obtained by repeated
              substitution in the skeleton tables.
                     1936.] O COMPUTABLNE NUMBERS 23.                                                                                                                                                         7
                           Further examples.
                           (In the explanation ths e symbol "->" i uses                               d to signify "th machine                    e
                     goes into the ra-configuration. . . . ")
                      e((5,23,a)  f (e^S, S3 a), , S3, a) Fro c(S, 23, a)m th firste  a is
                                           „ ^ erase an ->d  (L I therf                                                               ies no                                        d
                     c^G, S3, a) # G
                        c(S3,  a) c(c(S3 a), 23, a) Fro c(S3, a) al letterl                                                           am s are           ,
                                                                                      erased and -»53.
                           The last example seems somewha tt moro interpree difficult that                                                                       n
                     most. Le suppost us                e that in the list of m-configurations  of some machine
                     there appear c('b,s  x) (=q saj'),                     Th.        table   e is
                                                   c(6 a;) e(c(b x). h, x)                                                                                                                                                                                 ,
                                                        ;
                     or q c(q, 6, a;).
                     Or, in greater detail:
                                                       q c(q x)                                                                                                                                                              , 6,
                                                                                                            1
                                                 c(q, 6, x) f (ci(q 6, , a. ), t), a)
                                                Cj.(q,  I), re) £ q.
                     In thi ws e could replace c (q, h, x) by q' and then give the table for f (with
                                                                JL
                     the right substitutions an eventualld                                          )  ay reac tabl ihn whice              nho
                     m-functions appeared.
                              , j8) f (pc^G, j8), €,Q Fro)                                                   pc (g, /3) them machine
                                                                                                rints
                                       [Any i?R pe^S.jS ^ ^ ^                                                                                        ) P
                                                        3J
                      ue (<S j8) \ sequenc of sj^mbols and -> C                                                                                                                                                                                                                                                                                                                                                                                                                               e
                                      [None P/S 6
                          I(S) ^ 2 Fro 2J, a) it does the                                                                                                          m f'((5
                                                                                                                    :
                           /gx j sam^                                                                 as for f(6, S3e , a) but
                          r                                 G
                                                                                             moves to th lefe              t befor -^e <3.
                     f(6,»,o) f(t(6),a3,a)
                     f"(S,»,o) f(t(S),S8,a)
                       c(S,S3,o) f'(c-i(S) a) c(<£ machin, S3, a). The                                                                                                  e                                                                                                                                           , 55,
                           c (<l) R pe( JS) write at the end the first syms-                                                                          €
                                                                                             bol marke ad and -> £.
                           238 A. M. TURING [NOV. 12,
                                  The last line stands for the totality of lines obtainable from it by
                           replacing fi by any symbol which may occur on the tape of the machine
                          concerned.
                             cc(£,S3,a) c(e(G,S3,a),83,a ce(23 a). The machine                                                                                                                                                 ,                                                                                                                                                                                                                                                                                                  )
                                                                                                                           copies down in order at the
                                cc(23,a) ce(ce(83,a),23,a) end all symbols marked a
                                                                                                                           and erases the letters a; ->SS.
                          vc(G,93,a,j8) f(re(g $B a,8),^a) rc(£, S3, a, 0). The ma-
                                                                                1     3       3     i         5
                                                                                                                           chine replaces the first a by
                           re^^a.f E,Ppl                                        <Z8 and->g 35 i^f there is no a.
                                                                                                     (
                                                                                                                                      a          The machine re
                              re(S, a, P) re j8) («(», 93, a, a, j8,) «<»> # '                                                                                                     "
                                                                                                                           places all letters a by ]S; ->S5.
                              cr(Ci,23 a) c(tt(G,9$,a,a)r(83, a) differs from                                                                                                                                                                                                                                                                                                                                                    , S3,a)
                                              ;                                                                       C
                                                                                                                           ce(23,      a) 011137" in that the
                                                                      «(«(5S,a),rc(SS,a,a),a) letters a are not erased. The
                                                                                                                           m-configuration cv(5S, a) is
                                                                                                                           taken up when no letters
                                                                                                                            "a" are on the tape.
                           r (C. 21, e. a. ,5) f S(, )S) (cpi, f(3t, g, j8)^ , a)
                                cp,(C,  2l,i8) 7 f(e,2T, y), S( (cp,
                                                                                                      2
                                                                        7 S
                                cp.,((S.     2(, y)
                                                                 [noty SI.
                                  The first symbol marked a and the first marked ]8 are compared. If
                           there is neither a nor ft, —> (I\ If there are both and the symbols are alike,
                           -> (5. Otherwis 21.                                         e ->
                                              cpc(6,  SI, G, a, jS) c (e((5p, (c S, yS),  6, a), SI, g, a, ^)
                                   cpe(S,  21, S, a, j8) differs from cp(§ 21, £, , a, j8) in that in the case when
                           there is similarity the first a and /? are erased.
                                                     cpe^ Q,,            a, P) cp (cpe(Sl,                              Q,e a, j8),  21, 6, a, )3).
                                   cpe(2I, S, a,           j8). The sequence of symbols marked a is compared with
                           the sequence marke /?. -d                                    Q>  if they are similar. Otherwis 21. Somee ->
                           of the symbols a an /d? are erased.
                   1936.]                             ON COMPUTABLE NUMBERS.                                                239
                                JAny             R                                                 a). Th machine                         e
                                 [None           R                                    finds th lase                 t symbo of               l
                                                                                      form a -.          @> .
                                JAny             R
                                 [None
                                   not a
                                                                           3)>  a) pc(S, a, jS).  The machine
                                                                                              2
                                                                                      print as  j8 at the end.
                                                             ce(ce(25    j8), a) ce(S5,a,j8,y).  Th mache                          -
                   ce2(95, a,                                           5                      3
                                                                                      ine copies dow ant the end
                   ce (S5,a, j8,y)                        ce (ce(S5,0, y), a)  £               he symbols marke a, d
                      3                                           2                      rst t
                                                                                      then those marke jS, andd
                                                                                      finally thos markee               y;d it
                                                                                      erases the symbol as , /?, y.
                                                                    e ((5) Fro e(^) th marke                               s are                 m
                                                 R                   1
                                                 L                    ,^> erase all marked sym-                                                         d from
                                                                                       bols. - @> .
                                 f
                                   Any R, R E,
                                  None
                                            5. Enumeration of computable sequences.
                        A computable sequence               y is determined         by a description          of a machine
                   which computes y. Thus the sequence 001011011101111...                                    is determined
                   by the table on p. 234, and, in fact, any computable sequence is capable of
                   being described in terms of such a table.
                        It will be  useful to put these tables into               a kind of standard form.             In the
                   first place let us suppose that the table                  is given in the same form as the first
                   table, for  example,        I on p. 233.  That is to  say,  that the entry in the operations
                   column is  always         of one  of the forms       E :E,R:E,L:Pa: Pa R:, Pa, L:R:L:
                   or no entry  at all. Th table e  can always  be put into this form by intro-
                   ducing more m-configurations. Now let us give numbers to the w-configu-
                   rations, calling them  q , ..., q, as in §1. Th initiae                         l m-configuration           is
                                                     x          R
                   always  to be called  q  W alse o give numbers  to the symbols  #]_,..... S,
                                                   v                                                                            m
                              240                                                                  A. M. TUBING                                                                      [Nov. 12,
                              and, in particular, blan,k 0 = = 8 S 1 = S. The hnes of the table are
                              now of form                                                        0                  lt                2
                                                                                                                                                          Final
                                      m-config. Symbol Operations m-config.
                                                                                                                   PS ,L
                                              to                                   s,                                     k
                                              to                                   Si                             PS R
                                                                                                                          ki
                                               to                                  Si                                 PSk
                             Lines such as
                                              to                                   Si                                E, R
                             are to be written as
                                                                                                                  PS , R
                                              to                                   Si                                    0
                             and lines such as
                                              ft                                   Si                                    R
                             to be written as
                                              to                                   s.                             PS,, R
                                     In this way we reduce each line of the table to a line of one of the forms
                              (Nj, (N), (i\y.
                                                 2
                                     From each line of form (N^ let us form an expressio q Sj S  L q ; n
                                                                                                                                                                               (     ] b             m
                             from each line of for) we form (Nm an expressioSSRq n; q
                                                                                                       2                                                                              i  j   k       m
                             and from each line of form (N) we form an expression #,#, SNq .
                                                                                                   3                                                                           k       m
                                     Let us write down all expressions so formed from the table for the
                             machine and separate them by semi-colons. In this way we obtain a
                             complete description of the machine. In this description we shall replace
                             q{ by the letter "D" followed by the letter "A" repeate $,- by d i times, and
                             "D" followed by "C" repeated j times. This new description of the
                             machine may be called the standard description (S.D). It is made up
                             entirely from the letters "A", " C", "D", "L", "R", "N", and from
                                     If finally we replace "A" b "1"y  "C",  by "2", "D" by "3", " L"
                                                                       c                                                                  3>          £<
                             by "4", "R" b'5"y , "N" by "6", an bd "*y                                                                                      7" we sh,all have a
                             description of the machine in the form of an arabic numeral. The integer
                             represented by this numeral may be description called a number (D.N) of
                             the machine. The D.N determine the S.D and the structure of the
                         1936.]  O COMPUTABLEN NUMBERS 24.                                                                                                                                                                                           1
                         machine uniquely. The machine whos is n mae D.y bN e described as
                                To each computable sequence there corresponds at least one description
                         number, while to no description number does there correspond more than
                         one computable sequence. The computable sequence ares and numbers
                         therefore enumerable.
                                Let us find a description number for the machin Ie of § 3. When we
                         rename the m-configurations                                it tabls          e becomes:
                                                            q-L ^o *b K q
                                                                                                              1}                           2
                                                            q  S P8, R q
                                                              2                      Q                        O                             3
                                                            q  S PS R #
                                                              3                      o                         2)                           4
                                                                                       PS
                                                            ft S o>R ft
                                                                                    Q
                                Other tables coul be obtained                                  bd y adding irrelevant line as                                                s such
                                                         q  S PSR q
                                                            x                     x                          V                           2
                          Our first standard b fore                                                     m would
                                              q OQOJRq%j q%^o^o-"ft» 2*3®o^2-"ft' ft^o^oRQ\J
                                                x
                                The standard descriptio is                                                                         n
                         DADDCRDAA ;DAADDRDAAA;
                                                                                    I^^DDCCtfi)^^ \DAAAADDRDA;
                          A description numbe is                                      r
7                                             3133253117311335311173111332253111173111133531
                          and so is
7                                313325311731133531117311133225311117311113353173132325311
                                A number which is a description number of a circle-free machine will be
                          called a satisfactory  number. I §n 8 it is shown that there can be no general
                          process for determining whethe a giver n number is satisfactory or not.
                                                               6. The universal computing machine.
                                 It is possible to inven at  single machine which can be used to compute
                          any computable sequence I thi.f s machine M is supplied wit ah tape on
                         the beginning of which is written the S.D of some computing machine .At,
                                 8KR.  2. VOL 42 NO. .                 2144.     B.
                 242 A. M. TURING [NOV. 12,
                 then 'It will compute the same sequence as it. In this section I explain
                 in outline the behaviour of the machine. The next section is devoted to
                 giving the complete table for U.
                      Let us first suppose that we have a machine it' which will write down on
                 the .F-squares the successive complete configurations of it. These might
                 be expressed in the same form as on p. 235, using the second description,
                 (C), with all symbols on one line. Or, better, we could transform this
                 description (as in §5) by replacing each ra-configuration by "D" followed
                 by "A" repeated the appropriate number of times, and by replacing each
                 symbol by "D" followed by "C" repeated the appropriate number of
                 times. The numbers of letters'' A " and' C " ar' e to agree with the numbers
                 chosen in §5, so that, in particular, "0" is replaced by "DC",
                                                                                                      "1 b"y
                 "DCC", and the blanks by "D". These substitutions are to be made
                 after the complete configurations have been put together, as in (C). Diffi-
                 culties arise if we do the substitution first. In each complete configura-
                 tion the blanks would all have to be replaced by " D ", so that the complete
                 configuration would not be expressed as a finite sequence of symbols.
                     If in the description of the machine II o §f  3 we replace " o " by " DA A ",
                 "a" by "DCCC", "q" by "DAAA", then the sequence (C) becomes:
                   DA .DCCCDCCCDAADCDDC.DCCCDCCCDAAADCDDC:... (CJ
                 (This is the sequence of symbols on ^-squares.)
                     It is not difficult to see that if it can be constructed, then so can it'.
                 The manner of operation of it' could be made to depend on having the rules
                 of operatio {i.e.,n    the S.D) of il written somewhere within {i.e. itsel withif                 n
                 il/) eac;      h step could be carried out by referring to these rules. We have
                 only to regard the rules as being capable of being taken out and ex-
                 changed for others and we have something very akin to the universal
                 machine.
                     One thing is lacking : at present the machine it' prints no figures. We
                 may correct this by printing between each successive pair of complete
                 configurations the figures which appear in the new configuration but not
                in the old. Then (C^) becomes
                                 DDA:O:O:DCCCDCCCDAADCDDC:DCCC... (C)
                                                                                                                2
                     It is not altogether obvious that the ^-squares leave enough room for
                 the necessary "rough work", but this is, in fact, the case.
                     The sequences of letters between the colons in expressions such as
                 (Cj) may be used as standard descriptions of the complete configurations.
                 When the letters are replaced by figures, as in § 5, we shall have a numerical
              1936.] ON COMPUTABL 24E NUMBERS.                                                                          3
              description of the complete configuration, which may be called its descrip-
              tion number.
                        7. Detailed description of the universal machine.
                  A table is given below of the behaviour of this universal machine. The
              m-configurations of which the machine is capable are all those occurring in
              the first and last columns of the table, together with all those which occur
              when we write out the unabbreviated tables of those which appear in the
              table in the form of m-functions. E.g., e(anf) appears in the table and is an
              wi-fimction. Its unabbreviated table is (see p. 239)
                          e(anf)        9              R           e^onf)
                                        not 9          L            c(anf)
                          e^anf)        Any          R, E, R       ei(anf)
                                        None                         anf
                  Consequently e(anf) is an m-configuration of U.
                                1
                  When \l is ready to start work the tape running through it bears on it
              the symbol a on an .F-square and agai Q onn the next i£-square; after this,
               on .F-squares only, comes the S.D of the machine followed by a double
               colon "::" (a single symbol, on an .F-square). The S.D consists of a
               number of instructions, separated by semi-colons.
                  Each instruction consists of five consecutive parts
                  (i) "D" followed by a sequence of letters "A". This describes the
               relevant m-configuration.
                  (ii) "JD" followed by a sequence of letters " C". This describes the
               scanned symbol.
                  (iii) "D" followed by another sequence of letters "C". This
               describes the symbol into which the scanned symbol is to be changed.
                  (iv) "L", "i2", or "JV", describing whether the machine is to move
               to left, right, or not at all.
                  (v) "D" followed by a sequence of letters "A". This describes the
               final m-configuration.
                                                                         ct
                  The machine U is to be capable of printing "A",D" "0", "0",               ,
              "1" "u",,    "v", "w", "z", "y", "z". The S.D is formed from ";",
                                        ((
               "A", "C", "D"R" "N"., "L",
                                           }
                                                                                                                                          [Nov. 12,
                       244 A. M. TURING
                             Subsidiary skeleton table.
                                                                                                           con(@. a). Starting from
                                           (Not A R, R con(£, a)
                       con(@,      a)                                                                an J^-square, S say, the se-
                                                 A L, Pa, R con^S, a)                                                                        scrib-
                                                                                                 quence Q of symbols de
                                                 A R,Pa,R con^a) ing a configuration closest on
                       con^CE,      a)                                                               the right of S is marked out
                                                 D          R, Pa, R con(§, a) with letters a. ->@.
                                                                                      2
                                                 G          R, Pa, R con(£,a) con(S, ). In the final con-
                       con (§, a)                                                     2
                             2               Not C R.R figuration th machine                                                                                          e is
                                                                                                     scanning the square which is
                                                                                                     four square tso the right of the
                                                                                                     last square of C. C is left
                                                                                                     unmarked.
                             The table for U.
                                                                                                             6. The machine prints
                                                                                                                 on the .F-squares after
                       h  R,R,P:,R,R,PDR,R,PA anf
                         x                              ;                                                  ->anf.
                       anf                                                       g(anf 1} :) anf. The machine marks
                                                                                                       the configuration in the last
                                                                               COn  (font,     y)               i      configuration with
                                                                                                   compete
                                                                                                       y. -
                                                          R, Pz L con (limp,                  x) font. The machine finds
                                                                    :                                  the last semi-colon not
                       font                                   L,L                    !om               marked with z. It marks
                                    not z nor                    L                    !om              this semi-colon with z and
                                                                                                       the configuration following
                                                                                                       it with x.
                        Hnr,> cpe(c(fom, x, y), iim, x, y) fmp. The machine com-
                                                                                                       pares the sequences marked
                                                                                                       x and y. It erases all letters
                                                                                                       x and y. -> Sim if they are
                                                                                                       alike. Otherwis -> font.                        e
                              anf. Taking the long view, the last instruction relevant to the last
                        configuration is found. It can be recognised afterwards as the instruction
                        following the last semi-colon marked z. -Mim.
                   1936.]                             ON COMPUTABLE NUMBERS.                                                    245
                   Sim                                                                   S im. The machine marks out
                                                            con (stm , )            the instructions. That part of
                                                                        2           the instructions which refers to
                                 A                                    Sim3          operations to be carried out is
                                     A .R,Pu,               ,R        Sim           marked with u, and the final m-
                               not                   R, R                  2        configuration with y. The let-
                               not A            L, Py              e(mB,            ters z are erased.
                                  A        L,Py,            ,R        Sim3
                   mt                                                                   mi. The last complete con-
                                                                                    figuration is marked out into
                                                                                    four sections. The configiira-
                                  A           L, L, L, L              mf2           ration is left unmarked. The
                                  C           , Pa;, j^ Z',   ,                     symbol directly preceding it is
                                                                                    marked with x. The remainder
                                                                                    of the complete configuration
                                                                                    is divided into two parts, of
                                  D R, Px, L, L, L m?
                                                                          3         which the first is marked with
                               not : R, Pv, L, L, L m!
                    m?                                                    3         v and the last with  w. A colon is
                        3                                                           printed after the whole.  -> $f;.
                                   : mL
                    m?4                                  con
                            [Any                                       mf6
                    mh [ None                       P:
                                                                            , u) Sf;. The instructions (marked
                                               L, L, L                              u) are examined. If it is found
                                                                                    that they involve "Print 0" or
                                               ?, R, R, R                            "Print 1", then 0: or 1: is
                                                                                    printed at the end.
                                                  R, 22
                                                                   inSt, 0, :
                                                                      xnit
                    246 A TURIN [NOVG                                                                       . M.                                                                                                                                       . 12,
                                                                                                Th nexe                    t
                    in«t fl(t(in«),tt) «** complete 
                                                           1
                                                                                   configuration is written down,.
                                       a R, E in^t(a) carrying out the marked instruc-
                                                                    1
                                                                                 tions Th lettere              u  v  w  xs
                            L) ce(o»,.t>,  y, x, u, w)                                    -                      > > > > V
                                                       5                           are erased -^anf.                          .
                            i?) ce(o», v, x, u, y, w)
                                                       5
                    \nit {N) ec(ot>, v, x, y, u, w)
                         x                            5
                    co c(anf)
                                               8. Application of the diagonal process.
                         It may be thought that arguments which prove that the real numbers
                    are not enumerable would also prove that the computable numbers and
                    sequences cannot be enumerable*. It might, for instance, be thought
                    that the limit of a sequence of computable numbers must be computable.
                    This is clearly only true if the sequence of computable numbers is defined
                   by some rule.
                         Or we might apply the diagonal process. "If the computable sequences
                   are enumerable, le bt ae the n-th computable sequence, an(ra) bd lee t </>
                                                    /(                                                                    ;l
                   the ?n-th figure in. Le a                        t /? be the sequenc \—<j>e wit(n)h  as its n-th.
                                                   u                                                            n
                   figure. Since /3 is computable, there exists a number K such that
                    l—cf) (n) = <f)(n) all n. Puttin n = K, w havge                                e 1 = 2(f>(K), i.e. 1 is
                           ll             K                                                                     K
                   even. This is impossible. The computable sequences are therefore not
                   enumerable".
                         The fallacy in this argument lies in the assumption that § is computable.
                   It would be true if we could enumerate the computable sequences by finite
                   means, but the problem of enumerating computable sequences is equivalent
                   to the problem of finding out whether a given number is the D.N of a
                   circle-free machine, and we have no general process for doing this in a finite
                   number of steps. In fact, by applying the diagonal process argument
                   correctly, we can show that there cannot be any such general process.
                         The simplest and most direct proof of this is by showing that, if this
                   general process exists, then there is a machine which computes /?. This
                   proof,  although perfectly sound, has the disadvantage that it may leave
                   the reader with a feeling that "there must be something wrong". The
                   proof which I shall give has not this disadvantage, and gives a certain
                   insight into the significance of the idea "circle-free". It depends not on
                   constructin /3g , but on constructing fi', whose n-th. figure <j> is                            {n).
                                                                                                                  n
                              * Cf. Hobson, Theory of functions         of a real variable  (2nd ed. 1921),      , 87, 88.
                             1936.] ON COMPUTABL 24E NUMBERS.                                                                                                                                                                                                                               7
                                     Let us suppose that there is such a process; that is to say, that we can
                             invent a machin <De- which, when supplied with the S.D of any computing
                             machine il will test this S.D and if il is circular will mark the S.D with the
                             symbol "u" and if it is circle-free will mark it s wit ". Bh " y combining
                             the machine <s& and U we could construct a machin :l I- to compute                                                                                                       e the
                             sequence j8'. The machin <O-e may require a tape. We may suppose that
                             it uses the jE'-squares beyond all symbols on .F-squares, and that when it
                                                                                                                                             l
                             has reached its verdict all the rough work done by0- is erased.
                                  The machine Ji has its motion divided into sections. In th 1e first N—
                             sections, among other things, the integer 2,...s 1 N—,,                                                                     1 have been written
                                                                                                         <
                             down and tested by the machinQ>-.e A certain number, say R(N— I), of
                             them have been found to be the D.N's of circle-free machines. In the N-th
                                                                           (
                            section the machin&e tests the number N. If N is satisfactory, i.e., if it
                             is the D.N of a circle-free machine, then R(N) = l-\-R(N—l) and the first
                             R{N) figures of the sequence of which a $£N is N are calculated. The
                             R(N)-th figure of this sequence is written down as one of the figures of the
                             sequence/3' computed by Ji. If N is not satisfactory, then R(N) = R(N— 1)
                             and the machine goes on to the (iV-(-l)-th section of its motion.
                                     From the constructio J I- wn oe caf                                                 n see that .11- is circle-free. Each
                             section of the motion of Ji comes to an end after a finite number of steps.
                             For, by our assumption about Q, the decision as to whether i Ns satisfactor}'
                             is reached in a finite number of steps. If N is not satisfactory, then the
                             JV-th section is finished. If N is satisfactory, this means that the machine
                             il(JV) whose D.N is N is circle-free, and therefore its J?(iV)-th figure can be
                             calculated in a finite number of steps. When this figure has been calculated
                             and written down as the R(N)-th figure /3' th,                                                                 e o iV-tf     h section is finished.
                             Hence il is circle-free.
                                    Now let K be the D.N of Ji. What does Ji do in the K-th. section of
                            its motio 1n It must test whether K is satisfactory, giving a 5 verdic "                                                                                                                     t "
                            or "u". Since K is the D.N of JI- and since JI is circle-free, the verdict
                            cannot be "u". On the other hand the verdict cannot be "s". For if it
                            were, then in the K-th. section of its motio J I-n would be bound to compute
                            the first R(K— 1 =1) + R(K) figures of the sequence computed by the
                            machine with K as its D.N and to write down the R(K)-th as a figure of the
                            sequence computed by ill. The computation of th — le first figures R(K)
                            would be carried out all right, but the instructions for calculating the
                            R(K)-th. would amount to "calculate the first R(K) figures computed by
                            H and write down the R(K)-th". This R{K)-th figure would never be
                            found. I.e., 'i-l is circular, contrary both to what we have found in the last
                            paragraph and to the verdict "s". Thus both verdicts are impossible
                            and we conclude that there can be no machine '0-.
                                                          248 A TURING [NOV. M.                                                                                                                                                                                                                                                                                                          12,                                                                                                                                                                                                                                                                                                                                                                           .
                                                                        We can show further that there no machine can be £ which, when
                                                        supplied iviih the S.D of an arbitrary machine AV, will determine vjhether AV
                                                         ever prints a given symbol (0 say).
                                                                         We will first show that, if ther ae i machins                                                                                                                                                      e £, then there i as general
                                                         process for determining whethe a givenr machin . Ue< print 0s infinitely
                                                         often. Let Jl be a machine which prints the same sequence as A\, except
                                                                                                                       x
                                                         that in the position where the 0 first printed by .11- stands, A\ print 0.s
                                                                                                                                                                                                                                                                                                                                                          x
                                                          U  is to have the first two s\aribols 0 replaced by 0, and so on. Thus if  U-                                                                                                                                                                                                                                                                                     ,
                                                                       2
                                                         were to print
                                                                                                                                                               ABAQlAABOQIOAB...,
                                                         then A\ would print
                                                                                               ±
                                                                                                                                                                ABA01AAB0010AB...
                                                         and .11 would print
                                                                                            2
                                                                                                                                                              ABAoiAAB~00l0AB....
                                                                                                                         ;
                                                                          Xow let H be a machine which, when supplied with the S.D of .U, will
                                                          write down successively the S. oDf .11,  of .ll  of  U , ... (ther ies such a
                                                                                                                                                                                                                                                                      l5                                    2
                                                          machine). We combin V'e with I' and obtai a nenw machine, Xj I.                                                                                                                                                                                                                                                                       n the
                                                          motion of (, first > is used to write down the S. oDf -U, and the tn  tests
                                                          it.: o: iy written if it is found tha t  11 never prints 0; the ^ writen                                                                                                                                                                                                                                    s the S.D
                                                           of  II , and this is tested. :.  0 : being printed if and only i f U  never prints 0)
                                                                                    2                                                                                                                                                                                                                                                       x
                                                           and so on. KOA let uV s test .<, with ('. If it is found tha X] nevet                                                                                                                                                                                                                                          r prints 0,
                                                           then .H prints 0 infinitely often i;f Xj prints 0 sometimes, then .11 does not
                                                          print 0 infinitely often.
                                                                           Similarly there is a general process for determining whethe  U- printr                                                                                                                                                                                                                                                       1s
                                                           infinitely often. B a combinatioy                                                                                                                              n of these processes we hav a procese                                                                                                                                       s
                                                           for determining whether U print.                                                                                                                          s an infinity of figures,                                                                    i.e.          we have a process
                                                           for determining whethe is circle-freer .1. Ther1                                                                                                                                                                                            can therefore                                              e be no
                                                           machine i .
                                                                           The expression "ther is a generae                                                                                                                                      l proces fosr determining..." has
                                                            been used throughout thi ass equivalen sectiont to "there i as  machine
                                                            which will determine ... ". This usage can i bf ane justified only idf we
                                                           can justify our definitio of "computable"n                                                                                                                                                                                          . For each of these "general
                                                                                               :
                                                           process' problems ca be expressen                                                                                                                             d  as a problem concernin a generag                                                                                                                                                 l
                                                           process for determining Avhether a given integer n has a property G(n) [e.g.
                                                            G{n) might mean "n is satisfactory "n" o is thr e Godel representation of
                                                           a provable formula"] and this is equivalen,                                                                                                                                                                              tto computing a number
                                                          whose n-th. figure is 1 if G (n) is true and 0 if it is false.
              1936.] Otf COMPUTABLE NUMBERS. 249
                               9. The extent of the computable numbers.
                No attempt has yet been made to show that the " computable " numbers
             include all numbers which would naturally be regarded as computable. Al I
             arguments which can be given are bound to be, fundamentally, appeals
             to intuition, and for this reason rather unsatisfactory mathematically.
             The real question at issue is " What are the possible processes which can be
             carried out in computing a number?"
                 The arguments which I shall use are of three kinds.
                       (a) A direct appeal to intuition.
                       (6) A proof of the equivalence of two definitions (in case the new
                   definition has a greater intuitive appeal).
                       (c) Giving examples of large classes of numbers which are
                   computable.
                                                                              c:
                  Once it is granted that computable number computable""s are. all
              several other propositions of the same character follow. In particular, it
              follows that, if there is a general process for determining whether a formula
              of the Hilbert function calculus is provable, then the determination can bo
              carried out by a machine.
                 I. [Type (a)]. This argument is only an elaboration § o 1f th. e ideas of
                  Computing is normally done by writing certain symbols on paper. "We
              may suppose this paper is divided into squares like a child's arithmetic book.
              In elementary arithmetic the two-dimensional character of the paper is
              sometimes used. But such a use is always avoidable, and I think that it
              will be agreed that the two-dimensional character of paper is no essential
              of computation. I assume then that the computation is carried out on
              one-dimensional paper, i.e. on a tape divided into squares. I shall also
              suppose that the number of symbols which may be printed is finite. If we
              were to allow an infinity of symbols, then there would be symbols differing
              to an arbitrarily small exten j. Tht       e effect of this restriction of the number
              of symbols is not very serious. It is always possible to use sequences of
              symbols in the place of single symbols. Thus an Arabic numeral such as
                  f If we regard a symbol as literally printed on a square we may suppose that the square
              is 0 < x < 1, 0 < y < 1. The symbol is defined as a set of points in this square, viz. the
              set occupied by printer's ink. If these sets are restricted to be measurable, we can define
              the "distance" between two symbols as the cost of transforming one symbol into the
              other if the cost of moving unit area of printer's ink unit distance is unity, and there is an
              infinite supply of ink at x = 2. y = 0. With this topology the symbols form a condition-
              ally compact space.
                  250 A TUBING [NOV. M.                                                                             12,                                                                                                             .
                  17 or 999999999999999 is normally treated a a singls                     e symbol. Similarly
                  in any European language words are treated as single symbols (Chinese,
                  however, attempt to havs e an enumerable infinit of symbols)y                                  Th.    e
                  differences from our point of view between the single and compound symbols
                  is that the compound symbols, if they are too lengthy, cannot be observed
                  at one glance. This is in accordance with experience. We cannot tell at
                  a glance whether 9999999999999999 and 999999999999999 are the same.
                       The behaviour of the compute at any momenr                           t is determined by the
                  symbols which he is observing, and " hi stats e of mind " at that moment.
                  We may suppose that ther is a boune                     d B to the numbe orf symbols  or
                  squares which the computer can observe at one moment I hfe wishe.                                 s to
                  observe more, he must use successive observations. We will also suppose
                  that the number of states of mind which need be taken into account is finite.
                  The reasons for this are of the same character as those which restrict the
                  number of symbols I. f we admitted an infinity of states of mind, some of
                  them will be '' arbitrarily close " and will be confused. Again, the restriction
                  is not one which seriously affects computation, since the use of more compli-
                  cated states of mind can be avoided by writing more symbols on the tape.
                       Let us imagine the operations performed by the computer to be split up
                  into "simple operations s" whico elementarh arey tha itt is not easy to
                  imagine them further divided. Every such operation consists of some change
                  of the physical system consisting of the computer and his tape. We know
                  the state of the syste if wme know the sequence of symbols on the tape,
                  which of these are observe byd the computer (possibl a speciay witlh
                  order) an,    d the state of mind of the computer. We may suppose a that in
                  simple operation not more than one symbol is altered. Any other changes
                  can be split up into simple changes of this kind. The situation in regard to
                  the squares whose symbols may be altered in this way is the same as in
                  regard to the observed squares W may.e                        , therefore, withou of                           t loss
                  generality, assume that the squares whose symbols are changed are always
                  "observed" squares.
                       Besides these changes of symbols, the simple operations must include
                  changes of distributio ofn observed squares. The new observed squares
                  must be immediately recognisable by the computer. I think i ist reasonable
                  to suppose that they can only be squares whose distance from the closest
                  of the immediately previously observed squares doe as certai not exceen                                      d
                  fixed amount. Let us say that each of the new observed squares is within
                  L squares of an immediately previously observed square.
                       In connection with "immediate i recognisabilitt may be thought y ",
                  that there are other kinds of square which are immediately recognisable.
                  In particular, squares marked by special symbols might be taken as imme-
       1936.] ON COMPUTABL 25E NUMBERS.                            1
       diately recognisable. Now if these squares are marked only by single
       symbols there can be only a finite number of them, and we should not upset
       our theory by adjoining these marked squares to the observed squares. If.
       on the other hand, they are marked by a sequence of symbols, we
       cannot regard the process of recognition as a simple process. This is a
       fundamental point and should be illustrated. In most mathematical
       papers the equations and theorems are numbered. Normally the numbers
       do not go beyond (say) 1000. It is, therefore, possible to recognise a
       theorem at a glance by its number. But if the paper was very long, we
       might reach Theorem 15776773344347 ; then7, further on in the paper, we
       might find "... hence (applying Theorem 157767733443477) we have ... ".
       In order to make sure which was the relevant theorem we should have to
       compare the two numbers figure by figure, possibly ticking the figures off
       in pencil to make sure of their not being counted twice. If in spite of this
       it is still thought that there are other "immediately recognisable" squares,
       it does not upset my contention so long as these squares can be found by
       some process of which my type of machine is capable. This idea is
       developed in III below.
         The simple operations must therefore include:
            (a) Changes of the symbol on one of the observed squares.
            (6) Changes of one of the squares observed to another square
          within L squares of one of the previously observed squares.
         It may be that some of these changes necessarily involve a change of
       state of mind. The most general single operation must therefore be taken
       to be one of the following:
            (A) A possible change (a) of symbol together with a possible
          change of state of mind.
            (B) A possible change (6) of observed squares, together with a
          possible change of state of mind.
         The operation actually performed is determined, as has been suggested
       on p. 250, by the state of mind of the computer and the observed symbols.
       In particular, they determine the state of mind of the computer after the
       operation is carried out.
         We may now construct a machine to do the work of this computer. To
       each state of mind of the computer corresponds an " m-configuration " of
       the machine. The machine scans B squares corresponding to the B squares
       observed by the computer. In any move the machine can change a symbol
       on a scanned square or can change any one of the scanned squares to another
       square distant not more than L squares from one of the other scanned
                                     252 A. M. TURING [NOV. 12.
                                    squares Th.                                     e move which is done, and the succeeding configuration, are
                                    determined by the scanned symbol and the m-configuration. The
                                    machines just described do not differ very essentially from computing
                                    machines as defined in § 2, and corresponding to any machine of this type
                                    a computing machine can be constructed to compute the same sequence,
                                    that is to say the sequence computed by the computer.
                                              II. [Type (6)].
                                              If the notation of the Hilbert functional calculus f is modified so as to
                                    be systematic, and so as to involve onty a finite numbe it r of symbols
                                                                                                                                                                                                                                             3
                                    becomes possible to construct an automatic J machine 3C, which will find
                                    all the provable formulae of the calculus§.
                                              Now let a be a sequence, and let us denot(x)e b thy Ge proposition
                                                                                                                                        1                                                      a
                                     "The rc-th figure of a is 1 ", so that' —G(x) means "The z-th figure of a
                                                                                                                                                           a
                                    is 0 ". Suppose further that we can find a set of properties which define
                                    the sequence a and which can be expressed in term(x) ans odf G of the
                                                                                                                                                                                                            a
                                    prepositional functions N(x) meaning "x is a non-negative integer" and
                                    F(x, y) meaning "y = x-\-l ". When we join all these formulae together
                                    conjunctively, we shall have a formula, % say, which defines a. The terms
                                    of 21 must include the necessary parts of the Peano axioms, viz.,
                                                                                                            N(x)-»(3y)F(x, y)) &(F(X,
                                    which we will abbreviate to P.
                                              When we say " 2( defines a", we mean that —21 is not a provable
                                    formula, and also that, for each n, one of the following formulae (A,J or
                                     (BJ is provable.
                                                                                                                                        n
                                                                                                                      %&Ft ^G (uW), (A)«T
                                                                                                                                                   a                                                                                        B
                                    where F™ stands  for F{u, u') & F(u', u") & ... F^-v, u™).
                                               f The expression "the functional calculus" is used throughou restrictedt to mean the
                                    Hilbert functional calculus.
                                               + It is most natural to construct first a (§ 2 choic) to do thise machin. Bue t it is
                                    then easy to construct the required automatic machine. We can suppose that the choice3
                                    are always choices between two possibilities 0 and 1. Each proof will then be determined
                                    by a sequence of choices i i , ..., ?„ (i  = 0 or 1, u = 0 or 1, ... =, i 0 or 1), and hence
                                                                                                lt     2                      x                                                                  n
                                    the numbe 2r " + i  2"~^-\-i 2"---\-...-\-i  completely determine proof Th. s thee automatic
                                                                             1                   2                          n
                                    machine carries out successively proof 1, proof 2, proof 3, ....
                                               § The author has found a description of such a machine.
                                               II The negation sign is written before an expression and not over it.
                                                                                                                                               1
                                              *\ A sequence of r primes is denoted b. y '''-
               1936.]  ON COMPUTABL 25E NUMBERS.                                                                                                       3
                   I say that a is then a computable sequence: a 'JC machin to compute                      e
                                                                                          a
               a can be obtained by a fairly simple modification of JC
                   We divide the motion of K into sections. The n-th section is devoted
                                                   a
               to finding the n-th figure of a. After the
                                                               (n— l)-th section is finished a double
               colon :: is printed after all the symbols, and the succeeding work is done
               wholly on the squares to the right of this double colon. The first step is to
               write the letter "A " followed by the formula) (A and then " B " followed
                                                                          n
               by (B). The machin thee Kn starts to do the wor JCk o, buf t whenever
                       n                       a
               a provable formula is found, this formula is compared wit) anhd (A with
                                                                                           n
                (B ). If i its the same formula as (A ), then the figure " 1 " is printed, and
                   n                                       n
               the n-th. section is finished. I is (B,Jf it    , then " 0 " is printed and the section
               is finished. If it is different from both, then the work of K is continued
               from the point at which it had been abandoned. Sooner or later one of
               the formulae (A) or (B) is reached; this follows from our hypotheses
                                    n        ?1
               about a and 21 an,     d the known natur JCe o. Hencf                 e the n-th section will
               eventually be finished. 3C is circle-free; a is computable.
                                               O
                    It can also be shown that the numbers a definable in this way by the use
               of axioms include all the computable numbers. This is done by describing
               computing machines in terms of the function calculus.
                    It must be remembered that we have attached rather a special meaning
               to the phrase " 21 defines a ". The computable numbers do not include all.
                (in the ordinary sense) definable numbers. Let 8 be a sequence whose
               n-th figure i 1s  or 0 according as n is or is not satisfactory. It is an imme-
               diate consequence of the theorem § o 8f tha 8t  is not computable. It is (so
               far as we know at present) possible that any assigned number of figures of 8
               can be calculated, but not by a uniform process. When sufficiently many
               figures of 8 have been calculated, an essentially new method is necessaiy in
               order to obtain more figures.
                    III. This may be regarded as a modification of I or as a corollary of II.
                   We suppose, as in I, that the computatio ins carried out on a tape; but we
               avoid introducing the "state of mind" by considering a more physical
               and definite counterpart of it. It is always possible for the computer to
               break off from his work, to go away and forget all about it, and later to come
               back and go on with it. I hfe does this he must leave a note of instructions
                (written in some standard form) explaining how the work is to be con-
               tinued. This note is the counterpart of the "state of mind". We will
               suppose that the computer works in such a desultory manner that he never
               does more than one step at a sitting. The note of instructions must enable
               him to carry out one step and write the next  note. Thus the state of progress
               of the computation at any stage is completely determined by the note of
               254 A. M. TURING [NOV. 12,
               instructions and the symbols on the tape. That is, the state of the system
               may be described by a single expression (sequence of symbols), consisting
               of the symbols on the tape followed by A (which we suppose not to appear
               elsewhere) and then by the note of instructions. This expression may be
               called the "state formula". We know that the state formula at any
               given stage is determined by the state formula before the last step was
               made, and we assume that the relation of these two formulae is expressible
               in the functional calculus. In other words, we assume that there is an
               axiom 2( which expresses the rules governing the behaviour of the
               computer, in terms of the relation of the state formula at any stage to the
               state formula at the preceding stage. If this is so, we can construct a
               machine to write down the successive state formulae, and hence to
               compute the required number.
                     10. Examples of large classes of numbers which are computable.
                    It will be useful to begin with definitions of a computable function of
               an integral variable and of a computable variable, etc. There are many
               equivalent ways of defining a computable function of an integral
               variable. The simplest is, possibly, as follows. If y is a computable
               sequence in which 0 appears infinitely! often, and n is an integer, then let
               us define £(y, n) to be the number of figures 1 between the n-th and the
                (?i-\- l)-th figure 0 in y. The <f)(n) ins computable if, for all n and some y,
               .<f>(n) = £(y, n). An equivalent definition is this. Let H(x, y) mean
               <f)(x) = y. Then, if we can find a contradiction-free axiom 21^, such that
                2^-* P, and if for each integer n there exists an integer N, such that
                                             % &
                and such that m=£<f>(n),, if         then, for some N',
                                           % &
                then <j> may be said to be a computable function.
                    We cannot define general computable functions of a real variable, since
                there is no general method of describing a real number, but we can define
                a computable function of a computable variable. If n is satisfactory,
               let y be the number compute ./Ud {n), by and let
                     n
                    | If *Al computes y, then the problem whether .11 prints 0 infinitely often is of the
                same character as the problem whether A\, is circle-free.
                1936.] ON COMPUTABL 25E NUMBERS.                                                                                                        5
                unless y = 0 or y — 1, in either of which case = 0. Thens a                                  , as n
                          n             n                                          n
                runs through the satisfactory run numberss throug, ah the computable
                                                                    n
                numbersf No.             w <f)(n) let  be a computable function which can be
                shown to be such that for any satisfactory argument its value is satis-
                factory %. Then the function /, define) —d b a^y f(a, is a computable
                                                                         n        n)
                function and all computable functions of a computable variable are
                expressible in this form.
                    Similar definitions may be given of computable functions of several
                variables, computable-valued functions of an integral variable, etc.
                    I shall enunciate a number of theorems about computability, but I
                shall prove only (ii) and a theorem similar to (iii).
                    (i) A computable function of a computable function of an integral or
                computable variable is computable.
                    (ii) Any function of an integral variable defined recursively in terms
                of computable functions is computable. I.e. if 0(ra, n) is computable, and
               r is some integer, the rj(n)n     is computable, where
                    (iii) If <f> (m, n) is a computable function of two integral variables, then
               <j>{n, n) is a computable function of n.
                    (iv) If (j>(n) is a computable function whose value is always 0 or 1, then
               the sequence whose fi-th figure <f>(n) is         is computable.
                    Dedekind's theorem does not hold in the ordinary form if we replace
               *' real'' throughout by '' computable''. But it holds in the following form :
                    (v) If G(a) is a propositional function of the computable numbers and
                                     (a) (3a)(3jB){G(a)&(-G(j8))},
                                     (6) Q(a)
               and there is a general process for determining the truth value of G(a), then
                    f A functio man ay be defined in many other ways so as to run through the
                                   n
               computable numbers.
                    J Although it is not possible to find a general process for determining whether a given
               number is satisfactory, it is often possible to show that certain classes of numbers are
               satisfactory.
                 256 A. M. TURING [NOV. 12
                                                                                                                r
                 there is a computable number £ such that
                     In other words, the theorem holds for any section of the computables
                such that there is a general process for determining to which class a given
                number belongs.
                     Owing to this restriction of Dedekind's theorem, we cannot say that a
                computable bounded increasing sequence of computable numbers has a
                computable limit. This may possibly be understood by considering a
                sequence such as
                                             l ± 1 I I I
                                             J                              j
                                              -5 2' 5 io' 8 2 »'  
                     On the other hand, (v) enables us to prove
                     (vi) If a and /? are computable an /?d an ad < <£(a) < 0 < </>(/?),                 where
                (f>(a) is a computable increasing continuous function, then there is a unique
                computable number y, satisfying a < y < fi <f>(y) and  = 0.
                     Computable convergence.
                     We shall say that a sequenc of computable fi                               e numbers converges
                                                                 n
                computably if there is a computable integral valued function N(e) of the
                computable variable e, such that we can show that, if e > 0 and n > N(e)
                and m > N(e), the \pn—j8 | < e.
                                             n     m
                     We can then show that
                     (vii) A power series whose coefficients form a computable sequence of
                computable numbers is computably convergent at all computable points
                in the interior of its interval of convergence.
                     (viii) The limit of a computably convergent sequence is computable.
                     And with the obvious definition of " uniformly computably convergent":
                     (ix) The limit of a uniformly computably convergent computable
                sequence of computable functions is a computable function. Hence
                     (x) The sum of a power series whose coefficients form a computable
                sequence is a computable function in the interior of its interval of
                convergence.
                     From (viii) an TT—d         4(1—i-|--i—...) we deduc TTe tha is computablet                         .
                     From e=l + l+n-j-+»-j+... we deduce that e is computable.
                                                             1936.] OlST COMPUTABLE NUMBERS. 257
                                                                            From (vi) we deduce that all real algebraic numbers are computable.
                                                                            From (vi) and (x) we deduce that the real zeros of the Bessel functions
                                                            are computable.
                                                                             Proof of (ii).
                                                                            Let H(x, y) mean "r](x) = y", and let K{x, y, "(f>(x, z) mea y) =n z".
                                                            21^ is the axiom fo <f>(x,r                                                                                                 y). We tak 31e t,o be
                                                            % & P & (F{x, y)-*Q{x, y)) & & [G{x, G(y, y) z)->G(x, z))
                                                                                                        & (FW-*H{U, VP>)) & (J(v, w &)  #(v, x &)  Z(w, x z)->H(iv, z))
                                                                                                                                                                                                                                                                                                                                                               }
                                                                                                        & [£f(w 2) &,  ^(2 <),                                                                                  (?(<v                z, )
                                                                            I shall not give the proof of consistenc %. Sucy of                                                                                                                                                                                                                             h a proof may be
                                                                                                                                                                                                                                                                                                            n
                                                            constructed by the methods used in Hilbert and Grundlagen Bernays der,
                                                            Mathematik (Berlin, 1934), p. 209 et seq. The consistency is also clear
                                                            from the meaning.
                                                                            Suppose that, for some n, N, we have shown
                                                                                                                                                                         % &
                                                            then, for some M,
                                                                                                                                                        % &
                                                                                                                                                                                    &
                                                            and
                                                            Hence 21,
                                                            Also ST &                                                                                                                                                                                                                                                                                                                                 ,
                                                            Hence for each w some formula of the form
                                                           is provable. Also, if M'^M and if'^m and m^r)(u), then
                                                                                                                                                                                                                                                                                                              m
                                                                                                                                             SI, & FW^G^W), u^) v G(u^ \
                                                                            8EB. 2 VOL.                                          42. NO.                              2145.                             .
                     258 A. M. TURING [NOV. 12,
                      and
                                                          n         (m)              m
                          2( & FW)-^ f {G(u^^, w) v G(u^\
                                                                                  &
                                                                                               n
                      Hence 21 & FW"> -> (-H{u^\ u™)).,
                           The conditions of our second definition of a computable function are
                      therefore satisfied. Consequently rj is a computable function.
                            Proof of modified a                     form of (iii).
                            Suppose that we are given a machine Tl, which, starting with a tape
                      bearing on i 9t  9 followed by a sequence of any number of letters "F" on
                      P-squares and in the m-configuration b, will compute a sequence y
                                                                                                                                                   n
                      depending on the number n of letters " F ". <f> If(m) is the m-th figure of
                                                                                                              n
                      y , then the sequenc /3 whose                  e n-th. figure is  <f> {n) is computable.
                       v                                                                               n
                            We suppose that the table for Tl has been written out in such a way
                      that in each line only one operation appears in the operations column. We
                      also suppose that S, 0, 0, and 1 do not occur in the table, and we replace
                      9 throughout by 0, 0 by 0, and 1 byl. Further substitutions are then
                      made. Any line of form
                                              21                a-               PO
                      we replace by                                                                            95
                                              21                a                PO
                      and any line of                      form                                       te(23,  u, h, k)
                                                    the
                                              21                a                 Pi
                      by                      2(                a                 Pi                           93
                                                                                                      re(93,   t>, h, k)
                      and we add to the table the following lines:
                                      u pe(u 0)
                                                                                                                          l5
                                      Uj. R, Pk, R, P0, R, P0 u
                                                                                                                          2
                                      u  re(u, u, k, h)
                                        2                                                                           3     3
                                      u  pe(u, F)
                                        3                                                                                2
                       and similar line x>s wit for uh  and 1 for 0 together wit th followineh                                                        g line
                                       c R, PE, R, Ph 6.
                                                                                                    (
                             We then have the table for the machinH/ whiche computes jS. The
                       initial m-configuration is c, and the initial scanned symbol is the second a.
                   1936.] ON COMPUTABL 25E NUMBERS.                                                                                                                                      9
                                       11. Application to the Entscheidungsproblem.
                        The results of § 8 have some important applications. In particular, they
                  can be used to show that the Hilbert Entscheidungsproblem can have no
                  solution. For the present I shall confine myself to proving this particular
                  theorem. For the formulation of this problem I must refer the reader to
                  Hilbert and Ackermann's Grundziige der Theoretischen Logik (Berlin,
                   1931),  chapter 3.
                        I propose, therefore, to show that there can be no general process for
                  determining whether a given formula 2( of the functional calculus K is
                  provable, i.e. that there can be no machine which, supplied with any one
                   21 of these formulae, will eventually say whethe 21 isr provable.
                        It should perhaps be remarked that what I shall prove is quite different
                   from the well-known results of  Godelf.  G odel has shown that (in the forma-
                  lism of Principia Mathematica) there are proposition 21 such thas                                      t neither
                   '21  nor — 21 is provable. As a consequence of this, it is shown that no proof
                  of consistency of Principia Mathematica (or of K) can be given within that
                   formalism. On the other hand, I shall show that there is no general method
                   which tells whether a given formul %a is provable in K, or, what comes to
                   the same, whether the system consisting of K with —21 adjoined as an
                  cextra axiom is consistent.
                        If the negation of what Godel has shown had been proved, i.e. if, for each
                   21, either 21 or — 21 is provable, then we should have an immediate solution
                   of the Entscheidungsproblem. For we can inven JC whicht a machin will e
                   prove consecutively all provable formulae. Sooner or later JC will reach
                   either 21 or —21 I.             f it reache 21s the,    n we know that 2( is provable. If it
                   reaches — 21, then, sinc Ke  is consistent (Hilbert and Ackermann, p. 65), we
                   know that 21 is not provable.
                        Owing to the absence of integers in K the proofs appear somewhat
                  lengthy. The underlying ideas are quite straightforward.
                        Corresponding to each computing machine it we construct a formula
                  Un (it) and we show that, if there is a general method for determining
                  whether Un (.11) is provable, then there is a general method for deter-
                  mining whether it ever prints 0.
                        The interpretations of the propositional functions involved are as
                  follows :
                             x         s
                        Rst( > V) i  to be interpreted as "in the complete configuration x (of
                  J/l) the symbol on the square y is S".
                                                                   t Loc. cit.
                                                                                                                  S2
                               260 A. M. TURING [NOV. 12,
                                       I(x, y) is to be interpreted as "in the complete configuration x the
                               square y is scanned".
                                       K (x) is to be interpreted as "in the complete configuration x the
                                          Qm
                              m-configuration is q .
                                                                                m
                                                                                                           st
                                       F(x, y) is to be interpreted ays is the immediate successor of x ".
                                      Inst {q Sj 8  L 37} is to be an abbreviation for
                                                       t         k
                               (x, y, x', y') I (B(x, y) k I(x, y) k(x) K k F(x, x') k F(y', y))
                                                                     Sj                                               8i
                                                                            fI{x' ')kB {x',y)kK {x')
                                                                                    iy          Sk                    qi
                                                                                                       k (z) \_F{y', z)v(R(x, z) + R (x', z)
                                                                                                                                                 Sj                           ak
                                                                    Inst {q 8, S  R q} and Ins {q 8 St N q ]
                                                                                     {          k          t                                     t    j     k          {
                              are to be abbreviations for other similarly constructed expressions.
                                      Let us put the description o .1f1 into the first standard form § o 6f . This
                              description consists of a number of expressions such 8 a Ss "q Lq" (or
                                                                                                                                                                       {     i      k         t
                              with ROT N substituted for L). Let us form all the corresponding expres-
                              sions such as Ins {qt  $ - S  L q} and take their logical sum. This we call
                                                                               t    3      k          t
                              Des(.U).
                                      The formula Un(.U) is to be
                               {3u)[N{u) &, (x)(N{x)->{3x')F(x, X'))
                                                                                               &. (y, z)(F(y, z)->N(y) k R N(z))(% y), & (y)
                                                                                                                                                                                               >%
                                                                                                & I(u, u) & K {u) & Des(..U)l
                                                                                                                                  qi
                                                                                               ->(35) (30 [N(s) & N(t) & R (s, t)).
                                                                                                                                                                   Sl
                               [K{u)&... &Des(.U)] may be abbreviated to A(M).
                                      When we substitute the meanings suggested on p. 259-60 we find that
                              Un(.U) has the interpretation "in some complete configuratio S-^                                                                                                                            n of M,
                               (i.e. 0) appears on the tape ". Corresponding to this I prove that
                                       (a) If S appears on the tape in some complete configuration o  Uf , then
                                                        x
                              Un(U) is provable.
                                       (b) If Un ( U) is provable, then 8 appears on the tape in some complete
                                                                                                                    X
                              configuration of  11.
                                      When this has been done, the remainder of the theorem is trivial.
                  1936.]  ON COMPUTABL 26E NUMBERS.                                                                                                                                    1
                       LEMMA 1. // S appears on the tape in some complete configuration of
                                               ±
                  .At, then Un(.At) is provable.
                       We have to show how to prove Un (it). Let us suppose that in the
                  n-th complete configuration the sequence of symbols on the tape is
                   &r(n,o)> *^r(n,i)5 >       $i<n,nh followed by nothing but blanks, and that the
                  scanned symbol is the i(n)-th, and that the m-configuratio). Then is q^                                             n
                                                                                                                  n
                  we may form the proposition
                                                                                          n
                                  , u) & R      JvF>, u') & ... & R,M \
                                             Srlu                                 Sr{H
                   which we may abbreviate. to CC
                                                                      n
                                                                                                       (r)
                       As before, F{u, & F{u', u") u') & .. &.                         F{u^\ w) is abbreviated
                           r)
                   to F<.
                        I shall show that all formulae of the form & A{-W) F™^- CC (abbre-
                                                                                                                    n
                   viated to CF) are provable. The meaning i osf " CF The n-th. complete
                                      n                                                      n
                   configuration of it is so and so ", where "so and so " stands for the actual
                   n-th. complete configuration of it shoul. Thad be provablt CF                                                              e is
                                                                                          n
                   therefore to be expected.
                        CF  is certainly provable, for in the complete configuration the symbols
                             0
                   are all blanks, the m-configuratio, ann id ths qe scanned square is u, i.e.
                                                                             x
                   CC is
                        0                          (y) R {u, y) & I(u, u) & K (u).
                                                          So                               Ql
                   A(o\i)->CC  is then trivial.
                                   0
                        We next show that CF^-CF                         is provable for each n. There are
                                                           n        n+1
                   three cases to consider, according as in the move from the n-th to the
                   (n-j-l)-th configuration the machine moves to left or to right or remains
                   stationary. We suppose that the first case applies, i.e. the machine
                   moves to the left. A similar argument applies in the other cases. If
                   r[n,i(n)}=a, r(n-\-l, i(n-\-l)} = c, k(i(n)j =b, and k(i(n-\-l)) =d,
                   then Des (it) must include Ins {q 8t  S  L q^ as one of its terms, i.e.
                                                                     a   b   d
                                                           n
                   Hence A(.AV) Fi +n^1nat{q 8 8 Lq} &                                                                            &
                                                                            a b d     c
                                                                          n+
                   But Inst S 8Lq} & ^ w^(CC-                                                                  {q
                                                  a   b   d    c                          n
                   is provable, and so therefore is
                                                                     n
                                                  A (  It) & F( +»-> (CC  -» C(L .,
                                                                                     n
              262 A. M. TURING [NOV. 12,
                                                                  n
              and (AIM) & F™^CC ) -+ (.4(it &) F<+V^CC ),
                                            n                             n+1
              i.e. CF-»CF.
                                                 m      n+V
                  CF  is provable for each n. Now it is the assumption of this lemma
                     n
              that 8 appears somewhere, in some complete configuration, in the sequence
                    ±
              of symbols printed by M; that is, for some integer has                            s N, K, CG
                                                                                    N
                    N                                                       {N      (K)
              R (u^ \u^) as one of its terms, and therefor^R {u \ ue CC) is
               S[                                                    N   Sl
              provable. We have then
                                                             N
              and A(.M)&FW->CC.
              We also have
                                                f
                           (3u)A(M)-+(3u)(3u)...
             where N' — max (N, K). And so
                                              7
                            (3u) A (. U.)  -> (3^ )) (3uW) R
                                                          S
                            (3u)A(M)->(3s)(3t)R (s,t),
                                                  Sl
             i.e. Un(-U) is provable.
                 This completes the proof of Lemma 1.
                 LEMMA 2. // Un(-U provable,) is      then S appears on the tape in some
                                                            1
              complete configuration of M.
                 If we substitute any propositional functions for function variables in
              a provable formula, we obtain a true proposition. In particular, if we
              substitute the meanings tabulated on pp. 259-260 in Un(^U), we obtain a
              true proposition with the meanin appearg " S       s somewhere on the tape in
                                                     1
              some complete configuration of .M".
                 We are now in a position to show that the Entscheidungsproblem cannot
              be solved. Let us suppose the contrary. Then there is a general
              (mechanical) process for determining whether Un(.tl) is provable. By
             Lemmas 1 and 2, this implies that there is a process for determining whether
              .41 ever prints 0, and this is impossible, by §8. Hence the Entscheidungs-
             problem cannot be solved.
                 In view of the large number of particular cases of solutions of the
             Entscheidungsproblem for formulae with restricted systems of quantors, it
              1936.] ON COMPUTABL 26E NUMBERS.                                                                                              3
              is interesting to express Un(ii) in a form in which all quantors are at the
              beginning. Un(At) is, in fact, expressible in the form
                                        {u){3x){w){3u )...{3u )%, (I)
                                                       1       n
              where 95 contains no quantors, and n = 6. By unimportant modifications
              we can obtain a formula, with all essential propertie Un(.it)s of  which,     is of
              form (I) with n = 5.
                 Added 28 August, 1936.
                                                  APPENDIX.
                                  Computabiliiy and effective calculability
                  The theorem that all effectively calculable (A-definable) sequences are
              computable and its converse are proved below in outline. It is assumed,
              that the terms "well-formed formula " (W.F.F.) and "conversion " as used
              by Church and Kleene are understood. In the second of these proofs the
              existence of several formulae is assume proofd withou thes;              t   e formulae
              may be constructed straightforwardly with the help of, e.g., the
              results of Kleene in "A theory of positive integers in formal logic'",
              American Journal of Math., 57 (1935), 153-173, 219-244.
                  The W.F.F. representing an integer n will be denoted. W by N e shall
                                                                                    n
              say that a sequence y whose n-th figure (f> is(n) is A-definable or effectively
                                                                 y
              calculable if l-\-</>(u) is a A-definable function of n, i.e. if there is a W.F.F.
                                     y
              M such that, for all integers n,
                 y
              i.e. {M} (N ) is convertible into Xxy.x(x(y)) or into Xxy.x(y) according as
                      y    n
              the n-th figure A i os 1f  or 0.
                  To show that every A-definable sequence y is computable, we have to
              show how to construct a machine to compute y. For use with machines it
              is convenient to make a trivial modification in the calculus of conversion.
              This alteration consists in using x, x', x", ... as variables instead of
              a, b, c, .... We now construct a machin JL whiche         , when supplied with the
              formula M, writes down the sequence y. The constructio X is some- n of
                          y
              what similar to that of the machine K which proves all provable formulae
              of the functional calculus. We first construct a choice machin whiche, £-
                                                                                         v
              if supplied with a W.F.F., M say, and suitably manipulated, obtains any
              formula into which M is convertible can the. £n be modified so as to
                                                             ±
              yield an automatic machine £- which obtains successively all the formulae
                                                2
               264 A. M. TURING [NOV. 12,
              into which M is convertible (cf. foot-not £>e p. 252). The machine
                            as a ar
              includes ^         P^. The motion of the machine X when supplied
                          2
              with the formul ia Ms divided into sections of which the n-th. is
                                      y
              devoted to finding the n-th figure of y. The first stag n-th.e in sectio this      n
              is the formation o} {Nf {M). This formula is then supplied to the
                                         y     n
              machine £, which converts it successively into various other formulae.
                          2
              Each formula into which it is convertible eventually appears, and each, as
              it is found, is compared with
              and with Aa:|Aa;'[{a;}(a;')] |, i.e. N
                                                                    v
              If it is identical with the first of these, then the machine prints the figure 1
              and the n-th section is finished. If it is identical with the second, then 0
              is printed and the section is finished. If it is different from both, then the
              work of .!!  is resumed. By hypothesis,}(N {M) is convertible into one of
                         2                                   y   n
              the formulae N or N; consequently the n-th section will eventually be
                               2      x
              finished, i.e. the n-th. figure of y will eventually be written down.
                  To prove that every computable sequence y is A-defUiable, we must
              show how to find a formula suc M          h that, for all integers n,
                                                y
                                          {M}(N )c(mvN         .
                                             y   n       1+<j)y{n)
                  Let .11 be a machine which computes y and let us take some description
              of the complete configurations - oU bf y means of numbers e.g.,      w mae y take
              the D.N of the complete configuration as described in §6. Let £(n) be
              the D.N of the w-th complete configuration of M. The table for the
              machine ..U gives us a relation between £(n-\-l) and £(n) of the form
              where p  is a function of very restricted, although not usually very simple,
                       y
              form : it is determined by the table for U.. p is A-defmable (I omit the proof
                                                              y
              of this), i.e. there is a W.F.F suc. A    h that, for all integers n,
                                                y
                  Let U stand for
                                            Xu[{{u}(A ))(N )],
                                                       y     r
              where r=£(0); then, for all integers n,
                                            {U }(NJ conv N, .
                                               y               {n)
                                                                                                                                    265
                    1936.] ON COMPUTABLE NUMBERS.
                         It may be proved that there is a formula V such that
                                                        conv N if, in going from the n-th t (n-\-o the l)-th
                                                                    x
                                                                         complete configuration, the figure 0 is
                                                                         printed.
                                                        conv JV  if the figure 1 is printed,
                                                                    2
                                                        conv N otherwise.
                                                                   3
                         Let W stand for
                                    y
                    so that, for each integer n,
                                                                                    conv {W} (N),
                                                                                                 y       n
                    and let Q be a formula such that
                                                           \{Q}(W )UN ) convN,
                                                                      y       s                r(s)
                    where r(s) is the 5-th integer q for which {W} (N ) is convertible into either
                                                                                         y      Q
                    N-L or JV. Then, i standf j|f                            s for
                                   a                      7
                    it will have the required property f.
                          The Graduate College,
                                   Princeton University,
                                                 New Jersey, U.S.A.
                          t In a complete proof of the A-definability of computable sequences it would be best to
                    modify this method by replacing the numerical description of the complete configurations
                    by a description which can be handled more easily with our apparatus. Let us choose
                    certain integers to represent the symbols and the m-configurations of the machine.
                    Suppose that in a certain complete configuration the numbers representing the successive
                    symbols on the tape ar ses ... s, that the m-th symbol is scanned, and that the ?n.-configur-
                                                     1 2     n
                    ationhas the number t; then we may represent this complete configuration by the formula
                                                   „ N» ... #,„,_,],      [N, N, J, [N ... N, ]],
                                                                               t   a         SM+V            Slt
                    where                               [a, 6] stands fo f"r \u -{ {u} (a) )(&)]»
                                                  [a, 6, c] stand As foM Pr I \ {u} (a)}(b)  J (c)l,
                    etc.
